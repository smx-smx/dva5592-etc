<?xml version="1.0" encoding="utf-8"?>
<CLISH_MODULE xmlns="http://clish.sourceforge.net/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://clish.sourceforge.net/XMLSchema                      http://clish.sourceforge.net/XMLSchema/clish.xsd"><PLUGIN name="cmplugin" file="/usr/lib/cmplugin.so" /><COMMAND name="!" help="Comments" args="comment" args_help="ignored comment text"><ACTION builtin="clish_nop" /></COMMAND><COMMAND name="exit"><ACTION builtin="clish_nested_up" /></COMMAND><COMMAND name="quit" help="Quit the current CLI session"><ACTION builtin="clish_close" /></COMMAND><OVERVIEW>
CONTEXT SENSITIVE HELP
[?] - Display context sensitive help. This is either a list of possible
      command completions with summaries, or the full syntax of the
      current command. A subsequent repeat of this key, when a command
      has been resolved, will display a detailed reference.

AUTO-COMPLETION
The following keys both perform auto-completion for the current command line.
If the command prefix is not unique then the bell will ring and a subsequent
repeat of the key will display possible completions.

[enter] - Auto-completes, syntax-checks then executes a command. If there is
          a syntax error then offending part of the command line will be
          highlighted and explained.

[space] - Auto-completes, or if the command is already resolved inserts a space.

MOVEMENT KEYS
[CTRL-A] - Move to the start of the line
[CTRL-E] - Move to the end of the line.
[up]     - Move to the previous command line held in history.
[down]   - Move to the next command line held in history.
[left]   - Move the insertion point left one character.
[right]  - Move the insertion point right one character.

DELETION KEYS
[CTRL-C]    - Delete and abort the current line
[CTRL-D]    - Delete the character to the right on the insertion point.
[CTRL-K]    - Delete all the characters to the right of the insertion point.
[CTRL-U]    - Delete the whole line.
[backspace] - Delete the character to the left of the insertion point.

ESCAPE SEQUENCES
!!  - Subsitute the the last command line.
!N  - Substitute the Nth command line (absolute as per 'history' command)
!-N - Substitute the command line entered N lines before (relative)
    </OVERVIEW><STARTUP view="main-view"><DETAIL>
********************************************
*                 D-Link                   *
*                                          *
*      WARNING: Authorised Access Only     *
********************************************
        </DETAIL><ACTION>
            echo "Welcome"
            . /etc/clish/predefine-cli-tr.sh
        </ACTION></STARTUP><COMMAND name="showRunningConfigScript" no-config-gen="true"><PARAM name="url" optional="true" ptype="STRING" /><ACTION>
    if [ "${__cur_depth}" == "0" ]; then
        VIEW="config-view"
        # Create default path to check User Interface permissions for highest CLI layer
        clishPath="clish/configure"
    else
        VIEW="${__cur_view}"
        # Create current clish path to check User Interface permisions
        clishPath="clish"
        for partPath in ${__cur_pwd}
        do
            case $partPath in
            "Device."*)
            ;;
            *)
                eval partPath=$\{partPath%'\"'\}
                eval partPath=$\{partPath#'\"'\}
                eval clishPath=$\{clishPath\}/$\{partPath\}
            ;;
            esac
        done
    fi
    if [ -n "${url}" ]; then
        FILE=`mktemp`
        if [ -z "${obj}" ]; then
            /usr/sbin/running-config -f /tmp/clish/ -view "$VIEW" -path "$clishPath" -user "$USER" > $FILE
        else
            /usr/sbin/running-config -f /tmp/clish/ -view "$VIEW" -obj "${obj}" -path "$clishPath" -user "$USER" > $FILE
        fi
        yaft -u "${url}" -f "$FILE"
        error=$?
        if [ "$error" != "0" ]; then
            echo "Unable to upload file to URL, error code: $error"
            rm -rf "$FILE"
            exit 1
        else
            echo "Successful upload file to URL"
        fi
        rm -rf "$FILE"
    else
        if [ -z "${obj}" ]; then
            /usr/sbin/running-config -f /tmp/clish/ -view "$VIEW" -path "$clishPath" -user "$USER"
        else
            /usr/sbin/running-config -f /tmp/clish/ -view "$VIEW" -obj "${obj}" -path "$clishPath" -user "$USER"
        fi
    fi
    </ACTION></COMMAND><COMMAND name="return" view="config-view" /><COMMAND name="configSave"><ACTION builtin="cmwrap@cmplugin">SAVE</ACTION></COMMAND><VIEW name="main-view" prompt="${CLISH_PROMPT}# "><COMMAND name="show" /><COMMAND name="show date-time" no-config-gen="true"><ACTION>exec date</ACTION></COMMAND><COMMAND name="show alg" no-config-gen="true"><ACTION>
      for obj in `cmclient GETO Device.QoS.App.`
      do 
      printf "%-7s %s\n" \
          `cmclient GETV $obj.ProtocolIdentifier | sed 's/urn:dslforum-org://'` \
          `cmclient GETV $obj.Enable`
      done
      </ACTION></COMMAND><COMMAND name="show deviceinfo" no-config-gen="true" escape_chars="&quot;"><ACTION>
        echo "Device information:"
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "Device.DeviceInfo" "all" "yes"
        printf "\nMemory status:"
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "Device.DeviceInfo.MemoryStatus" "all" "yes"
        printf "\nProcess status:"
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "Device.DeviceInfo.ProcessStatus" "all" "yes"
        printf "\nNetwork properties:"
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "Device.DeviceInfo.NetworkProperties" "all" "yes"
        </ACTION></COMMAND><COMMAND name="show driver-log" no-config-gen="true"><ACTION>exec /bin/dmesg</ACTION></COMMAND><COMMAND name="show hosts" no-config-gen="true"><ACTION>
        . /etc/clish/clish-commons.sh
        cell_width="25"
        line_lenght="55"
        cmclient -v objs GETO Device.Hosts.Host
        printf "\nHosts list:\n\n"
        for obj in $objs;
        do
            show_from_cm "$obj" "Alias" "Host name"
            print_horizontal_line "$line_lenght"
            show_from_cm "$obj" "PhysAddress" "Physical address"
            show_from_cm "$obj" "IPAddress" "Primary IP address"
            show_from_cm "$obj" "AddressSource" "Address source"
            cmclient -v var GETV "%($obj).Alias"
            print_2_col_row "Layer1Interface" "$var" "$cell_width"
            show_from_cm "$obj" "HostName" "Host name"
            show_from_cm "$obj" "Active" "Active"
            show_from_cm "$obj" "X_ADB_Domain" "Domain"
            show_from_cm "$obj" "X_ADB_LastUp" "Lastup"

            message="IPv4 address list"
            cmclient -v ip_obj_list GETO "$obj.IPv4Address"
            for ip_obj in $ip_obj_list; do
                cmclient -v var GETV "$ip_obj.IPAddress"
                print_2_col_row "$message" "$var" "$cell_width"
                message=""
            done

            # print Hosts.Host.{i}.IPv6Address.{i} object
            message="IPv6 address list"
            cmclient -v ip_obj_list GETO "$obj.IPv6Address"
            for ip_obj in $ip_obj_list; do
                cmclient -v var GETV "$ip_obj.IPAddress"
                print_2_col_row "$message" "$var" "$cell_width"
                message=""
            done
            print_horizontal_line "$line_lenght"
        done
        </ACTION></COMMAND><COMMAND name="show version" no-config-gen="true"><ACTION>
        . /etc/clish/clish-commons.sh
        cell_width="25"
        line_lenght="55"
        obj="Device.DeviceInfo"

        print_horizontal_line "$line_lenght"
        show_from_cm "$obj" "SoftwareVersion" "Software version"
        show_from_cm "$obj" "HardwareVersion" "Hardware version"
        show_from_cm "$obj" "Manufacturer" "Manufacturer"
        show_from_cm "$obj" "ModelName" "Model name"
        show_from_cm "$obj" "X_ADB_ProfileType" "Profile type"
        print_horizontal_line "$line_lenght"
        </ACTION></COMMAND><COMMAND name="show wifi-channel" no-config-gen="true"><ACTION>
        enable=`cmclient GETV Device.WiFi.Radio.1.Enable`
        if [ "$enable" = "false" ];then
           echo "Wifi 1 Disabled"
        else 
           ch=`cmclient GETV Device.WiFi.Radio.1.Channel`
           echo "Wifi 1 Enables Channel: $ch"
        fi
        enable=`cmclient GETV Device.WiFi.Radio.2.Enable`
        if [ "$enable" = "false" ];then
           echo "Wifi 2 Disabled"
        fi
        if [ "$enable" = "true" ];then
           ch=`cmclient GETV Device.WiFi.Radio.2.Channel`
           echo "Wifi 2 Enables Channel: $ch"
        fi
      </ACTION></COMMAND><COMMAND name="show wireless" no-config-gen="true"><ACTION>. /etc/clish/interface-show.sh "wifi" "all"</ACTION></COMMAND><COMMAND name="show system" /><COMMAND name="show system log" no-config-gen="true" tr-obj="Device.X_ADB_SystemLog.Service"><PARAM name="service" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.Alias" /><PARAM name="level" ptype="FROM_CM" default="7" tr-mapped-to="Priority" /><ACTION>
          cmclient -v component GETV "${service}.Identity"
          /sbin/logc t 0 0 0 0 0 \"[%Y-%M-%DT%H:%m:%s] %t %g %a%n\" $component*${level}
      </ACTION></COMMAND><COMMAND name="show sntp" escape_chars="&quot;" no-config-gen="true"><ACTION builtin="cmshow@cmplugin">Device.Time</ACTION></COMMAND><COMMAND name="show qos" escape_chars="&quot;" no-config-gen="true"><ACTION builtin="cmshow@cmplugin">Device.QoS,Device.QoS.Classification,Device.QoS.App,Device.QoS.Flow,Device.QoS.Policer,Device.QoS.Queue,Device.QoS.QueueStats,Device.QoS.Shaper,Device.QoS.X_ADB_IngressShaper</ACTION></COMMAND><COMMAND name="show dsl" escape_chars="&quot;" no-config-gen="true" show_all_except="yes"><DISPENTRY tr-mapped-to="X_ADB_TR098Reference" /><DISPENTRY tr-mapped-to="X_ADB_LastShowtimeStart" /><DISPENTRY tr-mapped-to="DownstreamAttenuation::/etc/clish/dbmv-conversion.sh::,DownstreamMaxBitRate::/etc/clish/dbmv-conversion.sh::,DownstreamNoiseMargin::/etc/clish/dbmv-conversion.sh::,DownstreamPower::/etc/clish/dbmv-conversion.sh::" /><DISPENTRY tr-mapped-to="UpstreamAttenuation::/etc/clish/dbmv-conversion.sh::,UpstreamMaxBitRate::/etc/clish/dbmv-conversion.sh::,UpstreamNoiseMargin::/etc/clish/dbmv-conversion.sh::,UpstreamPower::/etc/clish/dbmv-conversion.sh::" /><ACTION>
        . /etc/clish/clish-commons.sh
        show_object "Device.DSL.Line" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}" "true"
        show_object "Device.DSL.Line.Stats" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND><COMMAND name="show ppp" escape_chars="&quot;" no-config-gen="true"><ACTION builtin="cmshow@cmplugin">Device.PPP.Interface</ACTION></COMMAND><COMMAND name="show phy-interface" no-config-gen="true"><ACTION>
        /etc/clish/interface-show.sh "ethernet" "all"
        /etc/clish/interface-show.sh "dot11radio" "all"
        /etc/clish/interface-show.sh "xdsl" "all"
      </ACTION></COMMAND><COMMAND name="show dyndns" no-config-gen="true"><ACTION>. /etc/clish/dyndns.sh show_all_clients</ACTION></COMMAND><COMMAND name="show ip" /><COMMAND name="show ip connections" no-config-gen="true"><ACTION>exec /etc/clish/ip-connsummary.sh</ACTION></COMMAND><COMMAND name="show ip nat" no-config-gen="true"><ACTION>
        /etc/clish/ip-nat.sh interface_show
        /etc/clish/ip-nat.sh show
      </ACTION></COMMAND><COMMAND name="show ip dmz" escape_chars="&quot;" no-config-gen="true"><ACTION builtin="cmshow@cmplugin">Device.X_ADB_DMZ</ACTION></COMMAND><COMMAND name="show ip route" escape_chars="&quot;" no-config-gen="true"><ACTION>. /etc/clish/common_route.sh &amp;&amp; route_generic_show all</ACTION></COMMAND><COMMAND name="show ip interface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" /><ACTION>. /etc/clish/interface-show.sh "IP" "${ifname}"</ACTION></COMMAND><COMMAND name="show ip counters"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" /><ACTION>. /etc/clish/interface-show.sh "ip_counters_obj" "${ifname}"</ACTION></COMMAND><COMMAND name="show nas" /><COMMAND name="show nas user" escape_chars="&quot;" no-config-gen="true"><ACTION builtin="cmshow@cmplugin">Device.Services.StorageService.1.UserAccount</ACTION></COMMAND><COMMAND name="show nas groups" escape_chars="&quot;" no-config-gen="true"><ACTION builtin="cmshow@cmplugin">Device.Services.StorageService.1.UserGroup</ACTION></COMMAND><COMMAND name="show nas folder" escape_chars="&quot;" no-config-gen="true"><ACTION builtin="cmshow@cmplugin">Device.Services.StorageService.LogicalVolume.[Status=Online]</ACTION></COMMAND><COMMAND name="show nas filesharing" escape_chars="&quot;" no-config-gen="true"><ACTION builtin="cmshow@cmplugin">Device.Services.StorageService.1.NetworkServer</ACTION></COMMAND><COMMAND name="show nas device" escape_chars="&quot;" no-config-gen="true"><ACTION builtin="cmshow@cmplugin">Device.Services.StorageService.PhysicalMedium.[Status=Online]</ACTION></COMMAND><COMMAND name="show bridging" ref="show@if-bridgingwrapper-view" no-config-gen="true" /><COMMAND name="show ip firewall" ref="show@firewall-main-view" no-config-gen="true" /><COMMAND name="show ip dhcpv4" /><COMMAND name="show ip dhcpv4 server" no-config-gen="true"><ACTION>
        . /etc/clish/dhcp_server_view.sh show_ip_dhcp_servers
      </ACTION></COMMAND><COMMAND name="show ip dhcpv4 binding" no-config-gen="true"><ACTION>
        printf "%-10s %-15s %-20s %-15s %-10s %-15s %-10s\n" \
            "Alias" "IP Address" "MAC" "LeaseTime" "Hostname" "Vendor Class" "Active"
        for obj in $(cmclient GETO "Device.Hosts.Host.[AddressSource=DHCP].[IPAddress>.]")
        do 
            printf "%-10s %-15s %-20s %-15s %-10s %-15s %-10s\n" \
                "$(cmclient GETV $obj.Alias)" \
                "$(cmclient GETV $obj.IPAddress)" \
                "$(cmclient GETV $obj.PhysAddress)" \
                "$(cmclient GETV $obj.LeaseTimeRemaining)" \
                "$(cmclient GETV $obj.HostName)" \
                "$(cmclient GETV $obj.VendorClassID)" \
                "$(cmclient GETV $obj.Active)"
        done
      </ACTION></COMMAND><COMMAND name="show ip dhcpv4 status" no-config-gen="true"><ACTION>
      . /etc/clish/clish-commons.sh
      echo "DHCPv4 Server"
      show_object "Device.DHCPv4.Server" "" "yes"
      echo "Serving Pools:"
      show_all_child_objects "Device.DHCPv4.Server.Pool" "Alias,Status" "no"
      echo "DHCPv4 Relay"
      show_object "Device.DHCPv4.Relay" "" "yes"
      echo "Relaying Pools:"
      show_all_child_objects "Device.DHCPv4.Relay.Forwarding" "Alias,Status" "no"
      </ACTION></COMMAND><COMMAND name="show dlna" no-config-gen="true"><ACTION>
      . /etc/clish/clish-commons.sh

      cmclient -v enable GETV Device.DLNA.X_ADB_Device.Enable

      if [ "$enable" = "true" ]; then
          printf "Status     : %s \n" "enabled"
      else
          printf "Status     : %s \n" "disabled"
      fi
      cmclient -v extIfObj GETV Device.DLNA.X_ADB_Device.Interface
      cmclient -v ipObj GETV $extIfObj.LowerLayers
      cmclient -v ethObj GETV $ipObj.LowerLayers
      cmclient -v ifName GETV $ethObj.Name
      printf "Interface  : %s \n" $ifName
      lvList=""
      for lvObj in `cmclient GETO Device.Services.StorageService.1.LogicalVolume.*.[Status="Online"]`; do 
         cmclient -v lvEnable GETV $lvObj.Enable
         if [ "$lvEnable" = "true" ]; then
             cmclient -v dlnaShare GETV $lvObj.X_ADB_DLNA.Enable
             if [ "$dlnaShare" = "true" ]; then
                 cmclient -v lvName GETV $lvObj.Name
                 lvBaseName=`basename $lvName 2>/dev/null`
                 if [ ! -n "$lvList" ]; then
                     lvList=$lvBaseName
                 else
                     lvList=$lvList,$lvBaseName
                 fi
             fi
         fi
      done
      printf "Shares     : %s \n" $lvList
      </ACTION></COMMAND><COMMAND name="show upnp" escape_chars="&quot;" aux_availability_condition="Device.UPnP.Device"><ACTION builtin="cmshow@cmplugin">Device.UPnP.Device</ACTION></COMMAND><COMMAND name="debug" view="debug-view" /><COMMAND name="diagnostics" view="diagnostics-toplevel-view" viewid="prompt=diagnostics" tr-config-phony="true" /><COMMAND name="system" view="system-view" /><VAR name="VAR_GET_INTERFACE" dynamic="true"><ACTION>
        cmclient -v ifaces GETV ${obj}.Interface
        set -f; IFS=","; set -- $ifaces; unset IFS; set +f
        for l; do
            cmclient -v o GETV $l.Alias
            val="${val:+$val,}$o"
        done
        if [ -n "$val" ]; then
            echo -n "\"$val\""
        fi
        </ACTION></VAR><VAR name="VAR_GET_INTERFACES" dynamic="true"><ACTION>
        cmclient -v ifaces GETV ${obj}.Interfaces
        set -f; IFS=","; set -- $ifaces; unset IFS; set +f
        for l; do
            cmclient -v o GETV $l.Alias
            val="${val:+$val,}$o"
        done
        if [ -n "$val" ]; then
            echo -n "\"$val\""
        fi
        </ACTION></VAR><VAR name="VAR_GET_X_ADB_INTERFACE" dynamic="true"><ACTION>
        cmclient -v ifaces GETV ${obj}.X_ADB_Interface
        set -f; IFS=","; set -- $ifaces; unset IFS; set +f
        for l; do
            cmclient -v o GETV $l.Alias
            val="${val:+$val,}$o"
        done
        [ -n "$val" ] &amp;&amp; echo -n "\"$val\""
        </ACTION></VAR><VAR name="VAR_GET_X_ADB_INTERFACES" dynamic="true"><ACTION>
        cmclient -v ifaces GETV ${obj}.X_ADB_Interfaces
        set -f; IFS=","; set -- $ifaces; unset IFS; set +f
        for l; do
            cmclient -v o GETV $l.Alias
            val="${val:+$val,}$o"
        done
        [ -n "$val" ] &amp;&amp; echo -n "\"$val\""
        </ACTION></VAR><COMMAND name="configure" view="config-view" tr-config-phony="true" /><VAR name="SET_DOM_PAR_FROM_CMD" dynamic="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></VAR><VAR name="SET_DOM_PAR_FROM_FIRSTCMDPAR" dynamic="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></VAR><VAR name="VAR_GET_NAME" dynamic="true"><ACTION builtin="cmwrap@cmplugin">GETV ${obj}.Name</ACTION></VAR><VAR name="VAR_GET_X_ADB_NAME" dynamic="true"><ACTION builtin="cmwrap@cmplugin">GETV ${obj}.X_ADB_Name</ACTION></VAR><VAR name="VAR_RUNCONF_CLASSINDEX_ROUTING" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        var_runconf_classIndex ${obj}.ForwardingPolicy get_forwarding_policies
      </ACTION></VAR><COMMAND name="factory" view="factory-view">
    </COMMAND></VIEW><VIEW name="debug-view" prompt="${CLISH_PROMPT}(debug)# "><COMMAND name="exit" view="main-view" /><COMMAND name="cpu"><ACTION>. /etc/clish/sysinfo.sh cpu</ACTION></COMMAND><COMMAND name="dhcp" /><COMMAND name="dhcp release"><ACTION>. /etc/clish/dhcp_dbg.sh release </ACTION></COMMAND><COMMAND name="dhcp renew"><ACTION>. /etc/clish/dhcp_dbg.sh renew </ACTION></COMMAND><COMMAND name="dhcp info"><ACTION>. /etc/clish/dhcp_server_view.sh null dhcp_clients_show</ACTION></COMMAND><COMMAND name="wireless" /><COMMAND name="wireless show"><ACTION>. /etc/clish/interface-show.sh "wifi" "all"</ACTION></COMMAND><COMMAND name="wireless force5Gchannel" aux_availability_condition="WiFi.Radio.[OperatingFrequencyBand=5GHz]"><PARAM name="channel" ptype="COMPLETE" ptype_args="get_current_channel_list" help="select channel form the list" /><PARAM name="bandwidth" ptype="STRING" help="20MHz, 40MHz, 80MHz or Auto" optional="true" /><ACTION>
        cmclient SET "Device.WiFi.Radio.[OperatingFrequencyBand=5GHz].AutoChannelEnable" false
        cmclient -u force5Gchannel SET "Device.WiFi.Radio.[OperatingFrequencyBand=5GHz].Channel" "${channel}"
        case "${bandwidth}" in
          20MHz|40MHz|80MHz|Auto)
            cmclient SET "Device.WiFi.Radio.[OperatingFrequencyBand=5GHz].OperatingChannelBandwidth" "${bandwidth}"
        esac
        cmclient SAVE
      </ACTION></COMMAND><COMMAND name="date"><ACTION>. /etc/clish/date.sh</ACTION></COMMAND><COMMAND name="layout"><ACTION> cat /proc/mtd</ACTION></COMMAND><COMMAND name="memory" /><COMMAND name="memory status"><ACTION> free</ACTION></COMMAND><COMMAND name="netstat"><ACTION> netstat -lne</ACTION></COMMAND><COMMAND name="time"><ACTION> exec date +%T</ACTION></COMMAND><COMMAND name="uptime"><ACTION>. /etc/clish/sysinfo.sh uptime</ACTION></COMMAND><COMMAND name="adslctl" /><COMMAND name="adslctl --version"><ACTION> xdslctl --version</ACTION></COMMAND><COMMAND name="adslctl info"><ACTION> xdslctl info</ACTION></COMMAND><COMMAND name="adslctl info --state"><ACTION> xdslctl info --state</ACTION></COMMAND><COMMAND name="adslctl info --show"><ACTION> xdslctl info --show</ACTION></COMMAND><COMMAND name="adslctl info --stats"><ACTION> xdslctl info --stats</ACTION></COMMAND><COMMAND name="adslctl info --cfg"><ACTION> xdslctl info --cfg</ACTION></COMMAND><COMMAND name="adslctl info --pbParams"><ACTION> xdslctl info --pbParams</ACTION></COMMAND><COMMAND name="adslctl info --vendor"><ACTION> xdslctl info --vendor</ACTION></COMMAND><COMMAND name="adslctl connection" /><COMMAND name="adslctl connection --down"><ACTION> xdslctl connection --down</ACTION></COMMAND><COMMAND name="adslctl connection --up"><ACTION> xdslctl connection --up</ACTION></COMMAND><COMMAND name="adslctl profile" /><COMMAND name="adslctl profile --show"><ACTION> xdslctl profile --show</ACTION></COMMAND><COMMAND name="dsldiag" /><COMMAND name="dsldiag enable"><ACTION>
        /etc/clish/dsldiag.sh enable
      </ACTION></COMMAND><COMMAND name="dsldiag disable"><ACTION>
        /etc/clish/dsldiag.sh disable
      </ACTION></COMMAND><COMMAND name="kernel" /><COMMAND name="kernel cpu_load_on"><PARAM name="sec" ptype="TYPE_U32" /><ACTION> /etc/clish/cpu_load_on.sh "${sec}" &amp; </ACTION></COMMAND><COMMAND name="kernel cpu_load_off"><ACTION>exec killall cpu_load_on.sh 2> /dev/null</ACTION></COMMAND><COMMAND name="kernel cpu_load_avg"><ACTION>
        IFS=" " read a b c _ &lt; /proc/loadavg
        printf "%s\n" "LoadAvg:"
        printf "%-9s %-9s %-9s\n" "1 Min." "5 Min." "15 Min."
        printf "%-9.2f %-9.2f %-9.2f\n" "$a" "$b" "$c"
      </ACTION></COMMAND><COMMAND name="arp" /><COMMAND name="arp info"><ACTION>cat /proc/net/arp | awk '{ if($3!=0) print $0 }'</ACTION></COMMAND><COMMAND name="net" /><COMMAND name="net ifcnt"><PARAM name="interfacename" ptype="COMPLETE" ptype_args="ifname_byObjects reset" /><ACTION>. /etc/clish/ifcnt.sh "${interfacename}"</ACTION></COMMAND><COMMAND name="net ifconfig"><PARAM name="interfacename" ptype="COMPLETE" ptype_args="ifname_ifconfig" /><ACTION>
        if [ "${interfacename}" == "all" ]; then
                ifconfig -a
        else
                ifconfig ${interfacename}
        fi
      </ACTION></COMMAND><COMMAND name="net route"><ACTION>route -n</ACTION></COMMAND></VIEW><VIEW name="diagnostics-toplevel-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="ping" no-config-gen="true" tr-mapped-to="DiagnosticsState" tr-val="Requested" interrupt="true" tr-obj="Device.IP.Diagnostics.IPPing"><PARAM name="host" ptype="IP_ADDRESS_OR_HOSTNAME" tr-mapped-to="Host" /><PARAM name="protocol" optional="true" ptype="FROM_CM" tr-mapped-to="ProtocolVersion" /><ACTION>
              case "${protocol}" in
                "IPv6")
                  cmd="ping6"
                  ;;
                *)
                  cmd="ping"
                  ;;
              esac
              cmd="$cmd ${host}"
              $cmd
      </ACTION></COMMAND><COMMAND name="trace" no-config-gen="true" interrupt="true" tr-obj="Device.IP.Diagnostics.TraceRoute"><PARAM name="host" ptype="IP_ADDRESS_OR_HOSTNAME" tr-mapped-to="Host" /><PARAM name="interface" ptype="COMPLETE" optional="true" ptype_args="get_ip_ifaces" /><PARAM name="maxhop" test="&quot;${interface}&quot;!=&quot;&quot;" optional="true" ptype="FROM_CM" tr-mapped-to="MaxHopCount" /><ACTION>
              cmd="traceroute"
              case "${maxhop}" in
                "")
                  ;;
                *)
                  cmd="$cmd -m ${maxhop}"
                  ;;
              esac
              case "${interface}" in
                "*"|"")
                  ;;
                *)
                  cmd="$cmd -i ${interface}"
                  ;;
                esac
                cmd="$cmd ${host}"
                $cmd
      </ACTION></COMMAND><COMMAND name="download" no-config-gen="true" interrupt="true" tr-obj="Device.IP.Diagnostics.DownloadDiagnostics"><PARAM name="serverUrl" ptype="URL_PLAIN" /><PARAM name="interface" ptype="COMPLETE" optional="true" ptype_args="get_ip_ifaces" /><PARAM name="duration" test="&quot;${interface}&quot;!=&quot;&quot;" optional="true" ptype="UINT_OR_ASTERISK" tr-mapped-to="TimeBasedTestDuration" /><PARAM name="increments" test="&quot;${duration}&quot;!=&quot;&quot;" optional="true" ptype="UINT_OR_ASTERISK" tr-mapped-to="TimeBasedTestIncrements" /><PARAM name="offset" test="&quot;${increments}&quot;!=&quot;&quot;" ptype="UINT_OR_ASTERISK" optional="true" tr-mapped-to="TimeBasedTestIncrementsOffset" /><ACTION>
        cmd="yaft -v -d ${serverUrl}"
        case "${interface}" in
          "*"|"")
            ;;
          *)
            cmd="$cmd -i ${interface}"
            ;;
          esac
          case "${duration}" in
            "*"|"")
              ;;
            *)
              cmd="$cmd -D ${duration}"
              ;;
          esac
          case "${increments}" in
            "*"|"")
              ;;
            *)
              cmd="$cmd -I ${increments}"
              ;;
          esac
          case "${offset}" in
            "*"|"")
              ;;
            *)
              cmd="$cmd -O ${offset}"
              ;;
          esac
          $cmd
      </ACTION></COMMAND><COMMAND name="upload" no-config-gen="true" interrupt="true" tr-obj="Device.IP.Diagnostics.UploadDiagnostics"><PARAM name="serverUrl" ptype="URL_PLAIN" /><PARAM name="interface" ptype="COMPLETE" optional="true" ptype_args="get_ip_ifaces" /><PARAM name="fileSize" test="&quot;${interface}&quot;!=&quot;&quot;" optional="true" ptype="UINT_OR_ASTERISK" /><PARAM name="duration" test="&quot;${fileSize}&quot;!=&quot;&quot;" optional="true" ptype="UINT_OR_ASTERISK" tr-mapped-to="TimeBasedTestDuration" /><PARAM name="increments" test="&quot;${duration}&quot;!=&quot;&quot;" optional="true" ptype="UINT_OR_ASTERISK" tr-mapped-to="TimeBasedTestIncrements" /><PARAM name="offset" test="&quot;${increments}&quot;!=&quot;&quot;" ptype="UINT_OR_ASTERISK" optional="true" tr-mapped-to="TimeBasedTestIncrementsOffset" /><ACTION>
        cmd="yaft -v -u ${serverUrl}"
        case "${interface}" in
          "*"|"")
            ;;
          *)
            cmd="$cmd -i ${interface}"
            ;;
          esac
          case "${fileSize}" in
            "*"|"")
              ;;
            *)
              cmd="$cmd -n ${fileSize}"
              ;;
          esac
          case "${duration}" in
            "*"|"")
              ;;
            *)
              cmd="$cmd -D ${duration}"
              ;;
          esac
          case "${increments}" in
            "*"|"")
              ;;
            *)
              cmd="$cmd -I ${increments}"
              ;;
          esac
          case "${offset}" in
            "*"|"")
              ;;
            *)
              cmd="$cmd -O ${offset}"
              ;;
          esac
          $cmd
      </ACTION></COMMAND><COMMAND name="nslookup" no-config-gen="true" interrupt="true" tr-obj="Device.DNS.Diagnostics.NSLookupDiagnostics"><PARAM name="host" ptype="IP_ADDRESS_OR_HOSTNAME" tr-mapped-to="HostName" /><PARAM name="dnsServer" optional="true" ptype="IP_ADDRESS_OR_SKIPPARAM" /><PARAM name="timeout" test="&quot;${dnsServer}&quot;!=&quot;&quot;" ptype="UINT" optional="true" /><ACTION>
        cmd="host"
        case "${timeout}" in
          "*"|"")
            ;;
          *)
            cmd="$cmd -t ${timeout}"
            ;;
        esac
        cmd="$cmd ${host}"
        case "${dnsServer}" in
          "*"|"")
            ;;
          *)
            cmd="$cmd ${dnsServer}"
            ;;
        esac
        $cmd
      </ACTION></COMMAND><COMMAND name="tcpdump" visible="[ -x /usr/sbin/tcpdump ]" /><COMMAND name="tcpdump start" visible="! ls /tmp/clish-tcpdump-* 1&gt;/dev/null 2&gt;&amp;1" no-config-gen="true" interrupt="true"><PARAM name="interface" ptype="COMPLETE" optional="true" ptype_args="get_ifaces_groups &quot;${__cmd}&quot;" /><PARAM name="packetNumber" test="&quot;${interface}&quot;!=&quot;&quot;" ptype="UINT_OR_ASTERISK" optional="true" /><PARAM name="filter" test="&quot;${packetNumber}&quot;!=&quot;&quot;" ptype="PCAPFILTER" optional="true" /><PARAM name="filename" test="&quot;${filter}&quot;!=&quot;&quot;" ptype="FOLDER_NAME" optional="true" /><ACTION>
        base="/tmp/clish-tcpdump-"
        pidfilelist=`ls $base* 2> /dev/null`
        if [ ! -z "$pidfilelist" ]
        then
          echo "You have already tcpdump started. Use tcpdump stop first."
          exit 0
        fi
        cmd="sh -c '"
        ifaces="${interface}"
        case "$ifaces" in
          "all"|"")
            [ "${__cmd}" = "${__orig_cmd}" ] &amp;&amp; ifaces="any" || ifaces=$(/etc/clish/completion.sh get_ifaces_groups ${__cmd})
            ;;
        esac
        [ "$ifaces" = none ] &amp;&amp; echo "There are no active interfaces in group" &amp;&amp; exit 0
        for i in $ifaces; do
          [ "$i" = all ] &amp;&amp; continue
          base="tcpdump -n -i $i -s0 -X -e -v"
          cmd="$cmd$base"
          case "${packetNumber}" in
            "*"|"")
              ;;
            *)
              cmd="$cmd -c ${packetNumber}"
              ;;
          esac
          case "${filename}" in
            "*"|"")
              ;;
            *)
              cmclient -v mountpoints GETV Device.Services.StorageService.LogicalVolume.[Status=Online].X_ADB_MountPoint
              IFS="
"
              for n in $mountpoints; do
                if [ $n ]
                then
                  file="$n/${filename}"
                  break
                fi
              done
              if [ -z $file ]
              then
                echo "You don't have any USB drive currently connected."
                exit 0
              fi
              cmd="$cmd -w $file.$i"
              ;;
          esac
          case "${filter}" in
            "*"|"")
              ;;
            *)
              cmd="$cmd -- ${filter}"
              ;;
          esac
          cmd="$cmd 2>/dev/null&amp; "
        done
        case "$file" in
          "*"|"")
            cmd="$cmd wait'"
            ;;
          *)
            cmd="$cmd wait' &amp; touch /tmp/clish-tcpdump-\`echo \$!\`.pid"
            ;;
        esac
        eval $cmd
      </ACTION></COMMAND><COMMAND name="tcpdump start IP" ref="tcpdump start" visible="cmclient -v objs GETO IP.Interface.[Status=Up]; [ -n &quot;$objs&quot; ]" no-config-gen="true" interrupt="true" /><COMMAND name="tcpdump start Optical" ref="tcpdump start" visible="cmclient -v objs GETO Optical.Interface.[Status=Up]; [ -n &quot;$objs&quot; ]" no-config-gen="true" interrupt="true" /><COMMAND name="tcpdump start Ethernet" ref="tcpdump start" visible="cmclient -v objs GETO Ethernet.Interface.[Status=Up]; [ -n &quot;$objs&quot; ]" no-config-gen="true" interrupt="true" /><COMMAND name="tcpdump start VLAN" ref="tcpdump start" visible="cmclient -v objs GETO Ethernet.VLANTermination.[Status=Up]; [ -n &quot;$objs&quot; ]" no-config-gen="true" interrupt="true" /><COMMAND name="tcpdump start PPP" ref="tcpdump start" visible="cmclient -v objs GETO PPP.Interface.[Status=Up]; [ -n &quot;$objs&quot; ]" no-config-gen="true" interrupt="true" /><COMMAND name="tcpdump start ATM" ref="tcpdump start" visible="cmclient -v objs GETO ATM.Link.[Status=Up]; [ -n &quot;$objs&quot; ]" no-config-gen="true" interrupt="true" /><COMMAND name="tcpdump start PTM" ref="tcpdump start" visible="cmclient -v objs GETO PTM.Link.[Status=Up]; [ -n &quot;$objs&quot; ]" no-config-gen="true" interrupt="true" /><COMMAND name="tcpdump start WiFi" ref="tcpdump start" visible="cmclient -v objs GETO WiFi.Radio.[Status=Up]; [ -n &quot;$objs&quot; ]" no-config-gen="true" interrupt="true" /><COMMAND name="tcpdump start SSID" ref="tcpdump start" visible="cmclient -v objs GETO WiFi.SSID.[Status=Up]; [ -n &quot;$objs&quot; ]" no-config-gen="true" interrupt="true" /><COMMAND name="tcpdump stop" visible="ls /tmp/clish-tcpdump-* 1&gt;/dev/null 2&gt;&amp;1" no-config-gen="true"><ACTION>
        base="/tmp/clish-tcpdump-"
        pidfilelist=`ls $base* 2> /dev/null`
        pids=`echo $pidfilelist | sed 's/[^0-9 ]//g'`
        if [ -n "$pids" ]
        then
          pkill -P $pids
          rm $pidfilelist
          sync
        else
          echo "There are no processes to stop."
        fi
      </ACTION></COMMAND><COMMAND name="log" no-config-gen="true" interrupt="true"><PARAM name="identity" ptype="COMPLETE" ptype_args="get_syslog_identities stop" /><PARAM name="minLevel" test="&quot;${identity}&quot;!=&quot;stop&quot;" ptype="PRIORITY" optional="true" /><PARAM name="logFile" test="&quot;${minLevel}&quot;!=&quot;&quot;" ptype="FOLDER_NAME" optional="true" /><PARAM name="maxLogFileSize" test="&quot;${logFile}&quot;!=&quot;&quot;" ptype="UINT" optional="true" /><ACTION>
        pref='logc t 0 0 0'
        fmt='"[%Y-%M-%D %H:%m:%s] %t %g %a%n"'
        case "${minLevel}" in
          "*"|"")
            pri="7"
            ;;
          *)
            pri="${minLevel}"
            ;;
        esac
        case "${identity}" in
          "*"|"")
            ;;
          "stop")
            base="/tmp/clish-log-"
            pidfilelist=`ls $base* 2> /dev/null`
            pids=`echo $pidfilelist | sed 's/[^0-9 ]//g'`
            if [ -n "$pids" ]
            then
              kill $pids
              rm $pidfilelist 2> /dev/null
              sync
            else
              echo "There are no processes to stop."
            fi
            exit 0
            ;;
          *)
            tag="${identity}*"
            ;;
        esac

        tagpri="$tag$pri"
        cmd="$pref $timenow $timenow $fmt $tagpri"
        size=${maxLogFileSize}

        if [ ${logFile} ]
        then
          cmclient -v mountpoints GETV Device.Services.StorageService.LogicalVolume.[Status=Online].X_ADB_MountPoint
          IFS="
"
          for n in $mountpoints; do
            if [ $n ]
            then
              file="$n/${logFile}"
              break
            fi
          done
          if [ -z $file ]
          then
            echo "You don't have any USB drive currently connected."
            exit 0
          fi
          sh -c '. /etc/clish/logger.sh "$0" "$1" "$2" "$3" "$4"' "$pref" "$fmt" "$tagpri" "$file" "$size" &amp;
        else
          . /etc/clish/logger.sh "$pref" "$fmt" "$tagpri" "$file" "$size"
        fi
      </ACTION></COMMAND><COMMAND name="wifi" /><COMMAND name="wifi channels" /><COMMAND name="wifi channels scan" tr-mapped-to="X_ADB_WiFiChannelMeasurements.SupportedChannelsRefresh" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.WiFi.Radio.Alias" tr-mapped-to="Alias" /><PARAM name="duration" ptype="UINT" /><ACTION>
          cmclient SET ${alias}.X_ADB_WiFiChannelMeasurements.SupportedChannelsMeasDuration ${duration} &amp;> /dev/null
          cmclient SETM ${alias}.${CMD_ATTR_tr-mapped-to}=true &amp;> /dev/null
        </ACTION></COMMAND><COMMAND name="wifi channels show" no-config-gen="true" tr-obj="X_ADB_WiFiChannelMeasurements.SupportedChannels"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.WiFi.Radio.Alias" tr-mapped-to="Alias" /><ACTION builtin="cmshow@cmplugin">${alias}.${CMD_ATTR_tr-obj}:1</ACTION></COMMAND><COMMAND name="wifi neighbour" /><COMMAND name="wifi neighbour scan" tr-obj="Device.WiFi.NeighboringWiFiDiagnostic" no-config-gen="true"><ACTION>
         cmclient -v s SET Device.WiFi.NeighboringWiFiDiagnostic.DiagnosticsState Requested
         echo "WiFi neighbour scanning: started. It might take some time."

         tries=20
         while [ $tries -ne 0 ]; do
             cmclient -v state GETV Device.WiFi.NeighboringWiFiDiagnostic.DiagnosticsState
             [ "$state" = "Requested" ] || break
             sleep 1
             tries=$((tries-1))
         done

         echo "WiFi neighbour scanning: $state"
        </ACTION></COMMAND><COMMAND name="wifi neighbour show" no-config-gen="true" tr-obj="Device.WiFi.NeighboringWiFiDiagnostic"><ACTION builtin="cmshow@cmplugin">${CMD_ATTR_tr-obj}.Result</ACTION></COMMAND></VIEW><VIEW name="system-view" prompt="${CLISH_PROMPT}(system)# " depth="dynamic"><COMMAND name="memory" no-config-gen="true"><ACTION>
        free
      </ACTION></COMMAND><COMMAND name="top" no-config-gen="true"><ACTION>
        top -b -n 1
      </ACTION></COMMAND><COMMAND name="reboot" /><COMMAND name="reboot now" no-config-gen="true"><ACTION>
        cmclient REBOOT
      </ACTION></COMMAND><COMMAND name="reboot delayTimer" no-config-gen="true"><PARAM name="delay" ptype="UINT" /><ACTION>
        cmclient DEL "Device.X_ADB_Time.Event.[Alias=RebootDelay]" > /dev/null
        timeId=`cmclient ADD "Device.X_ADB_Time.Event"`
        eventObj="Device.X_ADB_Time.Event.$timeId"
        j=`cmclient ADD "$eventObj.Action"`
        setm_params="$eventObj.Alias=RebootDelay"
        setm_params="$setm_params	$eventObj.Type=Aperiodic"
        setm_params="$setm_params	$eventObj.DeadLine=${delay}"
        setm_params="$setm_params	$eventObj.Action.$j.Operation=Reboot"
        cmclient SETM "$setm_params" > /dev/null
        cmclient SET "$eventObj.Enable true"    > /dev/null
        echo "Scheduled reboot installed"
      </ACTION></COMMAND><COMMAND name="reboot cancelTimer" no-config-gen="true"><ACTION>
        cmclient DEL "Device.X_ADB_Time.Event.[Alias=RebootDelay]" | grep -q 'OK'
        if [ $? -eq 0 ]; then
           echo "Scheduled reboot deleted"
         else
           echo "No scheduled reboot installed"
        fi
      </ACTION></COMMAND><COMMAND name="reboot showTimer" no-config-gen="true"><ACTION>
        cmclient -v deadline GETV "Device.X_ADB_Time.Event.[Alias=RebootDelay].DeadLine"
        if [ -n "$deadline" ]; then
          cmclient -v modified GETV "Device.X_ADB_Time.Event.[Alias=RebootDelay].LastModified"
          timestamp=$(date -d "$modified" -D "%Y-%m-%dT%H:%M:%S%z" +%s)
          now=$(date +%s)
          countdown=$((timestamp+deadline-now))
          if [ -n "$countdown" ]; then
            deadline=$countdown
          fi
          echo "Scheduled reboot in "$deadline" seconds"
        else
          echo "No scheduled reboot installed"
        fi
      </ACTION></COMMAND><COMMAND name="restore" /><COMMAND name="restore defaultSettings" no-config-gen="true"><ACTION>
        echo "Restore default-settings ... and reboot"
        cmclient RESET
      </ACTION></COMMAND><COMMAND name="customerDefault" aux_availability_condition="Device.DeviceInfo.[X_ADB_CustomerDefault!]" /><COMMAND name="customerDefault EnableButtonbackToFactory" no-config-gen="true"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM Device.DeviceInfo.X_ADB_CustomerDefaultLongPressedEnabled=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="customerDefault save" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">SETM Device.DeviceInfo.X_ADB_CustomerDefault=Save</ACTION></COMMAND><COMMAND name="customerDefault restore" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">SETM Device.DeviceInfo.X_ADB_CustomerDefault=Restore</ACTION></COMMAND><COMMAND name="customerDefault backToFactory" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">SETM Device.DeviceInfo.X_ADB_CustomerDefault=None</ACTION></COMMAND><COMMAND name="upgrade" view="system-upgrade-view" no-config-gen="true" /><COMMAND name="upload" view="system-upload-view" no-config-gen="true" /><COMMAND name="applications" view="system-applications-view" no-config-gen="true" help="hidden" /></VIEW><VIEW name="system-upgrade-view" prompt="${CLISH_PROMPT}(system-upgrade)# " depth="dynamic"><COMMAND name="configurationFromHttp" no-config-gen="true"><PARAM name="url" ptype="STRING" /><PARAM name="certcheck" ptype="BOOLEAN" default="false" /><PARAM name="username" ptype="STRING" optional="true" /><PARAM name="password" ptype="STRING" optional="true" /><ACTION>
        /etc/clish/cliupgrade_main.sh config http "${url}" "${certcheck}" "${username}" "${password}"
      </ACTION></COMMAND><COMMAND name="configurationFromFtp" no-config-gen="true"><PARAM name="url" ptype="STRING" /><PARAM name="username" ptype="STRING" /><PARAM name="password" ptype="STRING" /><ACTION>
        /etc/clish/cliupgrade_main.sh config ftp "${url}" "${username}" "${password}"
      </ACTION></COMMAND><COMMAND name="configurationFromTftp" no-config-gen="true"><PARAM name="url" ptype="STRING" /><ACTION>
        /etc/clish/cliupgrade_main.sh config tftp "${url}"
      </ACTION></COMMAND><COMMAND name="firmwareFromHttp" no-config-gen="true"><PARAM name="url" ptype="STRING" /><PARAM name="certcheck" ptype="BOOLEAN" default="false" /><PARAM name="username" ptype="STRING" optional="true" /><PARAM name="password" ptype="STRING" optional="true" /><ACTION>
        /etc/clish/cliupgrade_main.sh firmware http "${url}" "${certcheck}" "${username}" "${password}"
      </ACTION></COMMAND><COMMAND name="firmwareFromFtp" no-config-gen="true"><PARAM name="url" ptype="STRING" /><PARAM name="username" ptype="STRING" /><PARAM name="password" ptype="STRING" /><ACTION>
        /etc/clish/cliupgrade_main.sh firmware ftp "${url}" "${username}" "${password}"
      </ACTION></COMMAND><COMMAND name="firmwareFromTftp" no-config-gen="true"><PARAM name="url" ptype="STRING" /><ACTION>
        /etc/clish/cliupgrade_main.sh firmware tftp "${url}"
      </ACTION></COMMAND><COMMAND name="secureDevice" tr-obj="Device.DeviceInfo" aux_availability_condition="Device.DeviceInfo.[X_DLINK_SecureDevice!]"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_DLINK_SecureDevice" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="fw_upgr_usb_filename" tr-obj="Device.DeviceInfo"><PARAM name="file" ptype="FROM_CM" tr-mapped-to="X_ADB_UpgradeFilename" /><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="system-upload-view" prompt="${CLISH_PROMPT}(system-upload)# " depth="dynamic"><COMMAND name="configurationToHttp" no-config-gen="true"><PARAM name="type" ptype="BACKUP_CONF_TYPE" /><PARAM name="url" ptype="STRING" /><PARAM name="certcheck" ptype="BOOLEAN" default="false" /><PARAM name="username" ptype="STRING" optional="true" /><PARAM name="password" ptype="STRING" optional="true" /><ACTION>
        /etc/clish/cliupload-conf.sh "${type}" http "${url}" "${certcheck}" "${username}" "${password}"
      </ACTION></COMMAND><COMMAND name="configurationToFtp" no-config-gen="true"><PARAM name="type" ptype="BACKUP_CONF_TYPE" /><PARAM name="url" ptype="STRING" /><PARAM name="username" ptype="STRING" /><PARAM name="password" ptype="STRING" /><ACTION>
        /etc/clish/cliupload-conf.sh "${type}" ftp "${url}" "${username}" "${password}"
      </ACTION></COMMAND><COMMAND name="configurationToTftp" no-config-gen="true"><PARAM name="type" ptype="BACKUP_CONF_TYPE" /><PARAM name="url" ptype="STRING" /><ACTION>
        /etc/clish/cliupload-conf.sh "${type}" tftp "${url}"
      </ACTION></COMMAND></VIEW><VIEW name="system-applications-view" prompt="${CLISH_PROMPT}(system-applications)# " depth="dynamic"><COMMAND name="applicationFromHttp" no-config-gen="true"><PARAM name="url" ptype="STRING" /><PARAM name="username" ptype="STRING" optional="true" /><PARAM name="password" ptype="STRING" optional="true" /><ACTION>
        . /etc/clish/clish-applications.sh
        install_application "${url}" "${username}" "${password}"
        check_instalation_status
      </ACTION></COMMAND><COMMAND name="applicationFromFtp" no-config-gen="true"><PARAM name="url" ptype="STRING" /><PARAM name="username" ptype="STRING" /><PARAM name="password" ptype="STRING" /><ACTION>
        . /etc/clish/clish-applications.sh
        install_application "${url}" "${username}" "${password}"
        check_instalation_status
      </ACTION></COMMAND><COMMAND name="uninstallApplication" no-config-gen="true"><PARAM name="applicationName" ptype="COMPLETE" ptype_args="get_installed_software_modules" /><ACTION>
        . /etc/clish/clish-applications.sh
        uninstall_application "${applicationName}"
      </ACTION></COMMAND></VIEW><VIEW name="config-view" prompt="${CLISH_PROMPT}(cfg)# " depth="dynamic"><COMMAND name="leds" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-leds" view="leds-cfg-view" tr-config-phony="true" tr-obj="Device.X_ADB_LED" /><COMMAND name="dmz" view="dmz-view" viewid="obj=${CMD_ATTR_tr-obj};prompt=${prompt}" tr-obj="Device.X_ADB_DMZ" tr-config-phony="true" /><COMMAND name="management" viewid="prompt=cfg-mgmt" view="mgmt-view" tr-config-phony="true" config-gen-prio="2" /><COMMAND name="firewall" viewid="obj=Device.Firewall;prompt=cfg-firewall" view="firewall-main-view" tr-obj="Device.Firewall" tr-config-phony="true" /><COMMAND name="nat" view="nat-config-view" viewid="obj=Device.NAT" tr-config-phony="true" config-gen-prio="4" /><COMMAND name="ipv6rd" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-ipv6rd" view="ipv6rd-main-view" tr-config-phony="true" tr-obj="Device.IPv6rd" /><COMMAND name="ip" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-ip" view="ip-main-view" tr-config-phony="true" /><COMMAND name="voip" viewid="obj=Device.Services.VoiceService.1" view="voip-main-view" tr-obj="Device.Services.VoiceService.1" tr-config-phony="true" /><COMMAND name="upnp" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-upnp" view="upnp-view" tr-config-phony="true" tr-obj="Device.UPnP.Device" aux_availability_condition="Device.UPnP.Device" /><COMMAND name="vpn" viewid="obj=;prompt=cfg-vpn" view="vpn-main-view" tr-config-phony="true" config-gen-prio="3" /><COMMAND name="powerManagement" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-powerManagement" view="powermanagement-view" tr-config-phony="true" tr-obj="Device.DeviceInfo.X_ADB_PowerManagement" /><COMMAND name="usbHost" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-usbHost" view="usbhost-cfg-view" no-config-gen="true" tr-config-phony="true" tr-obj="Device.USB.USBHosts.Host.1" /><COMMAND name="pppoeProxy" view="pppoeproxy-view" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-pppoeProxy" tr-config-phony="true" tr-obj="Device.Services.X_ADB_PPPoEProxy" /><COMMAND name="interface" view="interfaces-view" viewid="prompt=cfg-intf" config-gen-prio="0" tr-config-phony="true" /><COMMAND name="qos" viewid="obj=Device.QoS" view="qos-main-view" tr-obj="Device.QoS" tr-config-phony="true" /><COMMAND name="syslog" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-syslog" view="syslog-cfg-view" tr-config-phony="true" tr-obj="Device.X_ADB_SystemLog" /><COMMAND name="exit" help="exit" view="main-view" /><COMMAND name="hosts" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-hosts" view="hosts-main-cfg-view" tr-config-phony="true" tr-obj="Device.Hosts" no-config-gen="true" /><COMMAND name="time" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-time" view="time-cfg-view" tr-config-phony="true" tr-obj="Device.Time" /><COMMAND name="printerService" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-printerService" view="printerservice-view" tr-config-phony="true" tr-obj="Device.Services.X_ADB_PrinterService" /><COMMAND name="dns" view="dns-config" viewid="obj=Device.DNS;prompt=cfg-dns" tr-config-phony="true" /><COMMAND name="diagnostics" view="diagnostics-view" viewid="prompt=cfg-diagnostics" tr-config-phony="true" /><COMMAND name="alg" no-config-gen="true" view="alg-sel-view" viewid="obj=${alg};prompt=cfg-alg"><PARAM name="alg" ptype="COMPLETE" ptype_args="get_alg_list" /></COMMAND><VAR name="VAR_RUNCONF_ALG_SHORT_PROTOCOLIDENTIFIER" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        cmclient -v alg GETV ${obj}.ProtocolIdentifier
        sep='urn:dslforum-org:'
        case $alg in
        *$sep*)
		eval 'alg=$''{alg#*"$sep"}'
        ;;
        *)
        alg=''
        ;;
        esac
        [ -z "$alg" ] &amp;&amp; die "Error getting short protocol id"
        echo -n "$alg"
      </ACTION></VAR><COMMAND name="loadConfigScriptClear" no-config-gen="true"><PARAM name="url" ptype="STRING" /><ACTION>
        . /etc/clish/clish-permissions.sh
        # Create temporary file
        FILE=`mktemp`
        # Copy file from URL to temporary file. yaft-yet another file transfer
        yaft -d "${url}" -o $FILE
        if [ "$?" != "0" ]; then
            echo "Unable to copy file from URL. Command stop."
            exit 1
        fi

        # Ugly workaround. System need to be admin to create admin user,
        # but after cleaning cm there is no way to check user role
        get_user_role USER_ROLE
        export USER_ROLE

        if [ ! -d /etc/cm/blank ]; then
            echo "No blank configuration available. Stopping"
            exit 1
        fi
        echo "Loading blank configuration..."

        # Drop the whole config by restarting the cm. Note that
        # this way it starts again with the same uid/euid (good!)
        cmclient RESTARTCM > /dev/null

        cmclient -v res STOP
        # Check if the cm is already restarted
        count=0
        while [ "$res" != OK ]; do
            count=$((count+1))
            if [ $count -eq 20 ]; then
                # restore is done automatically at boot, if the new configuration is not saved
                echo "Configuration failed. System error. NOT saving - restoring previous config ... reboot the system manually"
                exit 1
            fi
            sleep 1
            cmclient -v res STOP
        done

        # handlers will be called at boot time
        cmclient -v res EXCLUDE
        if [ "$res" != OK ]; then
            # restore is done automatically at boot, if the new configuration is not saved
            echo "Configuration failed. System error. NOT saving - restoring previous config...rebooting"
            cmclient REBOOT > /dev/null 2>&amp;1
        fi

        # loading CONF on top of the DOM will check its correctness. Therefore
        # output ignored
        . /etc/ah/helper_functions.sh
        help_load_dom > /dev/null

        # Check for existing of 'blank_exclude' file
        # If exist: prepare new 'blank configuration file' based
        # on 'factory_*.xml' files.
        # If not: use existing 'blank_.xml' configuration files
        excluding_file=/etc/cm/blank/blank_exclude
        if [ -f "$excluding_file" ]; then
            # Copy all 'factory_*.xml' files into one 'blank_conf.xml' file
            # next remove from it all leaves read from 'blank_exlude' file
            blank_conf=/tmp/blank_conf.xml
            cat /etc/cm/conf/factory* > $blank_conf
            while read obj ; do
                case "$obj" in
                    "Device."*)
                        sed -i "/&lt;object name=\"$obj*/,/&lt;\/object>/d" $blank_conf
                        ;;
                esac
            done &lt;"$excluding_file"

            cmclient -v res CONF $blank_conf
        else
            cmclient -v res CONF /etc/cm/blank/
        fi

        if [ "$res" != OK ]; then
            # restore is done automatically at boot, if the new configuration is not saved
            echo "Configuration failed. Invalid blank configuration. NOT saving - restoring previous config ... rebooting"
            cmclient REBOOT > /dev/null 2>&amp;1
        fi
        # Probing USB ports
        /tmp/eh/eh_usbdevices.sh probe 2>/dev/null > /dev/null
        # No need to validate $FILE because command stops at very beginning in case of invalid
        clish.elf -l --no-aux-availability --stop-on-error --view=config-view $FILE

        if [ "$?" = "0" ]; then
            echo "Configuration successfully applied. Finishing..."
            # Create the lowerlayers in the management ports
            /etc/ah/BridgingBridge.sh finishblank


            # Generate names
            cmclient -v objs GETO Device.ATM.Link
            cmclient -v obj_part GETO Device.Bridging.Bridge.*.Port
            objs="$objs $obj_part"
            cmclient -v obj_part GETO Device.DSL.BondingGroup
            objs="$objs $obj_part"
            cmclient -v obj_part GETO Device.IP.Interface
            objs="$objs $obj_part"
            cmclient -v obj_part GETO Device.PPP.Interface
            objs="$objs $obj_part"
            cmclient -v obj_part GETO Device.PTM.Link
            objs="$objs $obj_part"
            cmclient -v obj_part GETO Device.Ethernet.Link
            objs="$objs $obj_part"
            cmclient -v obj_part GETO Device.Ethernet.VLANTermination
            objs="$objs $obj_part"
            cmclient -v obj_part GETO Device.X_ADB_VPN.Client.L2TP
            objs="$objs $obj_part"
            cmclient -v obj_part GETO Device.Device.X_ADB_VPN.Client.PPTP
            objs="$objs $obj_part"

            for obj in $objs; do
              cmclient -v newLowerLayers GETV "$obj".LowerLayers
              export obj newLowerLayers
              /etc/ah/InstanceNamer.sh > /dev/null
            done

            /etc/ah/IPIf.sh finishblank > /dev/null

            echo "Saving..."
            cmclient SET Device.DeviceInfo.X_ADB_TR098Ready false > /dev/null 2>&amp;1
            cmclient SAVEPATH /tmp/cfg/main > /dev/null 2>&amp;1
            cmclient START > /dev/null 2>&amp;1
            cmclient SAVE > /dev/null 2>&amp;1
        else
            # restore is done automatically at boot, if the new configuration is not saved
            echo "Configuration failed. NOT saving - restoring previous config..."
        fi

        echo "Rebooting..."
        cmclient REBOOT > /dev/null 2>&amp;1
        </ACTION></COMMAND><COMMAND name="loadConfigScript" no-config-gen="true"><PARAM name="url" ptype="STRING" /><ACTION>
        FILE=`mktemp`
        yaft -d "${url}" -o $FILE
        if [ "$?" = "0" ]; then
            clish.elf -l --no-aux-availability --stop-on-error --view=config-view $FILE
        else
            echo "Unable to copy file from URL. Command stop."
        fi
        </ACTION></COMMAND><VAR name="VAR_GET_PHYSLAYER_LINK" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        ll=`ip_interface_get_cli_ll ${__eval PAR_ATTR_1_name}`
        echo -n "$ll"
      </ACTION></VAR><VAR name="VAR_GET_PPP_PROMPT" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        ll=`ip_interface_get_cli_ll ${__eval PAR_ATTR_1_name}`
        if [ -n "$ll" ]; then
            cmclient -v ll_alias GETV "$ll.Alias"
            ll_ll=`ip_interface_get_cli_ll $ll`
            [ -n "$ll_ll" ] &amp;&amp; cmclient -v ll_ll_alias GETV "$ll_ll.Alias"
            case "$ll" in
                "Device.ATM.Link"*)
                prompt=atm:$ll_alias
                ;;
                "Device.PTM.Link"*)
                prompt=ptm:$ll_alias
                ;;
            esac
            case "$ll_ll" in
                "Device.DSL.Line"*)
                prompt=cfg-intf-dsl:$ll_ll_alias-$prompt
                ;;
            esac
        fi
        echo -n "$prompt"
        </ACTION></VAR><COMMAND name="bridging" view="if-bridgingwrapper-view" viewid="prompt=cfg-bridging" tr-config-phony="true" config-gen-prio="1">
    </COMMAND><COMMAND name="rtspProxy" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-rtspProxy" view="rtspproxy-view" tr-config-phony="true" tr-obj="Device.Services.X_ADB_RTSPProxy" /><COMMAND name="dhcp" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-dhcp" view="dhcp-main-view" tr-config-phony="true" /><COMMAND name="dyndns" view="dyndns-view" viewid="prompt=cfg-dynDns" tr-config-phony="true" /><COMMAND name="storage" view="storage-view" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-storage" tr-config-phony="true" tr-obj="Device.Services.StorageService.1" /><COMMAND name="routing" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-routing" view="routing-view" tr-config-phony="true" tr-obj="Device.Routing.Router.1" /><COMMAND name="igmpProxy" view="igmpproxy-view" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-igmpProxy" tr-config-phony="true" tr-obj="Device.Services.X_ADB_IGMPProxy" /></VIEW><VIEW name="leds-cfg-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="led" view="leds-led-cfg-view" viewid="obj=${alias};prompt=${prompt}-led" tr-obj=".ServiceLED"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /></COMMAND></VIEW><VIEW name="generic-obj-enable-view"><COMMAND name="enable" tr-mapped-to="Enable" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="disable" tr-mapped-to="Enable" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND></VIEW><VIEW name="generic-obj-show-view" depth="dynamic"><COMMAND name="show" escape_chars="&quot;"><ACTION builtin="cmshow@cmplugin">${obj}</ACTION></COMMAND></VIEW><VIEW name="leds-led-cfg-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="defaultColor"><PARAM name="color" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.SupportedColours" tr-mapped-to="DefaultColour" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="defaultDutyCycle"><PARAM name="type" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.SupportedDutyCycles" tr-mapped-to="DefaultDutyCycle" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="defaultActivity" no-config-gen="true"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="DefaultActivityReference" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add behaviour" tr-obj=".Behaviour"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${obj}${CMD_ATTR_tr-obj} Alias=${alias}</ACTION></COMMAND><COMMAND name="behaviour" view="leds-led-behaviour-cfg-view" viewid="parent=${obj};obj=${alias};prompt=${prompt}:${VAR_GET_ALIAS}-behaviour" tr-obj=".Behaviour"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del behaviour" tr-obj=".Behaviour" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND></VIEW><VIEW name="generic-obj-alias-view" depth="dynamic"><VAR name="VAR_GET_ALIAS" dynamic="true"><ACTION builtin="cmwrap@cmplugin">GETV ${obj}.Alias</ACTION></VAR><VAR name="VAR_GET_OBJ_FROM_FIELD" dynamic="true"><ACTION>
        tmp_val=${val}
        eval echo -n $\{tmp_val%\.*\}
      </ACTION></VAR><VAR name="VAR_GET_NAME_FROM_FIELD" dynamic="true"><ACTION>
        tmp_val=${val}
        eval echo -n $\{tmp_val##*\.\}
      </ACTION></VAR><VAR name="VAR_GET_CUST_ALIAS" dynamic="true"><ACTION builtin="cmwrap@cmplugin">GETV ${obj}.${field}</ACTION></VAR><VAR name="VAR_GET_LL_ALIAS_FROM_FIRST_PARAM" dynamic="true"><ACTION>
        ll=`. /etc/clish/clish-commons.sh &amp;&amp; ip_interface_get_cli_ll ${__eval PAR_ATTR_1_name}`
        [ -n "$ll" ] &amp;&amp; cmclient -v alias_name GETV "$ll.Alias"
        echo -n "$alias_name"
        </ACTION></VAR><VAR name="VAR_LIST_ADD" dynamic="true"><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></VAR><VAR name="VAR_LIST_DEL" dynamic="true"><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></VAR><VAR name="VAR_QOS_QUEUE_IFACE" dynamic="true"><ACTION>
        cmclient -v all GETV ${obj}.AllInterfaces
        if [ "$all" = "true" ]; then
			echo -n "all"
        else
			cmclient -v iface GETV "${obj}.Interface"
			if [ -n "$iface" ]; then
				case $iface in
				Device.Bridging.Bridge*)
					pref=${iface#*"Device.Bridging.Bridge."}
					pref=${pref%%"."*}
					pref="Bridge.$pref."
					;;
				*)
					pref=${iface#*"Device."}
					pref=${pref%%"."*}
					pref="$pref."
					;;
				esac
				cmclient -v alias GETV "$iface.Alias"
				echo -n "\"$pref$alias\""
			fi
		fi
      </ACTION></VAR><COMMAND name="alias"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="leds-led-behaviour-cfg-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="color"><PARAM name="color" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${parent}.SupportedColours" tr-mapped-to="Colour" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="dutyCycle"><PARAM name="type" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${parent}.SupportedDutyCycles" tr-mapped-to="DutyCycle" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="activity" no-config-gen="true"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="ActivityReference" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add trigger" tr-obj=".Trigger"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${obj}${CMD_ATTR_tr-obj} Alias=${alias}</ACTION></COMMAND><COMMAND name="trigger" view="leds-led-trigger-cfg-view" viewid="obj=${alias};prompt=${prompt}:${VAR_GET_ALIAS}-trigger" tr-obj=".Trigger"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del trigger" tr-obj=".Trigger" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND></VIEW><VIEW name="leds-led-trigger-cfg-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="operator" no-config-gen="true"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="Operator" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="parameter" no-config-gen="true"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="Parameter" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="value" no-config-gen="true"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="Value" /><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="dmz-view" prompt="${CLISH_PROMPT}(${prompt}cfg-dmz)# " depth="dynamic"><VAR name="VAR_RUNCONF_LOWER_LAYER_INTERFACE" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        cmclient -v iface GETV "${obj}.Interface"
        if [ -n "$iface" ]; then
          objAccess=0
          get_obj_access objAccess "$iface"
          if [ $objAccess -gt 0 ]; then
            cmclient -v iface_alias GETV $iface.Alias
            alias_escaped=$(echo "$iface_alias" | sed 's/ /\\ /g')
            echo -n "$alias_escaped"
          else
            echo "&lt;hidden>"
          fi
        fi
      </ACTION></VAR><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="show" no-config-gen="true" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Enable, Hairpinning" /><DISPENTRY tr-mapped-to="IPAddress" /><DISPENTRY tr-mapped-to="Status" /><DISPENTRY tr-mapped-to="Interface">
        echo "${VAR_RUNCONF_LOWER_LAYER_INTERFACE}"
      </DISPENTRY><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND><COMMAND name="hairpinning"><PARAM name="enable" tr-mapped-to="Hairpinning" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="address"><PARAM name="ipaddr" tr-mapped-to="IPAddress" ptype="IPV4_ADDRESS" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface"><PARAM name="interface" tr-mapped-to="%(Interface).Alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.[X_ADB_Upstream=true].Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Interface=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="upstreaminterface" /><COMMAND name="upstreaminterface add" no-config-gen="true"><PARAM name="entry" tr-mapped-to="UpstreamInterfaces" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.[X_ADB_Upstream=true].Alias" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="upstreaminterface del" no-config-gen="true"><PARAM name="entry" tr-mapped-to="UpstreamInterfaces" ptype="COMPLETE_NATIVE" ptype_args="listFromRefProp ${obj}.UpstreamInterfaces#Alias" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><VAR name="VAR_REFLIST_DMZ_UPSTREAM"><ACTION>
        . /etc/clish/clish-commons.sh
        show_deref_list_as_list ${obj}.UpstreamInterfaces Alias
      </ACTION></VAR><COMMAND name="upstreaminterface set"><PARAM name="list" ptype="STRING" tr-mapped-to="UpstreamInterfaces" tr-var-action="VAR_REFLIST_DMZ_UPSTREAM" /><ACTION builtin="cm_list_reference_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.IP.Interface.[X_ADB_Upstream=true].Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="upstreaminterface show" no-config-gen="true"><ACTION>
            . /etc/clish/clish-commons.sh
            show_deref_list ${obj}.UpstreamInterfaces Alias
      </ACTION></COMMAND><COMMAND name="upstreaminterface clear" tr-mapped-to="UpstreamInterfaces" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND></VIEW><VIEW name="mgmt-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="tr069Agent" viewid="obj=${CMD_ATTR_tr-obj};prompt=${prompt}-tr069Agent" view="mgmt-tr069Agent-view" tr-config-phony="true" tr-obj="Device.ManagementServer" /><COMMAND name="managementAgent" viewid="obj=${CMD_ATTR_tr-obj};prompt=${prompt}-managementAgent" view="mgmt-managementAgent-view" tr-config-phony="true" aux_availability_condition="Device.X_ADB_ManagementServer" tr-obj="Device.X_ADB_ManagementServer" /><COMMAND name="telnetServer" viewid="obj=${CMD_ATTR_tr-obj};prompt=${prompt}-telnet" view="mgmt-telnetserver-view" tr-config-phony="true" tr-obj="Device.X_ADB_TelnetServer" /><COMMAND name="sshServer" viewid="obj=${CMD_ATTR_tr-obj};prompt=${prompt}-ssh" view="mgmt-sshserver-view" tr-config-phony="true" tr-obj="Device.X_ADB_SSHServer" /><COMMAND name="users" viewid="obj=${CMD_ATTR_tr-obj};prompt=${prompt}-users" view="mgmt-users-view" tr-config-phony="true" tr-obj="Device.Users" /><COMMAND name="bsd_gui_visible" tr-obj="Device.DeviceInfo" aux_availability_condition="Device.DeviceInfo.[X_DLINK_BsdGuiVisible!]"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_DLINK_BsdGuiVisible" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="webGui" viewid="obj=${CMD_ATTR_tr-obj};prompt=${prompt}-webGui" view="mgmt-webgui-view" tr-config-phony="true" tr-obj="Device.UserInterface" /><COMMAND name="execEnv" viewid="obj=${CMD_ATTR_tr-obj};prompt=${prompt}-execEnv" view="mgmt-execenv-view" aux_availability_condition="Device.SoftwareModules" tr-config-phony="true" /><COMMAND name="factoryMode" viewid="obj=${CMD_ATTR_tr-obj};prompt=${prompt}-factoryData" view="mgmt-factorymode-view" tr-obj="Device.X_ADB_FactoryData" tr-config-phony="true" no-config-gen="true" /></VIEW><VIEW name="mgmt-tr069Agent-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="mgmt-agent-common-view" help="true" completion="true" /><COMMAND name="acl"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_AccessControlEnable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="acs" /><COMMAND name="acs url"><PARAM name="url" ptype="FROM_CM" tr-mapped-to="URL" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="acs username"><PARAM name="username" ptype="FROM_CM" tr-mapped-to="Username" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no" /><COMMAND name="no acs" /><COMMAND name="no acs username" tr-mapped-to="Username" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no acs url" tr-mapped-to="URL" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no acs password" tr-mapped-to="Password" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="acs password" no-config-gen="true"><PARAM name="pass" ptype="FROM_CM" tr-mapped-to="Password" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="periodicInform"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="PeriodicInformEnable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="periodicInformInterval"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="PeriodicInformInterval" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="periodicInformTime"><PARAM name="date" ptype="FROM_CM" tr-mapped-to="PeriodicInformTime" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="periodicInformInterface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(X_ADB_InformInterface).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_InformInterface=${ifname}</ACTION></COMMAND><COMMAND name="no periodicInformInterface" tr-mapped-to="X_ADB_InformInterface" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="upgradesManaged"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="UpgradesManaged" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="activeNotificationThrottle"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="DefaultActiveNotificationThrottle" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="stun" viewid="obj=${obj};prompt=${prompt}-stun" aux_availability_condition="Device.ManagementServer.[STUNEnable!]" view="mgmt-stun-view" tr-config-phony="true" /><COMMAND name="tr098DmRoot"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_EnableTR098" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="downloadQueryRespServer"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="DownloadAvailability.Query.URL" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no downloadQueryRespServer" tr-mapped-to="DownloadAvailability.Query.URL" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="managedDevices" viewid="obj=${alias};prompt=${prompt}-managedDevice" view="mgmt-manageable-view" tr-obj=".ManageableDevice" no-config-gen="true" tr-config-phony="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="manageableDevNotificationMinTime"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="ManageableDeviceNotificationLimit" /><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="mgmt-agent-common-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="enable" tr-mapped-to="EnableCWMP" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="disable" tr-mapped-to="EnableCWMP" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="connReq" /><COMMAND name="connReq username"><PARAM name="username" ptype="FROM_CM" tr-mapped-to="ConnectionRequestUsername" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no connReq" /><COMMAND name="no connReq username" tr-mapped-to="ConnectionRequestUsername" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="connReq password" no-config-gen="true"><PARAM name="pass" ptype="FROM_CM" tr-mapped-to="ConnectionRequestPassword" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no connReq password" tr-mapped-to="ConnectionRequestPassword" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="retryWaitInterval"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="CWMPRetryMinimumWaitInterval" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="retryMultInterval"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="CWMPRetryIntervalMultiplier" /><ACTION builtin="cmset@cmplugin" /></COMMAND><VAR name="VAR_RUNCONF_TR069_ACL" dynamic="true"><ACTION>. /etc/clish/ip-address.sh obj_ipv4_address_print_list_addr ${obj} X_ADB_AccessControl</ACTION></VAR><COMMAND name="acl set"><PARAM name="addr_list" ptype="LIST_IPV4_ADDRESS_WITH_PREFIX" tr-mapped-to="X_ADB_AccessControl" tr-var-action="VAR_RUNCONF_TR069_ACL" /><ACTION>. /etc/clish/ip-address.sh obj_ipv4_address_add_addr ${obj} X_ADB_AccessControl "${addr_list}" true</ACTION></COMMAND><COMMAND name="acl add" no-config-gen="true"><PARAM name="addr" ptype="IPV4_ADDRESS_WITH_PREFIX" tr-mapped-to="X_ADB_AccessControl" /><ACTION>. /etc/clish/ip-address.sh obj_ipv4_address_add_addr ${obj} X_ADB_AccessControl "${addr}"</ACTION></COMMAND><COMMAND name="acl del" no-config-gen="true"><PARAM name="addr" ptype="COMPLETE" ptype_args="/etc/clish/ip-address.sh obj_ipv4_address_print_list_addr ${obj} X_ADB_AccessControl complete" tr-mapped-to="X_ADB_AccessControl" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="acl clear" tr-mapped-to="X_ADB_AccessControl" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="acl show" tr-mapped-to="X_ADB_AccessControl" no-config-gen="true"><ACTION>. /etc/clish/ip-address.sh obj_ipv4_address_print_list_addr ${obj} X_ADB_AccessControl true</ACTION></COMMAND><COMMAND name="ipv6Bind"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_IPv6Preferred" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="tlsVersion"><PARAM name="version" ptype="FROM_CM" tr-mapped-to="X_ADB_TLSVersion" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="tlsCheck" /><COMMAND name="tlsCheck set"><PARAM name="check" ptype="FROM_CM" tr-mapped-to="X_ADB_TLSCheck" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tlsCheck add" no-config-gen="true"><PARAM name="check" ptype="FROM_CM" tr-mapped-to="X_ADB_TLSCheck" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tlsCheck del" no-config-gen="true"><PARAM name="check" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.X_ADB_TLSCheck" tr-mapped-to="X_ADB_TLSCheck" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tlsCheck clear" no-config-gen="true" tr-mapped-to="X_ADB_TLSCheck" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="tlsCheck show" no-config-gen="true" tr-mapped-to="X_ADB_TLSCheck"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="idleTimeout"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="X_ADB_IdleTimeout" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="delayWindow"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="X_ADB_DelaySecondsTimeWindow" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="provisioningCode" tr-obj="Device.DeviceInfo"><PARAM name="code" ptype="FROM_CM" allow-empty="true" tr-mapped-to="ProvisioningCode" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="connectionRequest" viewid="obj=${obj};prompt=${prompt}-connreq" view="mgmt-connectionrequest-view" tr-config-phony="true" /></VIEW><VIEW name="mgmt-connectionrequest-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="interface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(X_ADB_ConnectionRequestInterface).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_ConnectionRequestInterface=${ifname}</ACTION></COMMAND><COMMAND name="port"><PARAM name="port" ptype="FROM_CM" tr-mapped-to="X_ADB_ConnectionRequestPort" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="urlPath"><PARAM name="path" ptype="FROM_CM" tr-mapped-to="X_ADB_ConnectionRequestPath" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no" /><COMMAND name="no urlPath" tr-mapped-to="X_ADB_ConnectionRequestPath" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="randomPath"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_ConnectionRequestRandomPath" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="interval"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="X_ADB_ConnectionRequestInterval" /><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="mgmt-stun-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="enable" tr-mapped-to="STUNEnable" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="disable" tr-mapped-to="STUNEnable" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="server" /><COMMAND name="server address"><PARAM name="address" ptype="FROM_CM" tr-mapped-to="STUNServerAddress" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no" /><COMMAND name="no server" /><COMMAND name="no server address" tr-mapped-to="STUNServerAddress" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="server port"><PARAM name="port" ptype="FROM_CM" tr-mapped-to="STUNServerPort" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="username"><PARAM name="username" ptype="FROM_CM" tr-mapped-to="STUNUsername" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no username" tr-mapped-to="STUNUsername" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="password" no-config-gen="true"><PARAM name="password" ptype="FROM_CM" tr-mapped-to="STUNPassword" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no password" tr-mapped-to="STUNPassword" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="maxKeepalivePeriod"><PARAM name="time" ptype="FROM_CM" tr-ifval-not-in="-1" tr-mapped-to="STUNMaximumKeepAlivePeriod" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no maxKeepalivePeriod" tr-mapped-to="STUNMaximumKeepAlivePeriod" tr-val="-1"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="minKeepalivePeriod"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="STUNMinimumKeepAlivePeriod" /><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="mgmt-manageable-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /></VIEW><VIEW name="mgmt-managementAgent-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="acl" /><NAMESPACE ref="mgmt-agent-common-view" help="true" completion="true" /><COMMAND name="server" /><COMMAND name="server url"><PARAM name="url" ptype="FROM_CM" tr-mapped-to="URL" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="server username"><PARAM name="username" ptype="FROM_CM" tr-mapped-to="Username" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no" /><COMMAND name="no server" /><COMMAND name="no server url" tr-mapped-to="URL" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no server username" tr-mapped-to="Username" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="server password" no-config-gen="true"><PARAM name="password" ptype="FROM_CM" tr-mapped-to="Password" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no server password" tr-mapped-to="Password" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="notification"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="PeriodicInformEnable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="notificationInterval"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="PeriodicInformInterval" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="notificationTime"><PARAM name="date" ptype="FROM_CM" tr-mapped-to="PeriodicInformTime" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="notificationInformInterface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(X_ADB_InformInterface).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_InformInterface=${ifname}</ACTION></COMMAND><COMMAND name="no notificationInformInterface" tr-mapped-to="X_ADB_InformInterface" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="changeNotifiicationMinTime"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="DefaultActiveNotificationThrottle" /><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="mgmt-telnetserver-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="localAccess" viewid="obj=${obj}${CMD_ATTR_tr-obj};is_remote=false;prompt=${prompt}-local" view="ssh_telnetserver-common-view" tr-config-phony="true" tr-obj=".LocalAccess" /><COMMAND name="remoteAccess" viewid="obj=${obj}${CMD_ATTR_tr-obj};is_remote=true;prompt=${prompt}-remote" view="ssh_telnetserver-common-view" tr-config-phony="true" tr-obj=".RemoteAccess" /></VIEW><VIEW name="ssh_telnetserver-common-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="port"><PARAM name="port" ptype="FROM_CM" tr-mapped-to="Port" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="interface" /><COMMAND name="interface set"><PARAM name="interfaces" ptype="STRING" tr-mapped-to="Interfaces" tr-var-action="VAR_GET_INTERFACES" /><ACTION builtin="cm_list_reference_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.IP.Interface.[X_ADB_Upstream=${is_remote}].Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface add" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.[X_ADB_Upstream=${is_remote}].Alias" tr-mapped-to="Interfaces" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface del" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="listFromRefProp ${obj}.${PAR_ATTR_1_tr-mapped-to}#Alias" tr-mapped-to="Interfaces" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface clear" no-config-gen="true" tr-mapped-to="Interfaces" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interface show" no-config-gen="true" tr-mapped-to="Interfaces"><ACTION>
          . /etc/clish/clish-commons.sh
          show_deref_list ${obj}.${CMD_ATTR_tr-mapped-to} Alias
      </ACTION></COMMAND><COMMAND name="sessionLifetime"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="SessionLifeTime" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="acl"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_AccessControlEnable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add aclRule" tr-obj=".X_ADB_ACLRule"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${obj}${CMD_ATTR_tr-obj} Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="aclRule" viewid="obj=${alias};prompt=${prompt}-aclRule" view="aclrule-view" tr-obj=".X_ADB_ACLRule"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del aclRule" no-config-gen="true" tr-obj=".X_ADB_ACLRule"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND></VIEW><VIEW name="aclrule-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="description"><PARAM name="desc" ptype="FROM_CM" tr-mapped-to="Description" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="type"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="Type" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="ipv4Address"><PARAM name="addr" ptype="IPV4_ADDRESS" tr-mapped-to="IPAddress" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="ipv4Mask"><PARAM name="mask" ptype="IPV4_MASK" tr-mapped-to="SubnetMask" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="addressRange"><PARAM name="min" ptype="IPV4_ADDRESS" tr-mapped-to="IPAddressRangeMin" /><PARAM name="max" ptype="IPV4_ADDRESS" tr-mapped-to="IPAddressRangeMax" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="ipv6Address"><PARAM name="addr" ptype="IPV6_ADDRESS_WITH_PREFIX" tr-mapped-to="IPv6Address" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="refresh" tr-mapped-to="Refresh" tr-val="true" no-config-gen="true"><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="mgmt-sshserver-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="localAccess" viewid="obj=${obj}${CMD_ATTR_tr-obj};is_remote=false;prompt=${prompt}-local" view="ssh_telnetserver-common-view" tr-config-phony="true" tr-obj=".LocalAccess" /><COMMAND name="remoteAccess" viewid="obj=${obj}${CMD_ATTR_tr-obj};is_remote=true;prompt=${prompt}-remote" view="ssh_telnetserver-common-view" tr-config-phony="true" tr-obj=".RemoteAccess" /></VIEW><VIEW name="mgmt-users-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="addUser" help="hidden" tr-obj=".User"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="Username" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${obj}${CMD_ATTR_tr-obj} Username=${__eval PAR_ATTR_1_name}	X_ADB_Creator=CLI</ACTION></COMMAND><COMMAND name="user" viewid="obj=${name};prompt=${prompt}-user" view="mgmt-users-user-view" tr-obj=".User"><PARAM name="name" ptype="COMPLETE" ptype_args="/etc/clish/completion.sh possible_user_to_modify" tr-mapped-to="Username" /></COMMAND><COMMAND name="delUser" no-config-gen="true" help="hidden" tr-obj=".User"><PARAM name="name" ptype="COMPLETE" ptype_args="/etc/clish/completion.sh possible_user_to_del" tr-mapped-to="Username" /><ACTION builtin="cmwrap@cmplugin">DEL ${name}</ACTION></COMMAND><COMMAND name="unlock" no-config-gen="true" help="hidden" tr-obj=".User"><PARAM name="name" ptype="COMPLETE" ptype_args="/etc/clish/completion.sh possible_user_to_unlock" /><ACTION builtin="cmwrap@cmplugin">DEL ${name}</ACTION></COMMAND></VIEW><VIEW name="mgmt-users-user-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_USERNAME})# " depth="dynamic"><COMMAND name="show" show_all_except="yes" escape_chars="&quot;" no-config-gen="true"><DISPENTRY tr-mapped-to="Alias" /><DISPENTRY tr-mapped-to="Password" /><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND><COMMAND name="password" no-config-gen="true" tr-obj=".[X_ADB_PasswordType=None]"><PARAM name="pass" ptype="FROM_CM" tr-mapped-to="Password" /><PARAM name="crypt" ptype="FROM_CM" optional="true" default="None" tr-mapped-to="X_ADB_PasswordType" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}	${obj}.X_ADB_PasswordForm=Open</ACTION></COMMAND><COMMAND name="setCryptedPassword" no-config-gen="true" tr-obj=".[X_ADB_PasswordType=Crypt]"><PARAM name="pass" ptype="FROM_CM" tr-mapped-to="Password" /><ACTION>
      # To see how crypted password should looks like see "crypt" function in man
      RegExpression='^\$1\$[0-9a-zA-Z\.\/]{2,16}\$[0-9a-zA-Z\.\/]{22}$'

      echo "${pass}" | grep -qE  $RegExpression
      if [ "$?" != "0" -a "${pass}" != "*" ]; then
          echo "Invalid password, maybe try \"password\" command"
          exit 1
      fi

      cmclient SETM "${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.X_ADB_PasswordType=Crypt	${obj}.X_ADB_PasswordForm=Crypt"
      cmclient SET ${obj}.X_ADB_PasswordForm "Open"
      </ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no password" tr-mapped-to="Password" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="userType"><PARAM name="type" ptype="COMPLETE" ptype_args="/etc/clish/completion.sh possible_user_type_to_switch ${obj}" tr-mapped-to="X_ADB_Role" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="enable" tr-mapped-to="Enable" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="disable" tr-mapped-to="Enable" tr-val="false"><ACTION>
      # Accordingly to DOM X_ADB_Permissions description: a user cannot delete or disable himself
      # However this command must be visible in order to enable succesfull execution of LoadConfigScript,
      # so when user atempts disable himself nothing happens
      local objUserName
      cmclient -v objUserName GETV ${obj}.Username
      if [ "$USER" != "$objUserName" ]; then
          cmclient SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}
      fi
      </ACTION></COMMAND><COMMAND name="localAccess"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_LocalAccessCapable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="remoteAccess"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="RemoteAccessCapable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="guiAccess"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_GUIAccessCapable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="guiLevels"><PARAM name="val" ptype="FROM_CM" tr-mapped-to="X_ADB_GUILevels" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="cliAccess"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_CLIAccessCapable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="cliPrompt"><PARAM name="prompt" ptype="FROM_CM" tr-mapped-to="X_ADB_CLIPrompt" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="ipsecXAuth" aux_availability_condition="Device.IPsec"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_IPsecAccessCapable" /><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="mgmt-webgui-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="passwordRequest"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="PasswordRequired" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="passwordSelect"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="PasswordUserSelectable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="passwordReset" tr-mapped-to="PasswordUserSelectable" tr-val="false"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="isp" viewid="obj=${obj};prompt=${prompt}-isp" view="mgmt-webgui-isp-view" tr-config-phony="true" /><COMMAND name="language"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="CurrentLanguage" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="help"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_HelpEnabled" /><ACTION builtin="cmset@cmplugin" /></COMMAND><VAR name="VAR_RUNCONF_PBC_RADIO" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        show_deref_list_as_list ${obj}.X_ADB_PBCRadioSelector Alias
      </ACTION></VAR><COMMAND name="pbcRadio" /><COMMAND name="pbcRadio set"><PARAM name="method_list" ptype="STRING" tr-mapped-to="X_ADB_PBCRadioSelector" tr-var-action="VAR_RUNCONF_PBC_RADIO" /><ACTION builtin="cm_list_reference_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.WiFi.AccessPoint.Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="pbcRadio add" no-config-gen="true"><PARAM name="method" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.WiFi.AccessPoint.Alias" tr-mapped-to="X_ADB_PBCRadioSelector" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="pbcRadio del" no-config-gen="true"><PARAM name="method" ptype="COMPLETE_NATIVE" ptype_args="listFromRefProp ${obj}.${PAR_ATTR_1_tr-mapped-to}#Alias" tr-mapped-to="X_ADB_PBCRadioSelector" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="pbcRadio clear" tr-mapped-to="X_ADB_PBCRadioSelector" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="pbcRadio show" tr-mapped-to="X_ADB_PBCRadioSelector" no-config-gen="true"><ACTION>
      . /etc/clish/clish-commons.sh
      show_deref_list_as_list ${obj}.${CMD_ATTR_tr-mapped-to} Alias
      echo
      </ACTION></COMMAND><COMMAND name="localAccess" viewid="obj=${obj}${CMD_ATTR_tr-obj};is_remote=false;prompt=${prompt}-localAccess" view="mgmt-webgui-access-local-view" tr-config-phony="true" tr-obj=".X_ADB_LocalAccess" /><COMMAND name="remoteAccess" viewid="obj=${obj}${CMD_ATTR_tr-obj};is_remote=true;prompt=${prompt}-remoteAccess" view="mgmt-webgui-access-remote-view" tr-config-phony="true" tr-obj=".RemoteAccess" /><COMMAND name="uiPage" viewid="obj=${page};prompt=${prompt}-page" view="mgmt-webgui-uipage-view" tr-config-phony="true" tr-obj=".X_ADB_AccessControl.Feature.[Origin!CPE]"><PARAM name="page" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}.X_ADB_AccessControl.Feature.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="PagePath" /></COMMAND><COMMAND name="show uiPage" no-config-gen="true" tr-obj=".X_ADB_AccessControl.Feature"><ACTION builtin="cmshow@cmplugin">${obj}${CMD_ATTR_tr-obj}</ACTION></COMMAND></VIEW><VIEW name="mgmt-webgui-isp-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="name"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="ISPName" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no" /><COMMAND name="no name" tr-mapped-to="ISPName" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="helpDeskNumber"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="ISPHelpDesk" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no helpDeskNumber" tr-mapped-to="ISPHelpDesk" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="homePage"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="ISPHomePage" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no homePage" tr-mapped-to="ISPHomePage" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="helpPage"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="ISPHelpPage" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no helpPage" tr-mapped-to="ISPHelpPage" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="mgmt-webgui-access-local-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="mgmt-webgui-access-common-view" help="true" completion="true" /><COMMAND name="httpPort"><PARAM name="port" ptype="FROM_CM" tr-mapped-to="Port" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="httpSecondaryPort"><PARAM name="port" ptype="FROM_CM" tr-mapped-to="SecondaryPort" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="httpsPort"><PARAM name="port" ptype="FROM_CM" tr-mapped-to="HTTPSPort" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="httpsSecondaryPort"><PARAM name="port" ptype="FROM_CM" tr-mapped-to="SecondaryHTTPSPort" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="interface" /><COMMAND name="interface set"><PARAM name="interfaces" ptype="STRING" tr-mapped-to="Interface" tr-var-action="VAR_GET_INTERFACE" /><ACTION builtin="cm_list_reference_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.IP.Interface.[X_ADB_Upstream=${is_remote}].Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface add" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.[X_ADB_Upstream=${is_remote}].Alias" tr-mapped-to="Interface" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface del" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="listFromRefProp ${obj}.${PAR_ATTR_1_tr-mapped-to}#Alias" tr-mapped-to="Interface" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface clear" no-config-gen="true" tr-mapped-to="Interface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interface show" no-config-gen="true" tr-mapped-to="Interface"><ACTION>
          . /etc/clish/clish-commons.sh
          show_deref_list ${obj}.${CMD_ATTR_tr-mapped-to} Alias
      </ACTION></COMMAND><COMMAND name="sessionLifetime"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="SessionLifeTime" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="reset" tr-mapped-to="Reset" tr-val="true" no-config-gen="true"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="protocol" /><COMMAND name="protocol set"><PARAM name="check" ptype="FROM_CM" tr-mapped-to="ProtocolsEnabled" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="protocol add" no-config-gen="true"><PARAM name="check" ptype="FROM_CM" tr-mapped-to="ProtocolsEnabled" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="protocol del" no-config-gen="true"><PARAM name="check" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.ProtocolsEnabled" tr-mapped-to="ProtocolsEnabled" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="protocol clear" no-config-gen="true" tr-mapped-to="ProtocolsEnabled" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="protocol show" no-config-gen="true" tr-mapped-to="ProtocolsEnabled"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND></VIEW><VIEW name="mgmt-webgui-access-common-view" depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="tlsVersion" /><COMMAND name="tlsVersion set"><PARAM name="check" ptype="FROM_CM" tr-mapped-to="X_ADB_TLSVersion" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tlsVersion add" no-config-gen="true"><PARAM name="check" ptype="FROM_CM" tr-mapped-to="X_ADB_TLSVersion" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tlsVersion del" no-config-gen="true"><PARAM name="check" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.X_ADB_TLSVersion" tr-mapped-to="X_ADB_TLSVersion" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tlsVersion clear" no-config-gen="true" tr-mapped-to="X_ADB_TLSVersion" tr-val="Auto"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="tlsVersion show" no-config-gen="true" tr-mapped-to="X_ADB_TLSVersion"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="tlsCheck" /><COMMAND name="tlsCheck set"><PARAM name="check" ptype="FROM_CM" tr-mapped-to="X_ADB_TLSClientCheck" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tlsCheck add" no-config-gen="true"><PARAM name="check" ptype="FROM_CM" tr-mapped-to="X_ADB_TLSClientCheck" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tlsCheck del" no-config-gen="true"><PARAM name="check" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.X_ADB_TLSClientCheck" tr-mapped-to="X_ADB_TLSClientCheck" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tlsCheck clear" no-config-gen="true" tr-mapped-to="X_ADB_TLSClientCheck" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="tlsCheck show" no-config-gen="true" tr-mapped-to="X_ADB_TLSClientCheck"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="acl"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_AccessControlEnable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add aclRule" tr-obj=".X_ADB_ACLRule"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${obj}${CMD_ATTR_tr-obj} Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="aclRule" viewid="obj=${alias};prompt=${prompt}-aclRule" view="aclrule-view" tr-obj=".X_ADB_ACLRule"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del aclRule" no-config-gen="true" tr-obj=".X_ADB_ACLRule"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND></VIEW><VIEW name="mgmt-webgui-access-remote-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="mgmt-webgui-access-common-view" help="true" completion="true" /><COMMAND name="httpPort"><PARAM name="port" ptype="FROM_CM" tr-mapped-to="Port" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="httpSecondaryPort"><PARAM name="port" ptype="FROM_CM" tr-mapped-to="X_ADB_SecondaryPort" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="httpsPort"><PARAM name="port" ptype="FROM_CM" tr-mapped-to="X_ADB_HTTPSPort" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="httpsSecondaryPort"><PARAM name="port" ptype="FROM_CM" tr-mapped-to="X_ADB_SecondaryHTTPSPort" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="protocol" /><COMMAND name="protocol set"><PARAM name="check" ptype="FROM_CM" tr-mapped-to="X_ADB_ProtocolsEnabled" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="protocol add" no-config-gen="true"><PARAM name="check" ptype="FROM_CM" tr-mapped-to="X_ADB_ProtocolsEnabled" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="protocol del" no-config-gen="true"><PARAM name="check" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.X_ADB_ProtocolsEnabled" tr-mapped-to="X_ADB_ProtocolsEnabled" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="protocol clear" no-config-gen="true" tr-mapped-to="X_ADB_ProtocolsEnabled" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="protocol show" no-config-gen="true" tr-mapped-to="X_ADB_ProtocolsEnabled"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="interface" /><COMMAND name="interface set"><PARAM name="interfaces" ptype="STRING" tr-mapped-to="X_ADB_Interface" tr-var-action="VAR_GET_X_ADB_INTERFACE" /><ACTION builtin="cm_list_reference_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.IP.Interface.[X_ADB_Upstream=${is_remote}].Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface add" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.[X_ADB_Upstream=${is_remote}].Alias" tr-mapped-to="X_ADB_Interface" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface del" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="listFromRefProp ${obj}.${PAR_ATTR_1_tr-mapped-to}#Alias" tr-mapped-to="X_ADB_Interface" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface clear" no-config-gen="true" tr-mapped-to="X_ADB_Interface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interface show" no-config-gen="true" tr-mapped-to="X_ADB_Interface"><ACTION>
          . /etc/clish/clish-commons.sh
          show_deref_list ${obj}.${CMD_ATTR_tr-mapped-to} Alias
      </ACTION></COMMAND><COMMAND name="sessionLifetime"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="X_ADB_SessionLifeTime" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="reset" tr-mapped-to="X_ADB_Reset" tr-val="true" no-config-gen="true"><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="mgmt-webgui-uipage-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_PAGE_PATH})# " depth="dynamic"><COMMAND name="show" no-config-gen="true"><ACTION>
        . /etc/clish/clish-commons.sh
        print_horizontal_line
        show_single_entry ${obj} "PagePath"
        show_single_entry ${obj} "Origin"
        cmclient -v guipermissions GETV ${obj}.Permissions
        show_split_text "Permissions to GUI page" $guipermissions
        show_single_entry ${obj} "X_ADB_Permissions"
        print_horizontal_line
      </ACTION></COMMAND><VAR name="VAR_GET_PAGE_PATH" dynamic="true"><ACTION builtin="cmwrap@cmplugin">GETV ${obj}.PagePath</ACTION></VAR><COMMAND name="permissions"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="Permissions" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.Origin=User</ACTION></COMMAND></VIEW><VIEW name="mgmt-execenv-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="duStateChangeCompletePolicy" viewid="obj=${CMD_ATTR_tr-obj};prompt=${prompt}-duPolicy" view="duStateChangeCompletePolicy-view" tr-obj="Device.ManagementServer.DUStateChangeComplPolicy" tr-config-phony="true" /><COMMAND name="linux" viewid="obj=${CMD_ATTR_tr-obj};prompt=${prompt}-linux" view="mgmt-execenv-osgi-linux-view" aux_availability_condition="${CMD_ATTR_tr-obj}" tr-obj="Device.SoftwareModules.ExecEnv.1" tr-config-phony="true" /><COMMAND name="osgi" viewid="obj=${CMD_ATTR_tr-obj};prompt=${prompt}-osgi" view="mgmt-execenv-osgi-linux-view" aux_availability_condition="${CMD_ATTR_tr-obj}" tr-obj="Device.SoftwareModules.ExecEnv.2" tr-config-phony="true" /></VIEW><VIEW name="duStateChangeCompletePolicy-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="operation"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="OperationTypeFilter" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="result"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="ResultTypeFilter" /><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="mgmt-execenv-osgi-linux-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="repository"><PARAM name="url" ptype="FROM_CM" tr-mapped-to="X_ADB_RepositoryURL" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="sandbox"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_SecurityEnable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="deploymentUnit" viewid="obj=${alias};prompt=${prompt}-du" view="mgmt-deploymentunit-view" tr-obj="Device.SoftwareModules.DeploymentUnit" tr-connection="ExecutionEnvRef" tr-config-phony="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.[ExecutionEnvRef=${obj}].Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="executionUnit" viewid="obj=${alias};prompt=${prompt}-eu" view="mgmt-executionunit-view" tr-obj="Device.SoftwareModules.ExecutionUnit" tr-connection="ExecutionEnvRef" no-config-gen="true" tr-config-phony="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.[ExecutionEnvRef=${obj}].Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="reset" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Reset=true</ACTION></COMMAND></VIEW><VIEW name="mgmt-deploymentunit-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="allowRemoving"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_Removable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="allowUpgrade"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_Upgradable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="install"><PARAM name="destination" ptype="FROM_CM" tr-mapped-to="X_ADB_InstallDest" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Operation=Install	${obj}.${PAR_ATTR_1_tr-mapped-to}=${destination}</ACTION></COMMAND><COMMAND name="uninstall" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Operation=Uninstall</ACTION></COMMAND></VIEW><VIEW name="mgmt-executionunit-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="requestedState" no-config-gen="true"><PARAM name="state" ptype="FROM_CM" tr-mapped-to="RequestedState" /><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="mgmt-factorymode-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="serialNumber"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="SerialNumber" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no" /><COMMAND name="no serialNumber" tr-mapped-to="SerialNumber" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="baseMacAddress"><PARAM name="addr" ptype="FROM_CM" tr-mapped-to="BaseMACAddress" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no baseMacAddress" tr-mapped-to="BaseMACAddress" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="maxMacAddressNumber"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="MaxMACAddress" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="SSID"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="WiFiSSID" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no SSID" tr-mapped-to="WiFiSSID" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="wepKey"><PARAM name="key" ptype="FROM_CM" tr-mapped-to="WiFiWEPKey" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no wepKey" tr-mapped-to="WiFiWEPKey" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="passphrase"><PARAM name="key" ptype="FROM_CM" tr-mapped-to="WiFiKeyPassphrase" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no passphrase" tr-mapped-to="WiFiKeyPassphrase" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="SSID2"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="WiFiSSID2" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no SSID2" tr-mapped-to="WiFiSSID2" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="passphrase2"><PARAM name="key" ptype="FROM_CM" tr-mapped-to="WiFiKeyPassphrase2" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no passphrase2" tr-mapped-to="WiFiKeyPassphrase2" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="factoryMode"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="FactoryMode" /><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="firewall-main-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="config"><PARAM name="level" tr-mapped-to="Config" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="advancedLevel"><PARAM name="level" tr-mapped-to="%(AdvancedLevel).Name" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.Firewall.Level.Name" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.AdvancedLevel=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" no-config-gen="true" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Enable, Config, LastChange, Version, Type" /><DISPENTRY tr-mapped-to="AdvancedLevel">
            cmclient GETV $(cmclient GETV "Device.Firewall.AdvancedLevel").Name
      </DISPENTRY><ACTION>
        # the following prints the object contents as specified above
        # Note: preferably it should be implemented as a VAR routine, alas, it tries to "execute"
        # the returned output ...
		obj=Device.Firewall
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "$obj" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"

        print_horizontal_line
        show_split_text "Levels available" "Chain linked"
        print_horizontal_line
        cmclient -v levels GETO $obj.Level
        for level in $levels; do
            cmclient -v level_name GETV $level.Name
            cmclient -v level_chain GETV "%($level.Chain).Name"
            show_split_text "$level_name" "$level_chain"
        done

        print_horizontal_line
        print_horizontal_line
        show_split_text "Chains available" "Used by"
        print_horizontal_line
        cmclient -v chains GETO $obj.Chain
        for chain in $chains; do
            cmclient -v chain_name GETV $chain.Name
            cmclient -v linked_level_names GETV "$obj.Level.[Chain=$chain].Name"
            cmclient -v linked_rule_names GETV "%($obj.Chain.Rule.[TargetChain=$chain].TargetChain).Name"
            local right_string=""
            [ -n "$linked_level_names" ] &amp;&amp; right_string="Levels: ($linked_level_names)"
            [ -n "$linked_rule_names" ] &amp;&amp; right_string="$right_string Rules: ($linked_rule_names)"
            [ -z "$right_string" ] &amp;&amp; right_string="NOBODY (consider removing)"

            show_split_text "$chain_name" "$right_string"
        done
        print_horizontal_line

      </ACTION></COMMAND><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add level" tr-obj=".Level" tr-config-phony="true" config-gen-prio="0"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="Name" /><ACTION>
        # we want to add an object with the specified name. If it already exists, it will
        # not be added
        obj_to_add="${obj}.Level.[${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}]"
        cmclient -v exclude GETEXCLUDE
        if [ "$exclude" = "1" ]; then
               cmclient NOEXCLUDE
               cmclient -v res ADD "$obj_to_add"  >/dev/null 2>&amp;1
               cmclient EXCLUDE
        else
               cmclient -v res ADD "$obj_to_add"  >/dev/null 2>&amp;1
        fi
        # Check if $res is a number (if not then printf returns "0")
        id=`printf "%d\n" $res 2>/dev/null`
        if [ "$id" != "0" ]; then
            cmclient -v chain_object GETV "$obj_to_add.$res.Chain"
              # FIXME the following is a workaround for the missing functionality
              # from EPICC-8706. Should be removed (from FIXME to FIXME_END) after it is available, but
              # should do no harm anyway
              cmclient -v chain_object_name GETV "$chain_object.Name"
              cmclient -v chain_object_alias GETV "$chain_object.Alias"
              # if no name was assigned ...
              [ -z "$chain_object_name" ] &amp;&amp; . /etc/clish/quick_cm.sh setm "$chain_object.Name=$chain_object_alias"
              # FIXME_END
            cmclient -v actual_chain_name GETV $chain_object.Name
            echo "Automatically created chain $actual_chain_name"
        else
            echo "Error creating level"
        fi
      </ACTION></COMMAND><COMMAND name="level" view="firewall-level-view" viewid="obj=${level};parent=${obj};prompt=${prompt}-level" tr-obj=".Level"><PARAM name="level" tr-mapped-to="Name" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.Firewall.Level.Name" /></COMMAND><COMMAND name="del level" no-config-gen="true"><PARAM name="level" tr-mapped-to="Level" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.Firewall.Level.Name" /><ACTION builtin="cmwrap@cmplugin">DEL ${level}</ACTION></COMMAND><COMMAND name="add chain" tr-obj="Device.Firewall.Chain" tr-config-phony="true"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="Name" /><ACTION>
        # we want to add an object with the specified name. If it already exists, it will
        # not be added
        obj_to_add="${CMD_ATTR_tr-obj}.[${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}]"
        cmclient -v res ADD $obj_to_add  >/dev/null 2>&amp;1
        # Check if $res is a number (if not then printf returns "0")
        id=`printf "%d\n" $res 2>/dev/null`
        if [ "$id" -gt 0 ]; then
            . /etc/clish/quick_cm.sh setm "$obj_to_add.$id.Creator=UserInterface" >/dev/null 2>&amp;1
        fi
      </ACTION></COMMAND><COMMAND name="chain" view="firewall-chain-view" viewid="obj=${chain};parent=${obj};prompt=${prompt}-chain" tr-obj=".Chain"><PARAM name="chain" tr-mapped-to="Name" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.Firewall.Chain.Name" /></COMMAND><COMMAND name="del chain" no-config-gen="true"><PARAM name="chain" tr-mapped-to="Chain" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.Firewall.Chain.Name" /><ACTION builtin="cmwrap@cmplugin">DEL ${chain}</ACTION></COMMAND></VIEW><VIEW name="firewall-level-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_NAME})# " depth="dynamic"><COMMAND name="show" no-config-gen="true" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Name, Description, Order,PortMappingEnabled, DefaultPolicy, DefaultLogPolicy, X_ADB_AllowLocalServices" /><DISPENTRY tr-mapped-to="Chain">
            cmclient GETV $(cmclient GETV "${obj}.Chain").Name
        </DISPENTRY><ACTION>
        # the following prints the object contents as specified above
        # Note: preferably it should be implemented as a VAR routine, alas, it tries to "execute"
        # the returned output ...
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND><COMMAND name="description"><PARAM name="dsc" tr-mapped-to="Description" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="order"><PARAM name="val" tr-mapped-to="Order" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="portMap"><PARAM name="enable" tr-mapped-to="PortMappingEnabled" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="defaultPolicy"><PARAM name="policy" tr-mapped-to="DefaultPolicy" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="defaultPolicyLog"><PARAM name="enable" tr-mapped-to="DefaultLogPolicy" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="localServicesFilter"><PARAM name="enable" tr-mapped-to="X_ADB_AllowLocalServices" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="setPermissions"><PARAM name="permissions" tr-mapped-to="X_ADB_Permissions" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="firewall-chain-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_NAME})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="show" no-config-gen="true" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Name, Enable, Creator, RuleNumberOfEntries" /><ACTION>
        # the following prints the object contents as specified above
        # Note: preferably it should be implemented as a VAR routine, alas, it tries to "execute"
        # the returned output ...
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add rule" tr-obj=".Rule" tr-config-phony="true"><PARAM name="alias" optional="true" ptype="FROM_CM" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${obj}.Rule Alias=${alias}</ACTION></COMMAND><COMMAND name="del rule" no-config-gen="true"><PARAM name="rule" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}.Rule.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${rule}</ACTION></COMMAND><COMMAND name="rule" view="firewall-rule-view" viewid="obj=${rule};parent=${obj};prompt=${prompt}:${VAR_GET_NAME}-rule" tr-obj=".Rule"><PARAM name="rule" tr-mapped-to="Alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}.Rule.Alias" /></COMMAND><COMMAND name="setPermissions"><PARAM name="permissions" tr-mapped-to="X_ADB_Permissions" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="firewall-rule-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-permissions-view" help="true" completion="true" /><VAR name="VAR_RUNCONF_SOURCE_INTERFACE" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        cmclient -v all GETV ${obj}.SourceAllInterfaces
        if [ "$all" = "true" ]; then
            echo -n "All"
        else
            cmclient -v iface GETV ${obj}.SourceInterface
            if [ "$iface" = "X_ADB_Local" ]; then
                echo -n "local"
            else
                show_deref_list_as_list ${obj}.SourceInterface Alias true
            fi
        fi
      </ACTION></VAR><VAR name="VAR_RUNCONF_DEST_INTERFACE" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        cmclient -v all GETV ${obj}.DestAllInterfaces
        if [ "$all" = "true" ]; then
            echo -n "All"
        else
            cmclient -v iface GETV ${obj}.DestInterface
            if [ "$iface" = "X_ADB_Local" ]; then
                echo -n "local"
            else
                show_deref_list_as_list ${obj}.DestInterface Alias true
            fi
        fi
      </ACTION></VAR><VAR name="VAR_RUNCONF_DEST_IP" dynamic="true"><ACTION>
      . /etc/clish/clish-commons.sh
      show_full_ip_possibly_excluded ${obj} Dest
      </ACTION></VAR><VAR name="VAR_RUNCONF_SOURCE_IP" dynamic="true"><ACTION>
      . /etc/clish/clish-commons.sh
      show_full_ip_possibly_excluded ${obj} Source
      </ACTION></VAR><VAR name="VAR_RUNCONF_DSCP" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        local value=""
        cmclient -v value GETV "${obj}.DSCP"
        [ "$value" = "-1" ] &amp;&amp; value=""
        if [ "$value" != "" ]; then
          cmclient -v is_exl GETV "${obj}.DSCPExclude"
          value=$(num_to_dscp $value)
          [ "$is_exl" = "true" ] &amp;&amp; value="$value exclude"
        fi
        echo -n "$value"
      </ACTION></VAR><VAR name="VAR_SET_RANGE" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        [ "${portmin}" -gt "${portmax}" -a "${portmax}" -ne "-1" ] &amp;&amp; die "ERROR: Maximun range must be greater or equal than port field value."
        [ "${exclude}" = "true" ] &amp;&amp; excl="true" || excl="false"
        . /etc/clish/quick_cm.sh setm "${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}	${obj}.${PAR_ATTR_3_tr-mapped-to}=$excl"
      </ACTION></VAR><COMMAND name="no" /><COMMAND name="enable" tr-mapped-to="Enable" tr-val="true"><WARN condition="${obj}.[SourceInterface=].[SourceAllInterfaces=false]">WARNING: No source interface was specified for rule.</WARN><WARN condition="${obj}.[DestInterface=].[DestAllInterfaces=false]">WARNING: No destination interface was specified for rule.</WARN><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="disable" tr-mapped-to="Enable" tr-val="false"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="show" no-config-gen="true" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Alias, Enable, Status, Order, Description, Log,                 CreationDate, ExpiryDate, X_ADB_TCPFlagsSet, X_ADB_TCPFlagsUnset,                 X_ADB_AddressingMatch,X_ADB_AddressingNoMatch, X_ADB_ConnectionStatus" /><DISPENTRY tr-mapped-to="X_ADB_ForwardingPolicy">
            . /etc/clish/clish-commons.sh
            var_runconf_classIndex ${obj}.X_ADB_ForwardingPolicy get_forwarding_policies false
        </DISPENTRY><DISPENTRY tr-mapped-to="SourceInterface">
            . /etc/clish/clish-commons.sh
            cmclient -v all GETV ${obj}.SourceAllInterfaces
            if [ "$all" = "true" ]; then
                echo -n "All"
            else
                cmclient -v iface GETV ${obj}.SourceInterface
                if [ "$iface" = "X_ADB_Local" ]; then
                    echo -n "local"
                else
                    show_deref_list_as_list ${obj}.SourceInterface Alias true
                fi
            fi
        </DISPENTRY><DISPENTRY tr-mapped-to="SourceIP">
            echo "${VAR_RUNCONF_SOURCE_IP}"
        </DISPENTRY><DISPENTRY tr-mapped-to="SourcePort">
            show_portrange_possibly_excluded ${obj} SourcePort
        </DISPENTRY><DISPENTRY tr-mapped-to="DestInterface">
            . /etc/clish/clish-commons.sh
            cmclient -v all GETV ${obj}.DestAllInterfaces
            if [ "$all" = "true" ]; then
                echo -n "All"
            else
                cmclient -v iface GETV ${obj}.DestInterface
                if [ "$iface" = "X_ADB_Local" ]; then
                    echo -n "local"
                else
                    show_deref_list_as_list ${obj}.DestInterface Alias true
                fi
            fi
        </DISPENTRY><DISPENTRY tr-mapped-to="DestIP">
            echo "${VAR_RUNCONF_DEST_IP}"
        </DISPENTRY><DISPENTRY tr-mapped-to="DestPort">
            show_portrange_possibly_excluded ${obj} DestPort
        </DISPENTRY><DISPENTRY tr-mapped-to="DSCP">
          local value=""
          cmclient -v value GETV "${obj}.DSCP"
          [ "$value" = "-1" ] &amp;&amp; value="Any"
          if [ "$value" != "Any" -a "$value" != "" ]; then
            cmclient -v is_exl GETV "${obj}.DSCPExclude"
            value=$(num_to_dscp $value)
            [ "$is_exl" = "true" ] &amp;&amp; value="$value exclude"
          fi
          echo -n "$value"
        </DISPENTRY><DISPENTRY tr-mapped-to="Protocol">
          local value=""

          cmclient -v value GETV "${obj}.Protocol"
          [ "$value" = "-1" ] &amp;&amp; value="Any"
          if [ "$value" != "Any" -a "$value" != "" ]; then
            cmclient -v is_exl GETV "${obj}.ProtocolExclude"
            [ "$is_exl" = "true" ] &amp;&amp; value="$value (excluded)" || value="$value (not excluded)"
          fi

         echo "$value"

        </DISPENTRY><DISPENTRY tr-mapped-to="IPVersion">
            cmclient -v val GETV "${obj}.IPVersion"
            [ "$val" = "-1" ] &amp;&amp; val="Any" || val="IPv$val"
            echo "$val"
        </DISPENTRY><DISPENTRY tr-mapped-to="Target">
            cmclient -v val GETV "${obj}.Target"
            if [ "$val" = "TargetChain" ]; then
                cmclient -v tchain GETV "${obj}.TargetChain"
                cmclient -v val GETV "$tchain.Name"
                val="Send to chain: $val"
            fi
            echo "$val"
        </DISPENTRY><ACTION>
        # the following prints the object contents as specified above
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND><COMMAND name="description"><PARAM name="dsc" tr-mapped-to="Description" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="order"><PARAM name="order" tr-mapped-to="Order" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="expDate"><PARAM name="date" tr-mapped-to="ExpiryDate" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="targetAction" tr-obj=".[Target!TargetChain]"><PARAM name="action" tr-mapped-to="Target" ptype="FIREWALL_RULE_TARGET_ACTION" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="targetChain" tr-obj=".[Target=TargetChain]"><PARAM name="chain" tr-mapped-to="%(TargetChain).Name" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.Firewall.Chain.[Name!%(${parent}.Name)].Name" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.TargetChain=${chain}	${obj}.Target=TargetChain</ACTION></COMMAND><COMMAND name="no targetChain" tr-obj=".[Target=TargetChain]" tr-mapped-to="TargetChain" tr-val=""><WARN condition="${obj}.[Target=Drop]">WARNING: Please ensure that targetAction is properly set for rule.</WARN><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}	${obj}.Target=Drop</ACTION></COMMAND><COMMAND name="log"><PARAM name="enable" tr-mapped-to="Log" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="sourceInterface"><PARAM name="ifname" ptype="COMPLETE_READ" ptype_args="get_cust_obj_by_prop_with_pref Device.IP.Interface.Alias#Device.PPP.Interface.Alias#Device.ATM.Link.Alias#Device.PTM.Link.Alias#Device.WiFi.SSID.Alias#Device.Ethernet.Interface.Alias#Device.Bridging.Bridge.Port.[ManagementPort=true].Alias local\(X_ADB_Local\)#All\(All\) true" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" tr-var-action="VAR_RUNCONF_SOURCE_INTERFACE" /><ACTION>
        . /etc/clish/clish-commons.sh
          set_interface_possibly_excluded ${obj} Source ${ifname}  ${exclude}
      </ACTION></COMMAND><COMMAND name="no sourceInterface" tr-mapped-to="SourceInterface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no sourceInterface exclude" tr-mapped-to="SourceInterfaceExclude" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no sourceInterface all" tr-mapped-to="SourceAllInterfaces" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="destInterface"><PARAM name="ifname" ptype="COMPLETE" ptype_args="get_cust_obj_by_prop_with_pref Device.IP.Interface.Alias#Device.PPP.Interface.Alias#Device.ATM.Link.Alias#Device.PTM.Link.Alias#Device.WiFi.SSID.Alias#Device.Ethernet.Interface.Alias#Device.Bridging.Bridge.Port.[ManagementPort=true].Alias local\(X_ADB_Local\)#All\(All\) true" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" tr-var-action="VAR_RUNCONF_DEST_INTERFACE" /><ACTION>
        . /etc/clish/clish-commons.sh
          set_interface_possibly_excluded ${obj} Dest ${ifname} ${exclude}
      </ACTION></COMMAND><COMMAND name="no destInterface" tr-mapped-to="DestInterface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no destInterface exclude" tr-mapped-to="DestInterfaceExclude" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no destInterface all" tr-mapped-to="DestAllInterfaces" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="ipVersion" tr-obj=".[IPVersion!-1]"><PARAM name="version" tr-mapped-to="IPVersion" ptype="QOS_IP_VER" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no ipVersion" tr-mapped-to="IPVersion" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="destIpAddr"><PARAM name="ip" ptype="IPV4_ADDRESS_WITH_PREFIX" tr-mapped-to="DestIP" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" tr-var-action="VAR_RUNCONF_DEST_IP" /><ACTION>
        . /etc/clish/clish-commons.sh
        set_ip_with_prefix_possibly_excluded ${obj} Dest ${ip} ${exclude}
      </ACTION></COMMAND><COMMAND name="no destIpAddr" tr-mapped-to="DestIP" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.DestIP=	${obj}.DestMask=	${obj}.DestIPExclude=false</ACTION></COMMAND><COMMAND name="sourceIpAddr"><PARAM name="ip" ptype="IPV4_ADDRESS_WITH_PREFIX" tr-mapped-to="SourceIP" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" tr-var-action="VAR_RUNCONF_SOURCE_IP" /><ACTION>
        . /etc/clish/clish-commons.sh
        set_ip_with_prefix_possibly_excluded ${obj} Source ${ip} ${exclude}
      </ACTION></COMMAND><COMMAND name="no sourceIpAddr" tr-mapped-to="SourceIP" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.SourceIP=	${obj}.SourceMask=	${obj}.SourceIPExclude=false</ACTION></COMMAND><COMMAND name="protocol"><PARAM name="protocol" tr-mapped-to="Protocol" tr-ifval-not-in="-1" ptype="FROM_CM" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" default="false" tr-mapped-to="ProtocolExclude" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}</ACTION></COMMAND><COMMAND name="no protocol" tr-mapped-to="Protocol" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Protocol=-1	${obj}.ProtocolExclude=false</ACTION></COMMAND><COMMAND name="destPort"><PARAM name="portmin" tr-mapped-to="DestPort" tr-ifval-not-in="-1" ptype="FROM_CM" /><PARAM name="portmax" tr-mapped-to="DestPortRangeMax" optional="true" default="-1" ptype="FROM_CM" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" default="false" tr-mapped-to="DestPortExclude" /><ACTION> ${VAR_SET_RANGE} </ACTION></COMMAND><COMMAND name="no destPort" tr-mapped-to="DestPort" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.DestPort=-1	${obj}.DestPortRangeMax=-1	${obj}.DestPortExclude=false</ACTION></COMMAND><COMMAND name="sourcePort"><PARAM name="portmin" tr-mapped-to="SourcePort" tr-ifval-not-in="-1" ptype="FROM_CM" /><PARAM name="portmax" tr-mapped-to="SourcePortRangeMax" optional="true" default="-1" ptype="FROM_CM" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" default="false" tr-mapped-to="SourcePortExclude" /><ACTION> ${VAR_SET_RANGE} </ACTION></COMMAND><COMMAND name="no sourcePort" tr-mapped-to="SourcePort" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.SourcePort=-1	${obj}.SourcePortRangeMax=-1	${obj}.SourcePortExclude=false</ACTION></COMMAND><COMMAND name="dscp"><PARAM name="val" ptype="QOS_DSCP_RANGE" tr-var-action="VAR_RUNCONF_DSCP" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" default="false" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.DSCP=${val}	${obj}.DSCPExclude=${exclude}</ACTION></COMMAND><COMMAND name="no dscp" tr-mapped-to="DSCP" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.DSCP=-1	${obj}.DSCPExclude=false</ACTION></COMMAND><COMMAND name="tcpFlagsOn" /><COMMAND name="tcpFlagsOn add" no-config-gen="true"><PARAM name="entry" tr-mapped-to="X_ADB_TCPFlagsSet" ptype="FROM_CM" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tcpFlagsOn del" no-config-gen="true"><PARAM name="entry" tr-mapped-to="X_ADB_TCPFlagsSet" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.X_ADB_TCPFlagsSet" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tcpFlagsOn set"><PARAM name="list" ptype="FROM_CM" tr-mapped-to="X_ADB_TCPFlagsSet" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tcpFlagsOn show" no-config-gen="true" tr-mapped-to="X_ADB_TCPFlagsSet"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="tcpFlagsOn clear" tr-mapped-to="X_ADB_TCPFlagsSet" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="tcpFlagsUnset" /><COMMAND name="tcpFlagsUnset add" no-config-gen="true"><PARAM name="entry" tr-mapped-to="X_ADB_TCPFlagsUnset" ptype="FROM_CM" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tcpFlagsUnset del" no-config-gen="true"><PARAM name="entry" tr-mapped-to="X_ADB_TCPFlagsUnset" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.X_ADB_TCPFlagsUnset" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tcpFlagsUnset set"><PARAM name="list" ptype="FROM_CM" tr-mapped-to="X_ADB_TCPFlagsUnset" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tcpFlagsUnset show" no-config-gen="true" tr-mapped-to="X_ADB_TCPFlagsUnset"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="tcpFlagsUnset clear" tr-mapped-to="X_ADB_TCPFlagsUnset" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="addrTypeMatch" /><COMMAND name="addrTypeMatch add" no-config-gen="true"><PARAM name="entry" tr-mapped-to="X_ADB_AddressingMatch" ptype="FROM_CM" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="addrTypeMatch del" no-config-gen="true"><PARAM name="entry" tr-mapped-to="X_ADB_AddressingMatch" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.X_ADB_AddressingMatch" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="addrTypeMatch set"><PARAM name="list" ptype="FROM_CM" tr-mapped-to="X_ADB_AddressingMatch" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="addrTypeMatch show" no-config-gen="true" tr-mapped-to="X_ADB_AddressingMatch"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="addrTypeMatch clear" tr-mapped-to="X_ADB_AddressingMatch" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="addrTypeUnmatch" /><COMMAND name="addrTypeUnmatch add" no-config-gen="true"><PARAM name="entry" tr-mapped-to="X_ADB_AddressingNoMatch" ptype="FROM_CM" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="addrTypeUnmatch del" no-config-gen="true"><PARAM name="entry" tr-mapped-to="X_ADB_AddressingNoMatch" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.X_ADB_AddressingNoMatch" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="addrTypeUnmatch set"><PARAM name="list" ptype="FROM_CM" tr-mapped-to="X_ADB_AddressingNoMatch" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="addrTypeUnmatch show" no-config-gen="true" tr-mapped-to="X_ADB_AddressingNoMatch"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="addrTypeUnmatch clear" tr-mapped-to="X_ADB_AddressingNoMatch" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="connectionStatus" /><COMMAND name="connectionStatus add" no-config-gen="true"><PARAM name="entry" tr-mapped-to="X_ADB_ConnectionStatus" ptype="FROM_CM" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="connectionStatus del" no-config-gen="true"><PARAM name="entry" tr-mapped-to="X_ADB_ConnectionStatus" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.X_ADB_ConnectionStatus" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="connectionStatus set"><PARAM name="list" ptype="FROM_CM" tr-mapped-to="X_ADB_ConnectionStatus" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="connectionStatus show" no-config-gen="true" tr-mapped-to="X_ADB_ConnectionStatus"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="connectionStatus clear" tr-mapped-to="X_ADB_ConnectionStatus" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><VAR name="VAR_RUNCONF_CLASSINDEX_FIREWALL" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        var_runconf_classIndex ${obj}.X_ADB_ForwardingPolicy get_forwarding_policies
      </ACTION></VAR><COMMAND name="classificationIndex"><PARAM name="index" ptype="COMPLETE" ptype_args="get_forwarding_policies" tr-var-action="VAR_RUNCONF_CLASSINDEX_FIREWALL" /><PARAM name="new_value" test="&quot;${index}&quot;=&quot;new&quot;" ptype="UINT" optional="true" /><ACTION>
          val=${index}
          if [ "${index}" = "new" ]; then
              if [ -z "${new_value}" ]; then
                  echo "Provide a new value as the second parameter"
                  exit
              fi
              val=${new_value}
          else
              if [ -n "${new_value}" ]; then
                  echo "Warning: the second parameter ignored (valid only for \"new\")"
              fi
          fi
          . /etc/clish/quick_cm.sh setm "${obj}.X_ADB_ForwardingPolicy=$val"
      </ACTION></COMMAND><COMMAND name="no classificationIndex" tr-mapped-to="X_ADB_ForwardingPolicy" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND></VIEW><VIEW name="generic-obj-permissions-view" depth="dynamic"><COMMAND name="setPermissions"><PARAM name="permissions" ptype="FROM_CM" tr-mapped-to="X_ADB_Permissions" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="nat-config-view" depth="dynamic" prompt="${CLISH_PROMPT}(cfg-nat)# "><COMMAND name="add" no-config-gen="true" /><COMMAND name="del" no-config-gen="true" /><COMMAND name="del rule" no-config-gen="true"><PARAM name="name" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.NAT.InterfaceSetting.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${name}</ACTION></COMMAND><COMMAND name="add rule" tr-obj="Device.NAT.InterfaceSetting"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(Interface).Alias" /><PARAM name="alias_nat" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${CMD_ATTR_tr-obj} ${PAR_ATTR_2_tr-mapped-to}=${alias_nat}	Interface=${ifname}</ACTION></COMMAND><COMMAND name="rule" view="nat-rule-view" viewid="pobj=${obj};obj=${alias_nat};prompt=cfg-nat-rule" tr-obj="Device.NAT.InterfaceSetting"><PARAM name="alias_nat" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Alias" /></COMMAND><COMMAND name="portmappingClear" no-config-gen="true"><ACTION>. /etc/clish/ip-nat.sh clear</ACTION></COMMAND><COMMAND name="add portmapping" tr-obj="Device.NAT.PortMapping"><PARAM name="alias_portmap" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${CMD_ATTR_tr-obj} ${PAR_ATTR_1_tr-mapped-to}=${alias_portmap}</ACTION></COMMAND><COMMAND name="del portmapping" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.NAT.PortMapping.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="portmapping" view="portmapping-config-view" viewid="pobj=${obj};obj=${alias};prompt=cfg-nat-portmap" tr-obj="Device.NAT.PortMapping"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="add service" tr-obj="Device.NAT.X_ADB_Service"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${CMD_ATTR_tr-obj} Alias=${alias}</ACTION></COMMAND><COMMAND name="del service" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.NAT.X_ADB_Service.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="service" view="portmapping-service-config-view" viewid="pobj=${obj};obj=${alias};prompt=cfg-nat-service" tr-obj="Device.NAT.X_ADB_Service"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.NAT.X_ADB_Service.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="show" no-config-gen="true"><ACTION>. /etc/clish/ip-nat.sh show</ACTION></COMMAND></VIEW><VIEW name="nat-rule-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-permissions-view" help="true" completion="true" /><COMMAND name="show" no-config-gen="true" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Alias, Enable, X_ADB_Type, X_ADB_FilteringMode, X_ADB_ExternalPort,                                  X_ADB_ExternalPortEndRange, X_ADB_ExternalIPAddress,                                  X_ADB_ExternalIPMask, X_ADB_Order" /><DISPENTRY tr-mapped-to="X_ADB_ForwardingPolicy">
            . /etc/clish/clish-commons.sh
            var_runconf_classIndex ${obj}.X_ADB_ForwardingPolicy get_forwarding_policies false
        </DISPENTRY><ACTION>
            . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND><COMMAND name="port" tr-obj=".[X_ADB_ExternalPort!0]"><PARAM name="port" ptype="FROM_CM" tr-mapped-to="X_ADB_ExternalPort" /><PARAM name="port_end" ptype="FROM_CM" optional="true" default="0" tr-mapped-to="X_ADB_ExternalPortEndRange" /><WARN condition="${obj}.[X_ADB_Type!NAPT]">These settings are only meaningful if type is set to NAPT.</WARN><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${port}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${port_end}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="ip" /><COMMAND name="no ip" /><VAR name="TR_GET_NAT_ADDRESS_WITH_PREFIX" dynamic="true"><ACTION>
            . /etc/clish/ip-address.sh obj_ipv4_address_print_addr ${obj} X_ADB_ExternalIPAddress X_ADB_ExternalIPMask
        </ACTION></VAR><COMMAND name="ip address"><PARAM name="ip" ptype="IPV4_ADDRESS_WITH_PREFIX" tr-var-action="TR_GET_NAT_ADDRESS_WITH_PREFIX" /><ACTION>. /etc/clish/ip-address.sh obj_ipv4_address_set_addr ${obj} X_ADB_ExternalIPAddress X_ADB_ExternalIPMask "${ip}"</ACTION></COMMAND><COMMAND name="no ip address" tr-mapped-to="X_ADB_ExternalIPAddress" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_ExternalIPAddress=	${obj}.X_ADB_ExternalIPMask=</ACTION></COMMAND><COMMAND name="no port" tr-mapped-to="X_ADB_ExternalPort" tr-val="0"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_ExternalPort=0	${obj}.X_ADB_ExternalPortEndRange=0</ACTION></COMMAND><COMMAND name="type"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="X_ADB_Type" /><WARN condition="${obj}.[X_ADB_Type=NAT1:1].[X_ADB_ExternalIPAddress=]">Please remeber to set ip address.</WARN><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="filtering"><PARAM name="mode" ptype="COMPLETE_NATIVE" ptype_args="listFromProp Device.NAT.X_ADB_FilteringSupported" tr-mapped-to="X_ADB_FilteringMode" /><WARN condition="${obj}.[X_ADB_ExternalIPAddress!]">Filtering behaviour is ignored if external IP address is set.</WARN><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><VAR name="VAR_RUNCONF_CLASSINDEX_NATRULE" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        var_runconf_classIndex ${obj}.X_ADB_ForwardingPolicy get_forwarding_policies
      </ACTION></VAR><COMMAND name="classificationIndex"><PARAM name="index" ptype="COMPLETE" ptype_args="get_forwarding_policies" tr-var-action="VAR_RUNCONF_CLASSINDEX_NATRULE" /><PARAM name="new_value" test="&quot;${index}&quot;=&quot;new&quot;" ptype="UINT" optional="true" /><ACTION>
          val=${index}
          if [ "${index}" = "new" ]; then
              if [ -z "${new_value}" ]; then
                  echo "Provide a new value as the second parameter"
                  exit
              fi
              val=${new_value}
          else
              if [ -n "${new_value}" ]; then
                  echo "Warning: the second parameter ignored (valid only for \"new\")"
              fi
          fi
          . /etc/clish/quick_cm.sh setm "${obj}.X_ADB_ForwardingPolicy=$val"
      </ACTION></COMMAND><COMMAND name="no classificationIndex" tr-mapped-to="X_ADB_ForwardingPolicy" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="order"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="X_ADB_Order" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="portmapping-config-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-permissions-view" help="true" completion="true" /><NAMESPACE ref="x-adb-extportlist-config-view" help="true" completion="true" /><COMMAND name="show" no-config-gen="true" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Alias, Enable, Description, X_ADB_Hairpinning,                                  AllInterfaces, InternalClient, X_ADB_Host,                                  RemoteHost, InternalPort, X_ADB_ExternalIPAddress,                                  Protocol, ExternalPort, ExternalPortEndRange,                                  X_ADB_AdditionalExternalPort, X_ADB_Service" /><DISPENTRY tr-mapped-to="X_ADB_ForwardingPolicy">
            . /etc/clish/clish-commons.sh
            var_runconf_classIndex ${obj}.X_ADB_ForwardingPolicy get_forwarding_policies false
        </DISPENTRY><DISPENTRY tr-mapped-to="Interface">
          cmclient GETV "%\(${obj}.Interface\).Alias"
        </DISPENTRY><ACTION>
            . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND><VAR name="VAR_RUNCONF_CLASSINDEX_NATPORT" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        var_runconf_classIndex ${obj}.X_ADB_ForwardingPolicy get_forwarding_policies
      </ACTION></VAR><COMMAND name="classificationIndex"><PARAM name="index" ptype="COMPLETE" ptype_args="get_forwarding_policies" tr-var-action="VAR_RUNCONF_CLASSINDEX_NATPORT" /><PARAM name="new_value" test="&quot;${index}&quot;=&quot;new&quot;" ptype="UINT" optional="true" /><ACTION>
          val=${index}
          if [ "${index}" = "new" ]; then
              if [ -z "${new_value}" ]; then
                  echo "Provide a new value as the second parameter"
                  exit
              fi
              val=${new_value}
          else
              if [ -n "${new_value}" ]; then
                  echo "Warning: the second parameter ignored (valid only for \"new\")"
              fi
          fi
          . /etc/clish/quick_cm.sh setm "${obj}.X_ADB_ForwardingPolicy=$val"
      </ACTION></COMMAND><COMMAND name="no classificationIndex" tr-mapped-to="X_ADB_ForwardingPolicy" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="description"><PARAM name="description" ptype="FROM_CM" tr-mapped-to="Description" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="hairpinning"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_Hairpinning" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="allInterfaces"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="AllInterfaces" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="remoteHostSource"><PARAM name="addr" ptype="IPV4_ADDRESS" tr-mapped-to="RemoteHost" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no remoteHostSource" tr-mapped-to="RemoteHost" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="intPort"><PARAM name="local_port" ptype="FROM_CM" tr-mapped-to="InternalPort" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="natRule"><PARAM name="rule" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.NAT.InterfaceSetting.Alias" tr-mapped-to="X_ADB_ExternalIPAddress" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="service"><PARAM name="service" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.NAT.X_ADB_Service.Alias" tr-mapped-to="X_ADB_Service" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no service" tr-mapped-to="X_ADB_Service" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(Interface).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Interface=${ifname}</ACTION></COMMAND><COMMAND name="no interface" tr-mapped-to="Interface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Interface=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="host" no-config-gen="true"><PARAM name="host" ptype="COMPLETE" ptype_args="get_host_list ip" tr-mapped-to="InternalClient" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="host new"><PARAM name="ip" ptype="IPV4_ADDRESS" tr-mapped-to="InternalClient" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="x-adb-extportlist-config-view" depth="dynamic"><COMMAND name="extPortList" aux_availability_condition="${obj}.[Protocol!X_ADB_GRE]" /><VAR name="VAR_EXT_PORT_X_ADB_RUNCONF" dynamic="true"><ACTION>
        . /etc/clish/ip-nat.sh in_traffic_show_external_port "${obj}" true "X_ADB_"
      </ACTION></VAR><COMMAND name="gre" tr-mapped-to="Protocol" tr-val="X_ADB_GRE" aux_availability_condition="${obj}.[Protocol!X_ADB_GRE]"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}	${obj}.ExternalPort=0	${obj}.ExternalPortEndRange=0	${obj}.X_ADB_AdditionalExternalPort=</ACTION></COMMAND><COMMAND name="no gre" no-config-gen="true" aux_availability_condition="${obj}.[Protocol=X_ADB_GRE]"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Protocol=TCP	${obj}.ExternalPort=0	${obj}.ExternalPortEndRange=0	${obj}.X_ADB_AdditionalExternalPort=</ACTION></COMMAND><COMMAND name="extPortList set" tr-obj=".[Protocol!X_ADB_GRE]" aux_availability_condition="${obj}.[Protocol!X_ADB_GRE]"><PARAM name="ports" ptype="PROTOCOL_TYPE_WITHOUT_X_ADB" tr-mapped-to="X_ADB_AdditionalExternalPort" tr-var-action="VAR_EXT_PORT_X_ADB_RUNCONF" /><ACTION>
          . /etc/clish/ip-nat.sh
          in_traffic_set_external_port "${obj}" "$(translate_external_port_parameter_name "${ports}")" "X_ADB_"
      </ACTION></COMMAND><COMMAND name="extPortList add" no-config-gen="true" aux_availability_condition="${obj}.[Protocol!X_ADB_GRE]"><PARAM name="port" ptype="PROTOCOL_TYPE_WITHOUT_X_ADB" tr-mapped-to="X_ADB_AdditionalExternalPort" /><ACTION>
          . /etc/clish/ip-nat.sh
          in_traffic_add_external_port "${obj}" "$(translate_external_port_parameter_name "${port}")" "X_ADB_"
      </ACTION></COMMAND><COMMAND name="extPortList del" no-config-gen="true" aux_availability_condition="${obj}.[Protocol!X_ADB_GRE]"><PARAM name="port" ptype="COMPLETE" ptype_args="extPortList ${obj} X_ADB_" /><ACTION>. /etc/clish/ip-nat.sh in_traffic_del_external_port "${obj}" "${port}" "X_ADB_"</ACTION></COMMAND><COMMAND name="extPortList show" no-config-gen="true" aux_availability_condition="${obj}.[Protocol!X_ADB_GRE]"><ACTION>. /etc/clish/ip-nat.sh in_traffic_show_external_port "${obj}" false "X_ADB_"</ACTION></COMMAND><COMMAND name="extPortList clear" tr-obj=".[Protocol!X_ADB_GRE].[ExternalPort=0]" tr-config-phony="true" aux_availability_condition="${obj}.[Protocol!X_ADB_GRE]"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Protocol=TCP	${obj}.ExternalPort=0	${obj}.ExternalPortEndRange=0	${obj}.X_ADB_AdditionalExternalPort=</ACTION></COMMAND></VIEW><VIEW name="portmapping-service-config-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="extportlist-config-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="description"><PARAM name="description" ptype="FROM_CM" tr-mapped-to="Description" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="extportlist-config-view" depth="dynamic"><COMMAND name="extPortList" aux_availability_condition="${obj}.[Protocol!ICMP]" /><VAR name="VAR_EXT_PORT_RUNCONF" dynamic="true"><ACTION>
        . /etc/clish/ip-nat.sh in_traffic_show_external_port "${obj}" true
      </ACTION></VAR><COMMAND name="icmp" tr-mapped-to="Protocol" tr-val="ICMP" aux_availability_condition="${obj}.[Protocol!ICMP]"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}	${obj}.ExternalPort=0	${obj}.ExternalPortEndRange=0	${obj}.AdditionalExternalPort=</ACTION></COMMAND><COMMAND name="no" aux_availability_condition="${obj}.[Protocol=ICMP]" /><COMMAND name="no icmp" no-config-gen="true" aux_availability_condition="${obj}.[Protocol=ICMP]"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Protocol=TCP	${obj}.ExternalPort=0	${obj}.ExternalPortEndRange=0	${obj}.AdditionalExternalPort=</ACTION></COMMAND><COMMAND name="extPortList set" tr-obj=".[Protocol!ICMP]" aux_availability_condition="${obj}.[Protocol!ICMP]"><PARAM name="ports" ptype="FROM_CM" tr-mapped-to="AdditionalExternalPort" tr-var-action="VAR_EXT_PORT_RUNCONF" /><ACTION>. /etc/clish/ip-nat.sh in_traffic_set_external_port "${obj}" "${ports}"</ACTION></COMMAND><COMMAND name="extPortList add" no-config-gen="true" aux_availability_condition="${obj}.[Protocol!ICMP]"><PARAM name="port" ptype="FROM_CM" tr-mapped-to="AdditionalExternalPort" /><ACTION>. /etc/clish/ip-nat.sh in_traffic_add_external_port "${obj}" "${port}"</ACTION></COMMAND><COMMAND name="extPortList del" no-config-gen="true" aux_availability_condition="${obj}.[Protocol!ICMP]"><PARAM name="port" ptype="COMPLETE" ptype_args="extPortList ${obj}" /><ACTION>. /etc/clish/ip-nat.sh in_traffic_del_external_port "${obj}" "${port}"</ACTION></COMMAND><COMMAND name="extPortList show" no-config-gen="true" aux_availability_condition="${obj}.[Protocol!ICMP]"><ACTION>. /etc/clish/ip-nat.sh in_traffic_show_external_port "${obj}" false</ACTION></COMMAND><COMMAND name="extPortList clear" tr-obj=".[Protocol!ICMP].[ExternalPort=0]" tr-config-phony="true" aux_availability_condition="${obj}.[Protocol!ICMP]"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Protocol=TCP	${obj}.ExternalPort=0	${obj}.ExternalPortEndRange=0	${obj}.AdditionalExternalPort=</ACTION></COMMAND></VIEW><VIEW name="ipv6rd-main-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add tunnel" tr-obj="Device.IPv6rd.InterfaceSetting"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${CMD_ATTR_tr-obj} Alias=${alias}</ACTION></COMMAND><COMMAND name="del tunnel" no-config-gen="true" tr-obj="Device.IPv6rd.InterfaceSetting"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${CMD_ATTR_tr-obj}.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="tunnel" view="ipv6rd-tunnel-view" viewid="obj=${alias};prompt=${prompt}-tunnel" tr-obj="Device.IPv6rd.InterfaceSetting"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /></COMMAND></VIEW><VIEW name="ipv6rd-tunnel-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="borderRelayAddr" /><COMMAND name="borderRelayAddr set"><PARAM name="addr_list" ptype="LIST_IPV4_ADDRESS" tr-mapped-to="BorderRelayIPv4Addresses" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="borderRelayAddr add" no-config-gen="true"><PARAM name="addr" ptype="IPV4_ADDRESS" tr-mapped-to="BorderRelayIPv4Addresses" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="borderRelayAddr del" no-config-gen="true"><PARAM name="addr" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="BorderRelayIPv4Addresses" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="borderRelayAddr clear" tr-mapped-to="BorderRelayIPv4Addresses" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="borderRelayAddr show" no-config-gen="true" tr-mapped-to="BorderRelayIPv4Addresses"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="allTrafficToBorderRelay"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="AllTrafficToBorderRelay" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="spipPrefix"><PARAM name="prefix" ptype="IPV6_ADDRESS_WITH_PREFIX" tr-mapped-to="SPIPv6Prefix" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no" /><COMMAND name="no prefix" tr-mapped-to="SPIPv6Prefix" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="ipv4MaskLength"><PARAM name="mask" ptype="FROM_CM" tr-mapped-to="IPv4MaskLength" tr-ifval-not-in="0" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no ipv4MaskLength" tr-mapped-to="IPv4MaskLength" tr-val="0"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="addressSource"><PARAM name="addr" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.IPv4Address.Alias" tr-mapped-to="%(AddressSource).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.AddressSource=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no addressSource" tr-mapped-to="AddressSource" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="wanInterface"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.[X_ADB_Upstream=true].Alias" tr-mapped-to="%(TunneledInterface).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.TunneledInterface=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="lanInterface"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.[X_ADB_Upstream=false].Alias" tr-mapped-to="%(TunnelInterface).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.TunnelInterface=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="reset" /><COMMAND name="reset stat" tr-obj=".X_ADB_Stats" tr-mapped-to="X_ADB_Reset" tr-val="true" no-config-gen="true"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="show stat" no-config-gen="true" show_all_except="yes"><DISPENTRY tr-mapped-to="X_ADB_Reset" /><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}.X_ADB_Stats" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND></VIEW><VIEW name="ip-main-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="ipv4" tr-obj="Device.IP"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="IPv4Enable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="ipv6" tr-obj="Device.IP"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="IPv6Enable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="neighborDiscovery" tr-obj="Device.NeighborDiscovery"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="Enable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="routerAdverisement" tr-obj="Device.RouterAdvertisement"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="Enable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="ulaPrefix" tr-obj="Device.IP"><PARAM name="prefix" ptype="IPV6_ULA_PREFIX" tr-mapped-to="ULAPrefix" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no" /><COMMAND name="no ulaPrefix" tr-obj="Device.IP" tr-mapped-to="ULAPrefix" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="ulaSubnet" tr-obj="Device.IP"><PARAM name="prefix" ptype="FROM_CM" tr-mapped-to="X_ADB_ULASubnet" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no ulaSubnet" tr-obj="Device.IP" tr-mapped-to="X_ADB_ULASubnet" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="voip-main-view" prompt="${CLISH_PROMPT}(cfg-voip)# " depth="dynamic"><COMMAND name="sipRegistrar" viewid="obj=Device.Services.VoiceService.1.SIP.Registrar.1" tr-obj=".SIP.Registrar.1" view="sipRegistrar-config-view" tr-config-phony="true" /><COMMAND name="sip" viewid="obj=Device.Services.VoiceService.1" view="Sip-config-view" tr-config-phony="true" /><COMMAND name="enable" tr-mapped-to="X_ADB_Enable" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="disable" tr-mapped-to="X_ADB_Enable" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="autoOutboundInterface"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_OutboundInterfaceAutoConfig" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="outboundInterface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(X_ADB_OutboundInterface).Alias" /><ACTION>cmclient -v cap GETV ${obj}.Capabilities.X_ADB_ProfileOutboundInterface
              if [ "false" = "$cap" ]; then
                echo -e "Command will be ineffective due being superseded by settings in \"profile\" submenu"
                fi
                . /etc/clish/quick_cm.sh set ${obj} X_ADB_OutboundInterface ${ifname}
            </ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no outboundInterface" tr-mapped-to="X_ADB_OutboundInterface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="outboundMarkInterface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(X_ADB_OutboundMI).Alias" /><ACTION>cmclient -v cap GETV ${obj}.Capabilities.X_ADB_ProfileOutboundInterface
                if [ "false" = "$cap" ]; then
                echo -e "Command will be ineffective due being superseded by settings in \"profile\" submenu"
                fi
                . /etc/clish/quick_cm.sh set ${obj} X_ADB_OutboundMI ${ifname}
            </ACTION></COMMAND><COMMAND name="no outboundMarkInterface" tr-mapped-to="X_ADB_OutboundMI" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="region"><PARAM name="zone" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.Capabilities.Regions" tr-mapped-to="X_ADB_Region" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="multiLineMode"><PARAM name="mode" ptype="FROM_CM" tr-mapped-to="X_ADB_MultiLineMode" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="add" /><COMMAND name="add profile" tr-obj="Device.Services.VoiceService.1.VoiceProfile" config-gen-prio="0"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="Name" /><ACTION builtin="cmwrap_add_with_key@cmplugin">Device.Services.VoiceService.1.VoiceProfile Name=${name}</ACTION></COMMAND><COMMAND name="del" /><COMMAND name="del profile" tr-obj=".VoiceProfile" no-config-gen="true"><PARAM name="name" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}.VoiceProfile.Name" tr-mapped-to="Name" /><ACTION builtin="cmwrap@cmplugin">DEL ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="reset" /><COMMAND name="reset all" /><COMMAND name="reset all profile" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.VoiceProfile.Reset true</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="X_ADB_OutboundInterface">
            show_deref_list_as_list ${obj}.X_ADB_OutboundInterface Alias
        </DISPENTRY><DISPENTRY tr-mapped-to="X_ADB_OutboundMI">
            show_deref_list_as_list ${obj}.X_ADB_OutboundMI Alias
        </DISPENTRY><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND><COMMAND name="show callLog" show_all_except="yes" escape_chars="&quot;" no-config-gen="true"><ACTION>
            . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}.CallLog" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND><COMMAND name="show callLog-session" show_all_except="yes" escape_chars="&quot;" no-config-gen="true"><PARAM name="callLogAlias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}.CallLog.Alias" /><ACTION>
            . /etc/clish/clish-commons.sh
            local session_objects obj

            cmclient -v session_objects GETO "${callLogAlias}.Session"
            for obj in $session_objects; do
                print_horizontal_line
                echo "Session statistics"
                show_object "$obj" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
                echo "RTP statistics"
                show_object "$obj.Source.RTP." "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
                echo "DSP receive codec"
                show_object "$obj.Source.DSP.ReceiveCodec." "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
                echo "DSP transmit codec"
                show_object "$obj.Source.DSP.TransmitCodec." "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
                echo ""
            done
        </ACTION></COMMAND><COMMAND name="show callLog-performance" show_all_except="yes" escape_chars="&quot;" no-config-gen="true"><PARAM name="callLogAlias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}.CallLog.Alias" /><ACTION>
            . /etc/clish/clish-commons.sh
            local signaling_performance_objects obj

            cmclient -v signaling_performance_objects GETO "${callLogAlias}.SignalingPerformance"
            for obj in $signaling_performance_objects; do
                print_horizontal_line
                echo "Signaling performance"
                show_object "$obj" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
                echo ""
            done
        </ACTION></COMMAND><COMMAND name="show capabilities" /><COMMAND name="show capabilities codecs" no-config-gen="true"><DISPENTRY tr-mapped-to="Codec,BitRate,PacketizationPeriod" /><DISPENTRY tr-mapped-to="SilenceSuppression">
            cmclient -v silence GETV "$obj.SilenceSuppression"
            if [ "$silence" = "true" ]; then
            silence="Enabled"
            else
            silence="Disabled"
            fi

            echo -n "$silence"
        </DISPENTRY><ACTION>
            . /etc/clish/clish-commons.sh &amp;&amp; show_all_child_objects "${obj}.Capabilities.Codecs" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND><COMMAND name="show capabilities general" no-config-gen="true"><ACTION>
            . /etc/clish/clish-commons.sh

            sup_true="Supported"
            sup_false="Not supported"

            cmclient -v NumLineCount_val_ GETV "${obj}.VoiceProfile.*.NumberOfLines"
            cmclient -v MaxLineCount_val GETV "${obj}.Capabilities.MaxLineCount"
            cmclient -v ProfileCount_val GETV "${obj}.VoiceProfileNumberOfEntries"
            cmclient -v MaxProfileCount_val GETV "${obj}.Capabilities.MaxProfileCount"
            cmclient -v MaxSessionCount_val GETV "${obj}.Capabilities.MaxSessionCount"
            cmclient -v MaxSessionsPerLine_val GETV "${obj}.Capabilities.MaxSessionsPerLine"
            cmclient -v X_ADB_NumIUAs_val GETV "${obj}.X_ADB_NumberOfIUAs"
            cmclient -v X_ADB_MaxIUAs_val GETV "${obj}.Capabilities.X_ADB_MaxIUAs"

            cmclient -v SignalingProtocols_val GETV "${obj}.Capabilities.SignalingProtocols"
            cmclient -v RTPRedundancy_val GETV "${obj}.Capabilities.RTPRedundancy"
            cmclient -v RTCP_val GETV "${obj}.Capabilities.RTCP"
            cmclient -v SRTP_val GETV "${obj}.Capabilities.SRTP"
            cmclient -v X_ADB_Proxy_val GETV "${obj}.Capabilities.X_ADB_Proxy"

            cmclient -v EthernetTaggingCoupled_val GETV "${obj}.Capabilities.EthernetTaggingCoupled"
            cmclient -v DSCPCoupled_val GETV "${obj}.Capabilities.DSCPCoupled"
            cmclient -v X_ADB_ProfileOutboundInterface_val GETV "${obj}.Capabilities.X_ADB_ProfileOutboundInterface"
            cmclient -v X_ADB_OutboundMI_val GETV "${obj}.Capabilities.X_ADB_OutboundMI"

            cmclient -v NumberingPlan_val GETV "${obj}.Capabilities.NumberingPlan"
            cmclient -v X_ADB_NumberingPlan_val GETV "${obj}.Capabilities.X_ADB_NumberingPlan"
            cmclient -v DigitMap_val GETV "${obj}.Capabilities.DigitMap"
            cmclient -v ButtonMap_val GETV "${obj}.Capabilities.ButtonMap"
            cmclient -v RingGeneration_val GETV "${obj}.Capabilities.RingGeneration"
            cmclient -v ToneGeneration_val GETV "${obj}.Capabilities.ToneGeneration"

            cmclient -v FaxT38_val GETV "${obj}.Capabilities.FaxT38"
            cmclient -v FaxPassThrough_val GETV "${obj}.Capabilities.FaxPassThrough"
            cmclient -v ModemPassThrough_val GETV "${obj}.Capabilities.ModemPassThrough"
            cmclient -v PSTNSoftSwitchOver_val GETV "${obj}.Capabilities.PSTNSoftSwitchOver"
            cmclient -v VoicePortTests_val GETV "${obj}.Capabilities.VoicePortTests"

            NumLineCount_val=0
            for num in $NumLineCount_val_; do
            NumLineCount_val=$((NumLineCount_val+$num))
            done

            eval RTPRedundancy_val=\$"sup_$RTPRedundancy_val"
            eval RTCP_val=\$"sup_$RTCP_val"
            eval SRTP_val=\$"sup_$SRTP_val"

            eval X_ADB_Proxy_val=\$"sup_$X_ADB_Proxy_val"

            eval EthernetTaggingCoupled_val=\$"sup_$EthernetTaggingCoupled_val"
            eval DSCPCoupled_val=\$"sup_$DSCPCoupled_val"

            eval DigitMap_val=\$"sup_$DigitMap_val"
            eval ButtonMap_val=\$"sup_$ButtonMap_val"
            eval RingGeneration_val=\$"sup_$RingGeneration_val"
            eval ToneGeneration_val=\$"sup_$ToneGeneration_val"

            eval FaxT38_val=\$"sup_$FaxT38_val"
            eval FaxPassThrough_val=\$"sup_$FaxPassThrough_val"
            eval ModemPassThrough_val=\$"sup_$ModemPassThrough_val"
            eval PSTNSoftSwitchOver_val=\$"sup_$PSTNSoftSwitchOver_val"
            eval VoicePortTests_val=\$"sup_$VoicePortTests_val"

            ### XXX, logic is like this? it seems that even when Capabilities.NumberingPlan is set to false, I can still see Numbering Plan menu in Web GUI
            if [ "$NumberingPlan_val" = "true" ]; then
            if [ "$X_ADB_NumberingPlan_val" = "true" ]; then
            NumberingPlan_val="Service Shared"
            else
            NumberingPlan_val="Per Profile"
            fi
            else
            NumberingPlan_val="Not supported"
            fi

            if [ "$X_ADB_ProfileOutboundInterface_val" = "true" ]; then
            X_ADB_ProfileOutboundInterface_val="Per Profile"
            else
            X_ADB_ProfileOutboundInterface_val="Service Shared"
            fi

            if [ "$X_ADB_OutboundMI_val" = "true" ]; then
            X_ADB_OutboundMI_val="Any"
            else
            X_ADB_OutboundMI_val="Same As Outbound Interface"
            fi

            print_horizontal_line
            show_split_text "Line Count" "in use $NumLineCount_val / max $MaxLineCount_val"
            show_split_text "Profile Count" "in use $ProfileCount_val / max $MaxProfileCount_val"
            show_split_text "Session Count" "max $MaxSessionCount_val"
            show_split_text "Sessions Per Line" "max $MaxSessionsPerLine_val"
            show_split_text "Number of IUA" "in use $X_ADB_NumIUAs_val / max $X_ADB_MaxIUAs_val" ## Number of Internal User Agents

            show_from_cm "${obj}.Capabilities" "Regions"
            show_split_text "Signaling Protocols" "$SignalingProtocols_val"
            show_split_text "RTP payload redundancy" "$RTPRedundancy_val"
            show_split_text "RTCP" "$RTCP_val"
            show_split_text "SRTP" "$SRTP_val"
            show_split_text "Proxy SIP requests" "$X_ADB_Proxy_val"

            show_split_text "Ethernet Tagging Coupled" "$EthernetTaggingCoupled_val"
            show_split_text "DSCP Coupled" "$DSCPCoupled_val"
            show_split_text "Outbound interface" "$X_ADB_ProfileOutboundInterface_val" ## Outbound interface for signalling
            show_split_text "Routing Out interface" "$X_ADB_OutboundMI_val" ## Routing Outbound interface

            show_split_text "Numbering plan" "$NumberingPlan_val"
            show_split_text "Configurable Digit Map" "$DigitMap_val"
            show_split_text "Configurable Button Map" "$ButtonMap_val"
            show_split_text "Ring generation" "$RingGeneration_val"
            show_split_text "Tone generation" "$ToneGeneration_val"

            show_split_text "Fax T.38" "$FaxT38_val"
            show_split_text "Fax pass-through" "$FaxPassThrough_val"
            show_split_text "Modem pass-through" "$ModemPassThrough_val"
            show_split_text "PSTN Soft Switch Over" "$PSTNSoftSwitchOver_val"
            show_split_text "Voice Port Tests" "$VoicePortTests_val"
            print_horizontal_line
        </ACTION></COMMAND><COMMAND name="show capabilities sip" no-config-gen="true"><DISPENTRY tr-mapped-to="Role,Extensions,Transports,URISchemes,EventSubscription,ResponseMap" /><ACTION>
            . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}.Capabilities.SIP" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND><COMMAND name="show phy-interfaces" no-config-gen="true"><ACTION>
            . /etc/clish/clish-commons.sh

            cmclient -v phys GETO "${obj}.PhyInterface"
            for phy in $phys; do
            cmclient -v phy_name GETV "$phy.Description"
            cmclient -v phy_id GETV "$phy.InterfaceID"

            cmclient -v lines GETO "${obj}.VoiceProfile.*.Line.[PhyReferenceList>$phy_id]"

            ## TODO, ISDN: ISDN.BRI.PhyInterface.*.[X_ADB_PhyReference=$phy_id]?, cannot test.

            print_horizontal_line
            show_split_text "Name" "$phy_name"

            if [ -n "$lines" ]; then
            for line in $lines; do
            cmclient -v line_num GETV "$line.DirectoryNumber"
            cmclient -v line_status GETV "$line.Status"
            cmclient -v call_status GETV "$line.CallState"

            show_split_text "Line Number" "$line_num"
            show_split_text "Line Status" "$line_status"
            show_split_text "Call Status" "$call_status"
            done
            else
            show_split_text "Line Number" "Voice Line not Configured"
            fi
            print_horizontal_line
            done
        </ACTION></COMMAND><COMMAND name="show profiles" no-config-gen="true"><DISPENTRY tr-mapped-to="Name,SignalingProtocol" /><DISPENTRY tr-mapped-to="AssociatedLineNumbers">
            cmclient -v lines GETO "$obj.Line"

            if [ -n "$lines" ]; then
            sep=""
            for line in $lines; do
            cmclient -v number GETV "$line.DirectoryNumber"

            echo -n "$sep$number"
            sep=" "
            done
            else
            echo -n "No line uses this profile"
            fi
        </DISPENTRY><DISPENTRY tr-mapped-to="Enable" /><ACTION>
            . /etc/clish/clish-commons.sh &amp;&amp; show_all_child_objects "${obj}.VoiceProfile" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND><COMMAND name="numberingPlan" aux_availability_condition="${obj}.Capabilities.[X_ADB_NumberingPlan!false]" viewid="obj=${obj}.X_ADB_NumberingPlan;parent=${obj};prompt=cfg-voip-" view="voip-numberingPlan" tr-obj=".X_ADB_NumberingPlan" tr-config-phony="true" /><VAR name="VAR_GET_INTERFACEID" dynamic="true"><ACTION builtin="cmwrap@cmplugin">GETV ${obj}.InterfaceID</ACTION></VAR><COMMAND name="interface" view="voip-interface-view" viewid="obj=${id};prompt=${prompt}" tr-obj=".PhyInterface" tr-config-phony="true"><PARAM name="id" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}.PhyInterface.InterfaceID" tr-mapped-to="InterfaceID" /></COMMAND><COMMAND name="profile" view="voip-profile-view" viewid="parent=${obj};obj=${name};prompt=${prompt}" tr-obj=".VoiceProfile" tr-config-phony="true"><PARAM name="name" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.Name" tr-mapped-to="Name" /></COMMAND><COMMAND name="dect" aux_availability_condition="${obj}${CMD_ATTR_tr-obj}" tr-config-phony="true" tr-obj=".DECT.Base" viewid="parent=${obj};obj=${obj}${CMD_ATTR_tr-obj}.1" view="voip-dect-view" /></VIEW><VIEW name="sipRegistrar-config-view" depth="dynamic" prompt="${CLISH_PROMPT}(cfg-voip-sipRegistrar)# "><COMMAND name="enable" tr-mapped-to="Enable" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="disable" tr-mapped-to="Enable" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="quiescentMode"><PARAM name="enable" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="QuiescentMode" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="address" aux_availability_condition="${obj}.[Origin=Static]"><PARAM name="addr" ptype="FROM_CM" tr-mapped-to="RegistrarIPAddress" /><PARAM name="port" ptype="FROM_CM" optional="true" default="" tr-mapped-to="RegistrarPort" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="expireTime"><PARAM name="time" ptype="UINT" tr-mapped-to="RegisterExpires" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="pingInterval"><PARAM name="time" ptype="TYPE_U16" tr-mapped-to="PingInterval" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="authenticationRealm"><PARAM name="value" ptype="STRING" tr-mapped-to="Realm" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="add" /><COMMAND name="add account" tr-obj=".Account" config-gen-prio="0"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><WARN condition="${obj}${CMD_ATTR_tr-obj}.[Alias=${alias}]">Warning: please remember to specify URI value for "${alias}" account</WARN><ACTION builtin="cmwrap_add_with_key@cmplugin">${obj}${CMD_ATTR_tr-obj} Alias=${alias}</ACTION></COMMAND><COMMAND name="add interface" tr-obj=".X_ADB_Interface" config-gen-prio="0"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${obj}${CMD_ATTR_tr-obj} Alias=${alias}</ACTION></COMMAND><COMMAND name="del" /><COMMAND name="del account" tr-obj=".Account" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="del interface" tr-obj=".X_ADB_Interface" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /><ACTION>
            interfaces=""
            cmclient -v interfaces GET Device.Services.VoiceService.1.SIP.Registrar.1.X_ADB_Interface.Alias

            # calculate number of elements
            totalWords=$(c() { echo $#; }; c $interfaces)

            if [ $totalWords -gt 1 ]; then
                cmclient DEL ${__eval PAR_ATTR_1_name}
            else
                echo "Interface not deleted, at least one required by system"
            fi
            </ACTION></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><ACTION>
                . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
                show_all_child_objects "${obj}.X_ADB_Interface" "Enable,ProxyInterface::show_deref_list ${obj}.X_ADB_Interface.ProxyInterface Alias::,Alias" "no"
                show_all_child_objects "${obj}.Account" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
                show_all_child_objects "${obj}.Account.Contact" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
            </ACTION></COMMAND><VAR name="VAR_GET_ACCOUNT_ALIAS" dynamic="true"><ACTION builtin="cmwrap@cmplugin">GETV ${obj}.Alias</ACTION></VAR><COMMAND name="account" tr-obj=".Account" viewid="parent=${obj};obj=${__eval PAR_ATTR_1_name}" view="sipRegistrar-account-view"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Alias" /></COMMAND><COMMAND name="interface" tr-obj=".X_ADB_Interface" viewid="parent=${obj};obj=${__eval PAR_ATTR_1_name}" view="sipRegistrar-interface-view"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Alias" /></COMMAND></VIEW><VIEW name="sipRegistrar-account-view" prompt="${CLISH_PROMPT}(cfg-voip-sipRegistrar-account:${VAR_GET_ACCOUNT_ALIAS})# " depth="dynamic"><COMMAND name="enable" tr-mapped-to="Enable" tr-val="Enable"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="disable" tr-mapped-to="Enable" tr-val="Disable"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="alias"><PARAM name="alias" ptype="FROM_CM" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="quiescentMode"><PARAM name="enable" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="QuiescentMode" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="uri"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="URI" /><ACTION>
                cmclient -v isSet GETO Device.Services.VoiceService.1.SIP.Registrar.*.[Account.*.URI=${__eval PAR_ATTR_1_name}]
                [ -n "${isSet}" ] &amp;&amp; echo "Error: given URI is already used by another account" \
                                  || cmclient SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}
            </ACTION></COMMAND><COMMAND name="domain"><PARAM name="domain" ptype="FROM_CM" tr-mapped-to="Domain" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="username"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="AuthUserName" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no username" tr-mapped-to="AuthUserName" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no password" tr-mapped-to="AuthPassword" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="password" no-config-gen="true"><PARAM name="pass" ptype="FROM_CM" tr-mapped-to="AuthPassword" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="timerT1"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="TimerT1" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="timerT2"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="TimerT2" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="timerB"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="TimerB" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="timerF"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="TimerF" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" no-config-gen="true" escape_chars="&quot;"><ACTION>
                . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
            </ACTION></COMMAND></VIEW><VIEW name="sipRegistrar-interface-view" prompt="${CLISH_PROMPT}(cfg-voip-sipRegistrar-interface:${VAR_GET_ALIAS})# " depth="dynamic"><COMMAND name="enable" tr-mapped-to="Enable" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="disable" tr-mapped-to="Enable" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="alias"><PARAM name="alias" ptype="FROM_CM" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(ProxyInterface).Alias" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.ProxyInterface ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="no" no-config-gen="true" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Enable,Alias" /><DISPENTRY tr-mapped-to="ProxyInterface">
                show_deref_list ${obj}.ProxyInterface Alias
            </DISPENTRY><ACTION>
                . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
            </ACTION></COMMAND></VIEW><VIEW name="Sip-config-view" depth="dynamic" prompt="${CLISH_PROMPT}(cfg-voip-sip)# "><COMMAND name="localPort" tr-obj=".X_ADB_SIP"><PARAM name="portNumber" ptype="FROM_CM" tr-mapped-to="LocalPort" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="prack" tr-obj=".X_ADB_SIP"><PARAM name="use" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="UsePRACK" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="prackLevel" tr-obj=".X_ADB_SIP"><PARAM name="level" ptype="FROM_CM" tr-mapped-to="PRACK" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="sessionTimers" tr-obj=".X_ADB_SIP"><PARAM name="enable" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="SessionTimersEnable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="503FailureMode" tr-obj=".X_ADB_SIP"><PARAM name="mode" ptype="FROM_CM" tr-mapped-to="Failure503Mode" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="userAgentId" tr-obj=".X_ADB_SIP"><PARAM name="id" ptype="FROM_CM" tr-mapped-to="UserAgentID" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="jitterBuffer" /><COMMAND name="jitterBuffer type" tr-obj=".X_ADB_SIP"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="JitterBufferType" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="jitterBuffer initialSize" tr-obj=".X_ADB_SIP"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="JitterBufferInitialSize" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="jitterBuffer minSize" tr-obj=".X_ADB_SIP"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="JitterBufferMinSize" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="jitterBuffer maxSize" tr-obj=".X_ADB_SIP"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="JitterBufferMaxSize" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="jitterBuffer dataModeSize" tr-obj=".X_ADB_SIP"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="JitterBufferData" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="noCallOnOthersFXS" tr-obj=".X_ADB_SIP"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="NoCallOnOthersFXSEnable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="dialer" viewid="obj=${obj}" tr-config-phony="true" view="Dialer-sip-config-view" /><COMMAND name="add" /><COMMAND name="add extensionRoute" tr-obj=".X_ADB_CallControl.IUAMap"><PARAM name="alias" optional="true" ptype="FROM_CM" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${obj}${CMD_ATTR_tr-obj} Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="del" /><COMMAND name="del extensionRoute" aux_availability_condition="${obj}${CMD_ATTR_tr-obj}" no-config-gen="true" tr-obj=".X_ADB_CallControl.IUAMap"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="extensionRoute" aux_availability_condition="${obj}${CMD_ATTR_tr-obj}" tr-obj=".X_ADB_CallControl.IUAMap" viewid="parent=${obj};obj=${__eval PAR_ATTR_1_name}" view="Extension-sip-config-view"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Alias" /></COMMAND><COMMAND name="show" tr-obj=".X_ADB_SIP" escape_chars="&quot;"><ACTION>. /etc/clish/clish-commons.sh &amp;&amp; show_object ${obj}${CMD_ATTR_tr-obj} all yes</ACTION></COMMAND></VIEW><VIEW name="Dialer-sip-config-view" depth="dynamic" prompt="${CLISH_PROMPT}(cfg-voip-sip-dialer)# "><COMMAND name="enable" tr-val="true" tr-obj=".X_ADB_SIP.Dialer" tr-mapped-to="Enable"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="disable" tr-val="false" tr-obj=".X_ADB_SIP.Dialer" tr-mapped-to="Enable"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="calledPartyNumber" tr-obj=".X_ADB_SIP.Dialer"><PARAM name="number" ptype="FROM_CM" tr-mapped-to="CalledPartyNumber" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no" /><COMMAND name="no calledPartyNumber" tr-val="" tr-obj=".X_ADB_SIP.Dialer" tr-mapped-to="CalledPartyNumber"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="port" tr-config-phony="true" tr-obj=".X_ADB_SIP.Dialer"><PARAM name="id" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}.PhyInterface.InterfaceID" tr-mapped-to="%(FromVoicePort).InterfaceID" /><ACTION>
                . /etc/clish/quick_cm.sh setm "${obj}${CMD_ATTR_tr-obj}.FromVoicePort=${id}"
            </ACTION></COMMAND><COMMAND name="show" no-config-gen="true" tr-obj=".X_ADB_SIP.Dialer" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Enable,CalledPartyNumber" /><DISPENTRY tr-mapped-to="FromVoicePort">
                echo `. /etc/clish/clish-commons.sh  &amp;&amp; show_deref_list "${obj}${CMD_ATTR_tr-obj}.FromVoicePort" InterfaceID`
            </DISPENTRY><ACTION>
                . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}${CMD_ATTR_tr-obj}" "${DISP_ENTRIES}"
            </ACTION></COMMAND></VIEW><VIEW name="Extension-sip-config-view" depth="dynamic" prompt="${CLISH_PROMPT}(cfg-voip-sip-extensionRoute:${VAR_GET_ALIAS})# "><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><COMMAND name="extension"><PARAM name="ex" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${parent}.SIP.Registrar.Account" tr-mapped-to="%(Extension).Alias" /><ACTION>
                . /etc/clish/quick_cm.sh setm "${obj}.Extension=${__eval PAR_ATTR_1_name}"
            </ACTION></COMMAND><COMMAND name="line"><PARAM name="line" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${parent}.VoiceProfile.Line.Alias" tr-mapped-to="%(Line).Alias" /><ACTION>
                . /etc/clish/quick_cm.sh setm "${obj}.Line=${__eval PAR_ATTR_1_name}"
            </ACTION></COMMAND><COMMAND name="show" no-config-gen="true" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Alias,Enable" /><DISPENTRY tr-mapped-to="Extension">
                echo `. /etc/clish/clish-commons.sh  &amp;&amp; show_deref_list "${obj}.Extension" X_ADB_IUA.Alias`
            </DISPENTRY><DISPENTRY tr-mapped-to="Line">
                echo `. /etc/clish/clish-commons.sh  &amp;&amp; show_deref_list "${obj}.Line" Alias`
            </DISPENTRY><ACTION>
                . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}"
            </ACTION></COMMAND></VIEW><VIEW name="voip-numberingPlan" prompt="${CLISH_PROMPT}(${prompt}numberPlan)# " depth="dynamic"><COMMAND name="minDigitNumber"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="MinimumNumberOfDigits" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="maxDigitNumber"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="MaximumNumberOfDigits" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="interDigitTimerStd"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="InterDigitTimerStd" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="interDigitTimerOpen"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="InterDigitTimerOpen" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="startDigitTime"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="X_ADB_StartDigitTime" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="fastDialKey"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="X_ADB_FastDialKey" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="fastDialKeyFilters"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="X_ADB_FilterFastDialKey" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="offHookWarnTimeout"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="X_ADB_OffHookWarnTimeout" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add prefixInfo" tr-obj=".PrefixInfo" tr-config-phony="true"><PARAM name="alias" optional="true" ptype="FROM_CM" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${obj}.PrefixInfo Alias=${alias}</ACTION></COMMAND><COMMAND name="del prefixInfo" tr-obj=".PrefixInfo" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.[].Alias" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="prefixInfo" view="voip-numberingPlan-prefixInfo" viewid="parent=${obj};obj=${alias};prompt=${prompt}numberPlan-" tr-obj=".PrefixInfo"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.[].Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="show" escape_chars="&quot;"><DISPENTRY tr-mapped-to="MinimumNumberOfDigits,MaximumNumberOfDigits,InterDigitTimerStd,InterDigitTimerOpen,X_ADB_StartDigitTime,X_ADB_OffHookWarnTimeout" /><ACTION>
            obj="${obj}"
            [ "${__cmd}" = "show numbering-plan" ] &amp;&amp; obj="$obj.NumberingPlan"

            . /etc/clish/clish-commons.sh &amp;&amp; show_object "$obj" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"

            cmclient -v prefixes GETO "$obj.PrefixInfo."
            if [ -n "$prefixes" ]; then
                show_split_text "Prefix" "Prefix Range"
                print_horizontal_line
                for o_prefix in $prefixes; do
                    cmclient -v n_prefix GETV "$o_prefix.Alias"
                    cmclient -v n_prefix_range GETV "$o_prefix.PrefixRange"
                    show_split_text "$n_prefix" "$n_prefix_range"

                    ## . /etc/clish/clish-commons.sh &amp;&amp; show_object "$o_prefix" "PrefixRange,PrefixMinNumberOfDigits,PrefixMaxNumberOfDigits,PosOfDigitsToRemove,FacilityAction,FacilityActionArgument" ""
                done
            fi
          </ACTION></COMMAND></VIEW><VIEW name="voip-numberingPlan-prefixInfo" prompt="${CLISH_PROMPT}(${prompt}prefix:${VAR_GET_ALIAS})# " depth="dynamic"><VAR name="GET_DIRECTORY_NUMBER" dynamic="true"><ACTION>
        cmclient -v value GETV "${obj}.FacilityActionArgument"

        ## FacilityActionArgument is '0' when the argument is unset
        if [ "x$value" = "x0" ]; then
            echo -n "Unset"
        else
            cmclient -v value GETV "$value.DirectoryNumber"
            echo -n "$value"
        fi
        </ACTION></VAR><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><COMMAND name="range"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="PrefixRange" /><ACTION>
            temp_value=${value}
            case "$temp_value" in
                *"-"*)
                    set -f
                    IFS="-"
                    set -- $temp_value
                    unset IFS
                    set +f
                    eval 'temp_value=$''{1%?}'
                    eval 'temp_value=$''{1#"$temp_value"}'
                    #Now in temp_value is the last char from string before "-"
                    if [ "$temp_value" != "*" -a "$temp_value" != "#" -a "$2" != "*" -a "$2" != "#" ]; then
                        if [ "$temp_value" -lt "$2" ]; then
                            cmclient SET ${obj}.PrefixRange ${value}
                        else
                            echo "Error: \"To\" digit MUST always be numerically greater than the last digit of the \"From\" part"
                        fi
                    else
                        cmclient SET ${obj}.PrefixRange ${value}
                    fi

                    ;;
                *)
                    cmclient SET ${obj}.PrefixRange ${value}
                    ;;
            esac
      </ACTION></COMMAND><COMMAND name="minNumberOfDigit"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="PrefixMinNumberOfDigits" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="maxNumberOfDigit"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="PrefixMaxNumberOfDigits" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="digitsToRemove"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="NumberOfDigitsToRemove" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="digitsToRemoveFrom"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="PosOfDigitsToRemove" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="facilityAction"><PARAM name="value" ptype="VOIP_FACILITY_ACTION_TYPE" tr-mapped-to="FacilityAction" /><PARAM name="arg" optional="true" ptype="COMPLETE" ptype_args="FacilityActionArgument_complete" tr-var-action="GET_DIRECTORY_NUMBER" tr-mapped-to="FacilityActionArgument" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="show" escape_chars="&quot;"><DISPENTRY tr-mapped-to="PrefixRange,PrefixMinNumberOfDigits,PrefixMaxNumberOfDigits,NumberOfDigitsToRemove,PosOfDigitsToRemove" /><DISPENTRY tr-mapped-to="FacilityAction">
            cmclient -v value GETV "${obj}.FacilityAction"

            case "$value" in
                "")                        echo "Unset" ;;
                X_ADB_USE_LINE)            echo "Use Line" ;;
                X_ADB_EMERGENCY_NUMBER)    echo "Emergency Number" ;;
                CFNR_ACTIVATE)             echo "Call Forwarding on No Reply Activate" ;;
                CFNR_DEACTIVATE)           echo "Call Forwarding on No Reply Deactivate" ;;
                CFNR_ERASE)                echo "Call Forwarding on No Reply Erase" ;;
                CFNR_REGISTER)             echo "Call Forwarding on No Reply Register" ;;
                CFB_ACTIVATE)              echo "Call Forwarding on Busy Activate" ;;
                CFB_DEACTIVATE)            echo "Call Forwarding on Busy Deactivate" ;;
                CFB_ERASE)                 echo "Call Forwarding on Busy Destination Erase" ;;
                CFB_REGISTER)              echo "Call Forwarding on Busy Destination Register" ;;
                CFU_ACTIVATE)              echo "Call Forwarding Unconditional Activate" ;;
                CFU_DEACTIVATE)            echo "Call Forwarding Unconditional Deactivate" ;;
                CFU_ERASE)                 echo "Call Forwarding Unconditional Erase" ;;
                CFU_REGISTER)              echo "Call Forwarding Unconditional Register" ;;
                X_ADB_DND_ACTIVATE)        echo "Do Not Disturb Activate" ;;
                X_ADB_DND_DEACTIVATE)      echo "Do Not Disturb Deactivate" ;;
                CLIR_ACTIVATE)             echo "Calling Line Identification Restriction Activate" ;;
                CLIR_DEACTIVATE)           echo "Calling Line Identification Restriction Deactivate" ;;
                CW_ACTIVATE)               echo "Call Waiting Activate" ;;
                CW_DEACTIVATE)             echo "Call Waiting Deactivate" ;;
                X_ADB_CONFCALL_ACTIVATE)   echo "Conference Call Activate" ;;
                X_ADB_CONFCALL_DEACTIVATE) echo "Conference Call Deactivate" ;;
                X_ADB_DIAL_MAX)            echo "Require MaxDigits Length Number" ;;
                *)                         echo "$value" ;;
            esac
       </DISPENTRY><DISPENTRY tr-mapped-to="FacilityActionArgument">
           echo -n "${GET_DIRECTORY_NUMBER}"
       </DISPENTRY><ACTION>
            . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
          </ACTION></COMMAND></VIEW><VIEW name="voip-interface-view" prompt="${CLISH_PROMPT}(cfg-voip-interface:${VAR_GET_INTERFACEID})# " depth="dynamic"><COMMAND name="enable" tr-mapped-to="X_ADB_PhyEnable" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="disable" tr-mapped-to="X_ADB_PhyEnable" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="gain"><PARAM name="enable" tr-mapped-to="X_ADB_GainEnable" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="txGain"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="X_ADB_TransmitGain" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="rxGain"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="X_ADB_ReceiveGain" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="pstnIncomingCall"><PARAM name="enable" tr-mapped-to="X_ADB_SwitchToPSTNIn" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="pstnOutgoingCall"><PARAM name="enable" tr-mapped-to="X_ADB_SwitchToPSTNOut" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="monitor" tr-obj=".Tests.X_ADB_Monitor"><PARAM name="enable" tr-mapped-to="Enable" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Tests.X_ADB_Monitor.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="X_ADB_Vloop_DC" /><DISPENTRY tr-mapped-to="X_ADB_Vloop_AC" /><DISPENTRY tr-mapped-to="X_ADB_Rloop" /><DISPENTRY tr-mapped-to="X_ADB_OffHook" /><DISPENTRY tr-mapped-to="X_ADB_REN" /><DISPENTRY tr-mapped-to="X_ADB_PSTN" /><DISPENTRY tr-mapped-to="PhoneConnectivity" /><DISPENTRY tr-mapped-to="ForeignVoltage" /><ACTION>
          . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
          show_object "${obj}.Tests" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
          print_horizontal_line
          cmclient -v val GETV "${obj}.Tests.X_ADB_Monitor.Enable"
          show_split_text "Monitor Enable" "$val"
          print_horizontal_line
        </ACTION></COMMAND><COMMAND name="test" tr-obj=".Tests" no-config-gen="true"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="TestSelector" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Tests.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.Tests.TestState=Requested</ACTION></COMMAND></VIEW><VIEW name="voip-profile-view" prompt="${CLISH_PROMPT}(cfg-voip-profile:${VAR_GET_NAME})# " depth="dynamic"><COMMAND name="rtp" view="voip-profile-rtp-view" viewid="obj=${obj}.RTP;prompt=cfg-voip-profile:${VAR_GET_NAME}-" tr-obj=".RTP" tr-config-phony="true">
    </COMMAND><COMMAND name="line" view="voip-profile-line-view" viewid="obj=${alias};prompt=cfg-voip-profile:${VAR_GET_NAME}-" tr-obj=".Line"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}.Line.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="sip" view="voip-profile-sip-view" viewid="service=${parent};;obj=${obj}.SIP;prompt=cfg-voip-profile:${VAR_GET_NAME}-" tr-obj=".SIP" tr-config-phony="true">
    </COMMAND><COMMAND name="faxT38" view="voip-profile-fax-view" viewid="obj=${obj}.FaxT38;prompt=cfg-voip-profile:${VAR_GET_NAME}-" tr-obj=".FaxT38" tr-config-phony="true">
    </COMMAND><COMMAND name="add" /><COMMAND name="no" /><COMMAND name="name"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="Name" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="enable" tr-mapped-to="Enable" tr-val="Enabled"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="disable" tr-mapped-to="Enable" tr-val="Disabled"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="quiescent" tr-mapped-to="Enable" tr-val="Quiescent"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="reset" tr-mapped-to="Reset" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="signalingProtocol"><PARAM name="proto" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${parent}.Capabilities.SignalingProtocols" tr-mapped-to="SignalingProtocol" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="dtmfMethod"><PARAM name="method" ptype="FROM_CM" tr-mapped-to="DTMFMethod" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="dtmfMethodG711"><PARAM name="method" ptype="FROM_CM" tr-mapped-to="DTMFMethodG711" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no dtmfMethodG711" tr-mapped-to="DTMFMethodG711" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="dtmfInbandFallback"><PARAM name="disable_enable" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_RFC2833FallbackEnable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="digitMap" /><COMMAND name="digitMap set"><PARAM name="val" ptype="FROM_CM" tr-mapped-to="DigitMap" /><ACTION>
        cmclient -v cap GETV "${parent}.Capabilities.DigitMap"
        if [ "x$cap" = "xfalse" ]; then
            ## echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
            echo "WARNING: command ineffective"
            ## echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
        fi
        cmclient SET ${obj}.DigitMap ${val} > /dev/null 2>&amp;1
      </ACTION></COMMAND><COMMAND name="digitMap enable" tr-mapped-to="DigitMapEnable" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="digitMap disable" tr-mapped-to="DigitMapEnable" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no digit-map" tr-mapped-to="DigitMap" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="faxPassThrough" /><COMMAND name="faxPassThrough mode"><PARAM name="mode" ptype="FROM_CM" tr-mapped-to="FaxPassThrough" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="faxPassThrough codec"><PARAM name="codec" ptype="FAX_PASSTHROUGH_CODEC" tr-mapped-to="X_ADB_FaxPassThroughCodec" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="modemPassThrough"><PARAM name="mode" ptype="FROM_CM" tr-mapped-to="ModemPassThrough" /><ACTION builtin="cmset@cmplugin" /></COMMAND><NAMESPACE ref="generic-obj-permissions-view" help="true" completion="true" /><COMMAND name="serviceProviderInfo" view="voip-profile-service-info-view" viewid="parent=${obj};obj=${obj}.ServiceProviderInfo;prompt=cfg-voip-profile:${VAR_GET_NAME}-" tr-obj=".ServiceProviderInfo" tr-config-phony="true" /><COMMAND name="numberingPlan" aux_availability_condition="${parent}.Capabilities.[X_ADB_NumberingPlan=false]" viewid="obj=${obj}.NumberingPlan;parent=${obj};prompt=cfg-voip-profile:${VAR_GET_NAME}-" view="voip-numberingPlan" tr-obj=".NumberingPlan" tr-config-phony="true" /><COMMAND name="add line" tr-obj=".Line" config-gen-prio="0" tr-config-phony="true"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION>
          cmclient -v NumLineCount_val_ GETV "${parent}.VoiceProfile.*.NumberOfLines"
          cmclient -v MaxLineCount_val GETV "${parent}.Capabilities.MaxLineCount"

          NumLineCount_val=0
          for num in $NumLineCount_val_; do
              NumLineCount_val=$((NumLineCount_val+$num))
          done

          if [ -n "$MaxLineCount_val" ] &amp;&amp; [ $NumLineCount_val -ge $MaxLineCount_val ]; then
              echo "Maximum number of lines ($MaxLineCount_val) already configured"
          else
              if [ -n "${alias}" ]; then
                  cmclient -v tmp GETO "${obj}.Line.[Alias=${alias}]"
                  if [ -n "$tmp" ]; then
                      echo "\"${alias}\" already exists"
                  else
                      cmclient -v line_index ADD ${obj}.Line.[Alias=${alias}]
                      echo "Successfully added \"${alias}\""
                  fi
              else
                  cmclient -v line_index ADD ${obj}.Line
                  cmclient -v tmp GETV "${obj}.Line.$line_index.Alias"
                  echo "Successfully added \"$tmp\""
              fi

              cmclient -v exclude GETEXCLUDE
              if [ "$exclude" = "1" ]; then
                  export obj=${obj}.Line.$line_index
                  export op=a;
                  /etc/ah/VoIPLine.sh > /dev/null
              fi
          fi
        </ACTION></COMMAND><COMMAND name="del" /><COMMAND name="del line" tr-obj=".Line" no-config-gen="true"><PARAM name="name" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}.Line.Alias" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" no-config-gen="true" escape_chars="&quot;"><DISPENTRY tr-mapped-to="X_ADB_OutboundInterface" /><DISPENTRY tr-mapped-to="MaxSessions" /><DISPENTRY tr-mapped-to="NonVoiceBandwidthReservedDownstream" /><DISPENTRY tr-mapped-to="NonVoiceBandwidthReservedUpstream" /><DISPENTRY tr-mapped-to="NumberOfLines" /><DISPENTRY tr-mapped-to="PSTNFailOver" /><DISPENTRY tr-mapped-to="Region" /><DISPENTRY tr-mapped-to="Reset" /><DISPENTRY tr-mapped-to="STUNEnable" /><DISPENTRY tr-mapped-to="STUNServer" /><ACTION>
          . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND><COMMAND name="show faxT38" ref="show@voip-profile-fax-view" /><COMMAND name="show numbering-plan" ref="show@voip-numberingPlan" /><COMMAND name="show rtp" ref="show@voip-profile-rtp-view" /></VIEW><VIEW name="voip-profile-rtp-view" prompt="${CLISH_PROMPT}(${prompt}rtp)# " depth="dynamic"><COMMAND name="localPortMin"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="LocalPortMin" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="localPortMax"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="LocalPortMax" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="dscp"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="DSCPMark" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="phoneEventPayload"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="TelephoneEventPayloadType" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="rtcp"><PARAM name="disable_enable" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="RTCP.Enable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="rtcpTxInterval"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="RTCP.TxRepeatInterval" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="show" escape_chars="&quot;"><DISPENTRY tr-mapped-to="DSCPMark" /><DISPENTRY tr-mapped-to="TelephoneEventPayloadType" /><DISPENTRY tr-mapped-to="RTCP.TxRepeatInterval" /><DISPENTRY tr-mapped-to="LocalPortMin,LocalPortMax" /><DISPENTRY tr-mapped-to="RTCPEnabled">
          cmclient -v rtcp GETV "$obj.RTCP.Enable"

          if [ "$rtcp" = "true" ]; then
              rtcp="Yes"
          else
              rtcp="No"
          fi

          echo -n "$rtcp"
       </DISPENTRY><ACTION>
            obj="${obj}"
            [ "${__cmd}" = "show rtp" ] &amp;&amp; obj="$obj.RTP"

            . /etc/clish/clish-commons.sh &amp;&amp; show_object "$obj" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
          </ACTION></COMMAND></VIEW><VIEW name="voip-profile-line-view" prompt="${CLISH_PROMPT}(${prompt}line:${VAR_GET_ALIAS})# " depth="dynamic"><COMMAND name="sip" view="voip-profile-line-sip-view" viewid="obj=${obj}.SIP;prompt=${prompt}line:${VAR_GET_ALIAS}-" tr-obj=".SIP" tr-config-phony="true">
    </COMMAND><COMMAND name="enable" tr-mapped-to="Enable" tr-val="Enabled"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="disable" tr-mapped-to="Enable" tr-val="Disabled"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-permissions-view" help="true" completion="true" /><COMMAND name="no" /><COMMAND name="directoryNumber"><PARAM name="number" ptype="FROM_CM" tr-mapped-to="DirectoryNumber" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no directoryNumber" tr-mapped-to="DirectoryNumber" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interface" /><COMMAND name="interface set"><PARAM name="number" ptype="FROM_CM" tr-mapped-to="PhyReferenceList" /><ACTION builtin="cm_list_reference_idlist_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.Services.VoiceService.PhyInterface.InterfaceID=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface add" no-config-gen="true"><PARAM name="entry" tr-mapped-to="PhyReferenceList" ptype="COMPLETE_NATIVE" ptype_args="listFromProp Device.Services.VoiceService.PhyInterface.InterfaceID" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface del" no-config-gen="true"><PARAM name="entry" tr-mapped-to="PhyReferenceList" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.PhyReferenceList" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface show" tr-mapped-to="PhyReferenceList" no-config-gen="true"><ACTION>cmclient GETV ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="interface clear" tr-mapped-to="PhyReferenceList" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="useAsDefault"><PARAM name="enable" tr-mapped-to="X_ADB_DefaultLine" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="routeToB2bua"><PARAM name="enable" tr-mapped-to="X_ADB_ProxyLine" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="g726Aal2" tr-obj=".Codec.X_ADB_CodecFeatures"><PARAM name="enable" tr-mapped-to="G726AAL2Packing" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Codec.X_ADB_CodecFeatures.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="reset" /><COMMAND name="reset statistics" tr-obj=".Stats" tr-mapped-to="ResetStatistics" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.Stats.${CMD_ATTR_tr-mapped-to} true</ACTION></COMMAND><COMMAND name="txGain" tr-obj=".VoiceProcessing"><PARAM name="number" ptype="FROM_CM" tr-mapped-to="TransmitGain" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.VoiceProcessing.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="rxGain" tr-obj=".VoiceProcessing"><PARAM name="number" ptype="FROM_CM" tr-mapped-to="ReceiveGain" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.VoiceProcessing.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="comfortNoise" tr-obj=".VoiceProcessing"><PARAM name="enable" tr-mapped-to="X_ADB_ComfortNoiseEnable" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.VoiceProcessing.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="echoCancellation" tr-obj=".VoiceProcessing"><PARAM name="enable" tr-mapped-to="EchoCancellationEnable" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.VoiceProcessing.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="setDescription" aux_availability_condition="${obj}.X_ADB_Descriptions"><PARAM name="text" tr-mapped-to="X_ADB_Descriptions.X_ADB_Description" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" no-config-gen="true" escape_chars="&quot;"><DISPENTRY tr-mapped-to="CallState" /><DISPENTRY tr-mapped-to="RingMuteStatus" /><DISPENTRY tr-mapped-to="RingVolumeStatus" /><DISPENTRY tr-mapped-to="Status" /><DISPENTRY tr-mapped-to="X_ADB_RegistrationStatus" /><DISPENTRY tr-mapped-to="X_ADB_LastUp" /><DISPENTRY tr-mapped-to="X_ADB_RegId" /><DISPENTRY tr-mapped-to="X_ADB_Uuid" /><DISPENTRY tr-mapped-to="EchoCancellationInUse" /><DISPENTRY tr-mapped-to="EchoCancellationTail" /><ACTION>
          . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
          show_object "${obj}.Codec.X_ADB_CodecFeatures" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
          show_object "${obj}.VoiceProcessing" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
          show_object "${obj}.X_ADB_Descriptions" "all" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND><COMMAND name="show session" show_all_except="yes" no-config-gen="true" escape_chars="&quot;"><ACTION>
          . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}.Session" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND><COMMAND name="show stat" show_all_except="yes" no-config-gen="true" escape_chars="&quot;"><DISPENTRY tr-mapped-to="ResetStatistics" /><ACTION>
          . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}.Stats" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND><COMMAND name="callFeatures" view="voip-profile-line-callfeatures-view" viewid="obj=${obj}.CallingFeatures;prompt=${prompt}line:${VAR_GET_ALIAS}-" tr-obj=".CallingFeatures" tr-config-phony="true">
    </COMMAND><VAR name="VAR_GET_CODEC_NAME" dynamic="true"><ACTION builtin="cmwrap@cmplugin">GETV ${obj}.Codec</ACTION></VAR><COMMAND name="codec" view="voip-profile-line-codec-view" viewid="obj=${codec};prompt=${prompt}line:${VAR_GET_ALIAS}-" tr-obj=".Codec.List" tr-config-phony="true"><PARAM name="codec" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}.Codec.List.Codec" tr-mapped-to="Codec" /></COMMAND></VIEW><VIEW name="voip-profile-line-sip-view" prompt="${CLISH_PROMPT}(${prompt}sip)# " depth="dynamic"><COMMAND name="no" /><COMMAND name="authUsername"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="AuthUserName" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="authPassword" no-config-gen="true"><PARAM name="passwd" ptype="FROM_CM" tr-mapped-to="AuthPassword" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="uri"><PARAM name="uri" ptype="FROM_CM" tr-mapped-to="URI" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no uri" tr-mapped-to="URI" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="escapeDigits" escape_chars="`|$&lt;&gt;&amp;()"><PARAM name="esc" ptype="FROM_CM" tr-mapped-to="X_ADB_EscapeDigits" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="paiHeader"><PARAM name="enable" tr-mapped-to="X_ADB_CallerIDPaiHeaderEnable" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="no" escape_chars="&quot;"><DISPENTRY tr-mapped-to="AuthUserName,X_ADB_CallerIDPaiHeaderEnable,X_ADB_EscapeDigits" /><DISPENTRY tr-mapped-to="SIPEventSubscribeNumberOfElements,URI" /><DISPENTRY tr-mapped-to="Event,X_ADB_SubscribeStatus" /><ACTION>
          . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
          show_all_child_objects "${obj}.EventSubscribe" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND><VAR name="VAR_GET_AUTH_USER_NAME" dynamic="true"><ACTION builtin="cmwrap@cmplugin">GETV ${obj}.AuthUserName</ACTION></VAR><COMMAND name="eventSubscription" view="voip-profile-line-sip-eventsubscription-view" viewid="obj=${name};prompt=${prompt}sip-" tr-obj=".EventSubscribe" tr-config-phony="true"><PARAM name="name" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}.EventSubscribe.AuthUserName" tr-mapped-to="AuthUserName" /></COMMAND></VIEW><VIEW name="voip-profile-line-sip-eventsubscription-view" prompt="${CLISH_PROMPT}(${prompt}event:${VAR_GET_AUTH_USER_NAME})# " depth="dynamic"><COMMAND name="username"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="AuthUserName" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="password" no-config-gen="true"><PARAM name="passwd" ptype="FROM_CM" tr-mapped-to="AuthPassword" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="voip-profile-line-callfeatures-view" prompt="${CLISH_PROMPT}(${prompt}callFeatures)# " depth="dynamic"><COMMAND name="cid"><PARAM name="enable" tr-mapped-to="CallerIDEnable" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="cidName"><PARAM name="enable" tr-mapped-to="CallerIDNameEnable" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="callerName"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="CallerIDName" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no callerName" tr-mapped-to="CallerIDName" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="cw"><PARAM name="enable" tr-mapped-to="CallWaitingEnable" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="cfu"><PARAM name="enable" tr-mapped-to="CallForwardUnconditionalEnable" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="cfuNumber"><PARAM name="number" ptype="FROM_CM" tr-mapped-to="CallForwardUnconditionalNumber" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no cfuNumber" tr-mapped-to="CallForwardUnconditionalNumber" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="cfb"><PARAM name="enable" tr-mapped-to="CallForwardOnBusyEnable" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="cfbNumber"><PARAM name="number" ptype="FROM_CM" tr-mapped-to="CallForwardOnBusyNumber" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no cfbNumber" tr-mapped-to="CallForwardOnBusyNumber" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="cfnr"><PARAM name="enable" tr-mapped-to="CallForwardOnNoAnswerEnable" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="cfnrNumber"><PARAM name="number" ptype="FROM_CM" tr-mapped-to="CallForwardOnNoAnswerNumber" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no cfnrNumber" tr-mapped-to="CallForwardOnNoAnswerNumber" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="cfnrRingCount"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="CallForwardOnNoAnswerRingCount" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ct"><PARAM name="enable" tr-mapped-to="CallTransferEnable" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="mwi"><PARAM name="enable" tr-mapped-to="MWIEnable" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="acr"><PARAM name="enable" tr-mapped-to="AnonymousCallBlockEnable" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="dnd"><PARAM name="enable" tr-mapped-to="DoNotDisturbEnable" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="emergencyCall"><PARAM name="enable" tr-mapped-to="X_ADB_EmergencyCallEnable" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="emergencyCallAllowed"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="X_ADB_EmergencyCallAllowed" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ch"><PARAM name="enable" tr-mapped-to="X_ADB_CallHoldEnable" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="chReorderTone"><PARAM name="enable" tr-mapped-to="X_ADB_CallHoldReorderTone" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="remoteClir"><PARAM name="enable" tr-mapped-to="X_ADB_RemoteCLIR" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="remoteClirActCode"><PARAM name="value" tr-mapped-to="X_ADB_RemoteCLIR_ActivationCode" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="remoteClirDeactCode"><PARAM name="value" tr-mapped-to="X_ADB_RemoteCLIR_DeActivationCode" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="remoteCfb"><PARAM name="enable" tr-mapped-to="X_ADB_RemoteCFB" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="remoteCfbActCode"><PARAM name="value" tr-mapped-to="X_ADB_RemoteCFB_ActivationCode" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="remoteCfbDeactCode"><PARAM name="value" tr-mapped-to="X_ADB_RemoteCFB_DeActivationCode" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="remoteCfnr"><PARAM name="enable" tr-mapped-to="X_ADB_RemoteCFNR" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="remoteCfnrActCode"><PARAM name="value" tr-mapped-to="X_ADB_RemoteCFNR_ActivationCode" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="remoteCfnrDeactCode"><PARAM name="value" tr-mapped-to="X_ADB_RemoteCFNR_DeActivationCode" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="remoteCfu"><PARAM name="enable" tr-mapped-to="X_ADB_RemoteCFU" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="remoteCfuActCode"><PARAM name="value" tr-mapped-to="X_ADB_RemoteCFU_ActivationCode" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="remoteCfuDeactCode"><PARAM name="value" tr-mapped-to="X_ADB_RemoteCFU_DeActivationCode" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="remoteDnd"><PARAM name="enable" tr-mapped-to="X_ADB_RemoteDND" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="pPrefId"><PARAM name="enable" tr-mapped-to="X_ADB_PPrefIdEnable" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="pPrefIdHeader"><PARAM name="header" ptype="FROM_CM" tr-mapped-to="X_ADB_PPrefId" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no pPrefIdHeader" tr-mapped-to="X_ADB_PPrefId" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="cc"><PARAM name="enable" tr-mapped-to="X_ADB_ConferenceCallingEnable" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ccCallMode"><PARAM name="mode" ptype="FROM_CM" tr-mapped-to="X_ADB_ConferenceCallingMode" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="mwiType"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="X_ADB_MWIType" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="alertTimeout"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="X_ADB_AlertTimeout" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="resumeAlertTimeout"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="X_ADB_ResumeAlertTimeout" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="supplServDigitTimeout"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="X_ADB_SuppServicesDigitTimeout" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="CallWaitingStatus" /><DISPENTRY tr-mapped-to="ConferenceCallingSessionCount" /><DISPENTRY tr-mapped-to="ConferenceCallingStatus" /><DISPENTRY tr-mapped-to="MaxSessions" /><DISPENTRY tr-mapped-to="MessageWaiting" /><ACTION>
          . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND></VIEW><VIEW name="voip-profile-line-codec-view" prompt="${CLISH_PROMPT}(${prompt}Codec:${VAR_GET_CODEC_NAME})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="silenceSuppression"><PARAM name="enable" tr-mapped-to="SilenceSuppression" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="priority"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="Priority" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="no" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Codec" /><DISPENTRY tr-mapped-to="Enable" /><DISPENTRY tr-mapped-to="PacketizationPeriod" /><DISPENTRY tr-mapped-to="Supported Packetization Period">
            cmclient -v supp_packper GETV "Device.Services.VoiceService.Capabilities.Codecs.[Codec=%(${obj}.Codec)].PacketizationPeriod"
            [ -n "\$supp_packper" ] &amp;&amp; echo "\$supp_packper"
        </DISPENTRY><DISPENTRY tr-mapped-to="Priority" /><DISPENTRY tr-mapped-to="SilenceSuppression" /><ACTION>
          . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND><COMMAND name="packetizationPeriod"><PARAM name="entry" tr-mapped-to="PacketizationPeriod" ptype="COMPLETE_NATIVE" ptype_args="listFromProp Device.Services.VoiceService.Capabilities.Codecs.[Codec=%(${obj}.Codec)].PacketizationPeriod" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="voip-profile-sip-view" prompt="${CLISH_PROMPT}(${prompt}sip)# " depth="dynamic"><COMMAND name="no" /><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="proxyServer"><PARAM name="addr" ptype="IP_ADDRESS_OR_HOSTNAME" tr-mapped-to="ProxyServer" /><PARAM name="port" optional="true" ptype="FROM_CM" tr-mapped-to="ProxyServerPort" /><PARAM name="transport" optional="true" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${service}.Capabilities.SIP.Transports" tr-mapped-to="ProxyServerTransport" /><ACTION>
           val_addr=${addr}
           val_port=${port}
           val_transport=${transport}

           if [ -z "$val_port" ]; then
               val_port=`cmclient GETMD "${obj}.ProxyServerPort" | awk -F: '/default:/ { printf $2 }'`
           fi

           if [ -z "$val_transport" ]; then
               val_transport=`cmclient GETMD "${obj}.ProxyServerTransport" | awk -F: '/default:/ { printf $2 }'`
           fi

           cmclient SET "${obj}.ProxyServer" "$val_addr" > /dev/null 2>&amp;1
           cmclient SET "${obj}.ProxyServerPort" "$val_port" > /dev/null 2>&amp;1
           cmclient SET "${obj}.ProxyServerTransport" "$val_transport" > /dev/null 2>&amp;1
      </ACTION></COMMAND><COMMAND name="no proxyServer" tr-mapped-to="ProxyServer" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="registrarServer"><PARAM name="addr" ptype="IP_ADDRESS_OR_HOSTNAME" tr-mapped-to="RegistrarServer" /><PARAM name="port" optional="true" ptype="FROM_CM" tr-mapped-to="RegistrarServerPort" /><PARAM name="transport" optional="true" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${service}.Capabilities.SIP.Transports" tr-mapped-to="RegistrarServerTransport" /><ACTION>
           val_addr=${addr}
           val_port=${port}
           val_transport=${transport}

           if [ -z "$val_port" ]; then
               val_port=`cmclient GETMD "${obj}.RegistrarServerPort" | awk -F: '/default:/ { printf $2 }'`
           fi

           if [ -z "$val_transport" ]; then
               val_transport=`cmclient GETMD "${obj}.RegistrarServerTransport" | awk -F: '/default:/ { printf $2 }'`
           fi

           cmclient SET "${obj}.RegistrarServer" "$val_addr" > /dev/null 2>&amp;1
           cmclient SET "${obj}.RegistrarServerPort" "$val_port" > /dev/null 2>&amp;1
           cmclient SET "${obj}.RegistrarServerTransport" "$val_transport" > /dev/null 2>&amp;1
      </ACTION></COMMAND><COMMAND name="no registrarServer" tr-mapped-to="RegistrarServer" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="userAgentDomain"><PARAM name="domain" ptype="FROM_CM" tr-mapped-to="UserAgentDomain" /><PARAM name="transport" optional="true" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${service}.Capabilities.SIP.Transports" tr-mapped-to="UserAgentTransport" /><ACTION>
           val_domain=${domain}
           val_transport=${transport}

           if [ -z "$val_transport" ]; then
               val_transport=`cmclient GETMD "${obj}.UserAgentTransport" | awk -F: '/default:/ { printf $2 }'`
           fi

           cmclient SET "${obj}.UserAgentDomain" "$val_domain" > /dev/null 2>&amp;1
           cmclient SET "${obj}.UserAgentTransport" "$val_transport" > /dev/null 2>&amp;1
      </ACTION></COMMAND><COMMAND name="no userAgentDomain" tr-mapped-to="UserAgentDomain" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="outboundProxy"><PARAM name="addr" ptype="IP_ADDRESS_OR_HOSTNAME" tr-mapped-to="OutboundProxy" /><PARAM name="port" optional="true" ptype="FROM_CM" tr-mapped-to="OutboundProxyPort" /><ACTION>
           val_addr=${addr}
           val_port=${port}

           if [ -z "$val_port" ]; then
               val_port=`cmclient GETMD "${obj}.OutboundProxyPort" | awk -F: '/default:/ { printf $2 }'`
           fi

           cmclient SET "${obj}.OutboundProxy" "$val_addr" > /dev/null 2>&amp;1
           cmclient SET "${obj}.OutboundProxyPort" "$val_port" > /dev/null 2>&amp;1
      </ACTION></COMMAND><COMMAND name="no outboundProxy" tr-mapped-to="OutboundProxy" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="timerT1"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="TimerT1" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="timerT2"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="TimerT2" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="timerB"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="TimerB" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="timerF"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="TimerF" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="registerExpires"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="RegisterExpires" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="registerRetryInterval"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="RegisterRetryInterval" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="dscp"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="DSCPMark" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="toHeader"><PARAM name="disable_enable" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_UseToHeader" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="msnLength"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="X_ADB_MSNLength" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="confCallUri"><PARAM name="uri" ptype="FROM_CM" tr-mapped-to="X_ADB_ConferenceCallRemoteURI" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no confCallUri" tr-mapped-to="X_ADB_ConferenceCallRemoteURI" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="subscribeRetryInterval"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="X_ADB_SubscribeRetryInterval" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="add eventSubscription" tr-obj=".EventSubscribe" tr-config-phony="true"><PARAM name="name" ptype="SIP_EVENT_SUBSCRIBE_EVENT" tr-mapped-to="Event" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${obj}.EventSubscribe Event=${name}</ACTION></COMMAND><COMMAND name="eventSubscription" view="voip-profile-sip-event-view" viewid="service=${service};obj=${name};prompt=${prompt}" tr-obj=".EventSubscribe" tr-config-phony="true"><PARAM name="name" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.Event" tr-mapped-to="Event" /></COMMAND><COMMAND name="del eventSubscription" tr-obj=".EventSubscribe" no-config-gen="true"><PARAM name="name" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.Event" tr-mapped-to="Event" /><ACTION builtin="cmwrap@cmplugin">DEL ${name}</ACTION></COMMAND><COMMAND name="show" escape_chars="&quot;"><DISPENTRY tr-mapped-to="ProxyServer,ProxyServerPort,ProxyServerTransport" /><DISPENTRY tr-mapped-to="RegistrarServer,RegistrarServerPort,RegistrarServerTransport" /><DISPENTRY tr-mapped-to="UserAgentDomain,UserAgentTransport" /><DISPENTRY tr-mapped-to="OutboundProxy,OutboundProxyPort" /><DISPENTRY tr-mapped-to="TimerT1,TimerT2,TimerB,TimerF" /><DISPENTRY tr-mapped-to="RegisterExpires,RegisterRetryInterval,DSCPMark,X_ADB_UseToHeader,X_ADB_MSNLength,X_ADB_ConferenceCallRemoteURI,X_ADB_SubscribeRetryInterval" /><ACTION>
            . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"

            cmclient -v events GETO "${obj}.EventSubscribe."
            if [ -n "$events" ]; then
                show_split_text "Event" "Subscriber"
                print_horizontal_line
                for o_event in $events; do
                    cmclient -v n_event GETV "$o_event.Event"
                    cmclient -v n_notifier GETV "$o_event.Notifier"
                    cmclient -v n_notifier_port GETV "$o_event.NotifierPort"
                    cmclient -v n_notifier_transport GETV "$o_event.NotifierTransport"

                    show_split_text "$n_event" "$n_notifier_transport://$n_notifier:$n_notifier_port" ## UDP://foo:1234
                done
            fi
          </ACTION></COMMAND></VIEW><VIEW name="voip-profile-sip-event-view" prompt="${CLISH_PROMPT}(${prompt}event:${VAR_GET_EVENT})# " depth="dynamic"><COMMAND name="notifier"><PARAM name="addr" ptype="IP_ADDRESS_OR_HOSTNAME" tr-mapped-to="Notifier" /><PARAM name="port" optional="true" ptype="FROM_CM" tr-mapped-to="NotifierPort" /><PARAM name="transport" optional="true" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${service}.Capabilities.SIP.Transports" tr-mapped-to="NotifierTransport" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="expireTime"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="ExpireTime" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="show" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Event,Notifier,NotifierPort,NotifierTransport,ExpireTime" /><ACTION>
            . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
          </ACTION></COMMAND><VAR name="VAR_GET_EVENT" dynamic="true"><ACTION builtin="cmwrap@cmplugin">GETV ${obj}.Event</ACTION></VAR></VIEW><VIEW name="voip-profile-fax-view" prompt="${CLISH_PROMPT}(${prompt}faxT38)# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="bitRate"><PARAM name="value" ptype="FAX_T38_BIT_RATE" tr-mapped-to="BitRate" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="packetRate"><PARAM name="value" ptype="FAX_T38_PACKET_RATE" tr-mapped-to="HighSpeedPacketRate" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="hsRedundancy"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="HighSpeedRedundancy" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="lsRedundancy"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="LowSpeedRedundancy" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="tcfMethod"><PARAM name="method" ptype="FROM_CM" tr-mapped-to="TCFMethod" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="reuseRtpPort"><PARAM name="disable_enable" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_UDPTLReuseRTPPort" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="udpTlPortMax"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="X_ADB_UDPTLLocalPortMax" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="udpTlPortMin"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="X_ADB_UDPTLLocalPortMin" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="show" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Enable,BitRate,HighSpeedPacketRate,HighSpeedRedundancy,LowSpeedRedundancy,TCFMethod,X_ADB_UDPTLReuseRTPPort,X_ADB_UDPTLLocalPortMin,X_ADB_UDPTLLocalPortMax" /><ACTION>
            obj="${obj}"
            [ "${__cmd}" = "show fax-t38" ] &amp;&amp; obj="$obj.FaxT38"
            . /etc/clish/clish-commons.sh &amp;&amp; show_object "$obj" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
          </ACTION></COMMAND></VIEW><VIEW name="voip-profile-service-info-view" prompt="${CLISH_PROMPT}(${prompt}serviceProviderInfo)# " depth="dynamic"><COMMAND name="no" /><COMMAND name="name"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="Name" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no name" tr-mapped-to="Name" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="url"><PARAM name="url" ptype="FROM_CM" tr-mapped-to="URL" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no url" tr-mapped-to="URL" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="phoneNumber"><PARAM name="phone" ptype="FROM_CM" tr-mapped-to="ContactPhoneNumber" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no phoneNumber" tr-mapped-to="ContactPhoneNumber" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="email"><PARAM name="email" ptype="FROM_CM" tr-mapped-to="EmailAddress" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no email" tr-mapped-to="EmailAddress" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="show" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Name,URL,ContactPhoneNumber,EmailAddress" /><ACTION>
            . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
          </ACTION></COMMAND></VIEW><VIEW name="voip-dect-view" depth="dynamic" prompt="${CLISH_PROMPT}(cfg-voip-dect)# "><COMMAND name="enable" tr-val="true" tr-mapped-to="Enable"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="disable" tr-val="false" tr-mapped-to="Enable"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="maxHandset"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="MaxSupportedPP" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="pin"><PARAM name="pin" ptype="HEX" tr-mapped-to="PIN" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no" /><COMMAND name="no pin" tr-mapped-to="PIN" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="nemo"><PARAM name="enable" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="NEMOEnable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="paging"><PARAM name="enable" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_PagingEnable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="openSubscription" tr-val="true" tr-mapped-to="SubscriptionEnable"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="ciphering"><PARAM name="enable" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="CipheringEnable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="fxsInterface"><PARAM name="fxs" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${parent}.PhyInterface.InterfaceID" tr-mapped-to="X_ADB_PhyReference" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="extension" aux_availability_condition="${parent}${CMD_ATTR_tr-obj}" tr-obj=".DECT.Portable" no-config-gen="true" viewid="obj=${__eval PAR_ATTR_1_name}" view="voip-dect-ext-view"><PARAM name="name" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${parent}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="X_ADB_Name" /></COMMAND><COMMAND name="show" escape_chars="&quot;"><ACTION>. /etc/clish/clish-commons.sh &amp;&amp; show_object ${obj} all yes</ACTION></COMMAND></VIEW><VIEW name="voip-dect-ext-view" depth="dynamic" prompt="${CLISH_PROMPT}(cfg-voip-dect-extension:${VAR_GET_X_ADB_NAME})# "><COMMAND name="no" /><COMMAND name="name"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="X_ADB_Name" /><ACTION builtin="cmset@cmplugin" /></COMMAND><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="control"><PARAM name="option" ptype="FROM_CM" tr-mapped-to="Control" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="show" escape_chars="&quot;"><ACTION>. /etc/clish/clish-commons.sh &amp;&amp; show_object ${obj} all yes</ACTION></COMMAND></VIEW><VIEW name="upnp-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="mediaServer"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="UPnPMediaServer" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="igd"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="UPnPIGD" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="externalInterface"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.[X_ADB_Upstream=true].Alias" tr-mapped-to="%(X_ADB_ExternalInterface).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_ExternalInterface=${__eval PAR_ATTR_1_name}	${obj}.X_ADB_AutoExternalInterface=false</ACTION></COMMAND><COMMAND name="externalInterface auto" tr-mapped-to="X_ADB_AutoExternalInterface" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}	${obj}.X_ADB_ExternalInterface=</ACTION></COMMAND><COMMAND name="notifyInterval"><PARAM name="val" ptype="FROM_CM" tr-mapped-to="X_ADB_NotifyInterval" /><ACTION builtin="cmset@cmplugin" /></COMMAND><VAR name="VAR_UPNP_LAN_INTERFACES" dynamic="true"><ACTION>
        cmclient -v ifaces GETV ${obj}.X_ADB_LanInterface
        set -f; IFS=","; set -- $ifaces; unset IFS; set +f
        for l; do
            cmclient -v o GETV $l.Alias
            val="${val:+$val,}$o"
        done
        [ -n "$val" ] &amp;&amp; echo -n "\"$val\""
        </ACTION></VAR><COMMAND name="lanInterface" /><COMMAND name="lanInterface set"><PARAM name="interfaces" ptype="STRING" tr-mapped-to="X_ADB_LanInterface" tr-var-action="VAR_UPNP_LAN_INTERFACES" /><ACTION builtin="cm_list_reference_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.IP.Interface.[X_ADB_Upstream=false].Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="lanInterface add" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.[X_ADB_Upstream=false].Alias" tr-mapped-to="X_ADB_LanInterface" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="lanInterface del" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="listFromRefProp ${obj}.${PAR_ATTR_1_tr-mapped-to}#Alias" tr-mapped-to="X_ADB_LanInterface" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="lanInterface clear" tr-mapped-to="X_ADB_LanInterface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="lanInterface show" no-config-gen="true" tr-mapped-to="X_ADB_LanInterface"><ACTION>
          . /etc/clish/clish-commons.sh
          show_deref_list ${obj}.${CMD_ATTR_tr-mapped-to} Alias
      </ACTION></COMMAND></VIEW><VIEW name="vpn-main-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="ipsec" view="vpn-ipsec-view" viewid="obj=Device.IPsec;prompt=${prompt}-ipsec" tr-obj="Device.IPsec" aux_availability_condition="Device.IPsec" config-gen-prio="1" tr-config-phony="true">
    </COMMAND><COMMAND name="l2tp" view="vpn-l2tp-view" viewid="obj=Device.X_ADB_VPN;prompt=${prompt}-l2tp" tr-obj="Device.X_ADB_VPN" config-gen-prio="1" tr-config-phony="true">
    </COMMAND><COMMAND name="pptp" view="vpn-pptp-view" viewid="obj=Device.X_ADB_VPN;prompt=${prompt}-pptp" tr-obj="Device.X_ADB_VPN" config-gen-prio="1" tr-config-phony="true">
    </COMMAND><COMMAND name="users" view="vpn-users-view" viewid="obj=Device.X_ADB_VPN;prompt=${prompt}-users" tr-obj="Device.X_ADB_VPN" config-gen-prio="0" tr-config-phony="true">
    </COMMAND><COMMAND name="show" no-config-gen="true" show_all_except="yes" escape_chars="&quot;"><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND></VIEW><VIEW name="vpn-ipsec-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="reset" no-config-gen="true" tr-mapped-to="X_ADB_Reset" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="dnsCheck" view="vpn-ipsec-dnsCheck-view" viewid="obj=${obj};prompt=${prompt}-dnsCheck" tr-config-phony="true">
    </COMMAND><COMMAND name="add" /><COMMAND name="add profile" tr-obj=".Profile" config-gen-prio="0"><PARAM name="alias" optional="true" ptype="FROM_CM" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">Device.IPsec.Profile Alias=${alias}</ACTION></COMMAND><COMMAND name="profile" view="vpn-ipsec-profile-view" viewid="obj=${alias};prompt=${prompt}-profile" tr-obj=".Profile" config-gen-prio="1"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IPsec.Profile.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del" /><COMMAND name="del profile" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.IPsec.Profile.Alias" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="add filter" tr-obj=".Filter" config-gen-prio="0"><PARAM name="alias" optional="true" ptype="FROM_CM" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">Device.IPsec.Filter Alias=${alias}</ACTION></COMMAND><COMMAND name="filter" view="vpn-ipsec-filter-view" viewid="obj=${alias};prompt=${prompt}-filter" tr-obj=".Filter" config-gen-prio="1"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IPsec.Filter.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del filter" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.IPsec.Filter.Alias" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="add credentials" tr-obj=".X_ADB_Security" config-gen-prio="0"><PARAM name="alias" optional="true" ptype="FROM_CM" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">Device.IPsec.X_ADB_Security Alias=${alias}</ACTION></COMMAND><COMMAND name="credentials" view="vpn-ipsec-credentials-view" viewid="obj=${alias};prompt=${prompt}-credentials" tr-obj=".X_ADB_Security" config-gen-prio="1"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IPsec.X_ADB_Security.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del credentials" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.IPsec.X_ADB_Security.Alias" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="add template" tr-obj=".X_ADB_Template" config-gen-prio="0"><PARAM name="alias" optional="true" ptype="FROM_CM" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">Device.IPsec.X_ADB_Template Alias=${alias}</ACTION></COMMAND><COMMAND name="template" view="vpn-ipsec-template-view" viewid="obj=${alias};prompt=${prompt}-template" tr-obj=".X_ADB_Template" config-gen-prio="1"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IPsec.X_ADB_Template.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del template" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.IPsec.X_ADB_Template.Alias" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND></VIEW><VIEW name="vpn-ipsec-dnsCheck-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="enable" tr-mapped-to="X_ADB_CheckDNSEnable" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="disable" tr-mapped-to="X_ADB_CheckDNSEnable" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="repetitionRate"><PARAM name="time" tr-mapped-to="X_ADB_CheckDNSFrequency" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="startTest" no-config-gen="true" tr-mapped-to="X_ADB_CheckDNSTrigger" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="show" no-config-gen="true" escape_chars="&quot;"><DISPENTRY tr-mapped-to="X_ADB_CheckDNSEnable, X_ADB_CheckDNSFrequency" /><ACTION>
        # the following prints the object contents as specified above
        # Note: preferably it should be implemented as a VAR routine, alas, it tries to "execute"
        # the returned output ...
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND></VIEW><VIEW name="vpn-ipsec-profile-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="maxSas"><PARAM name="count" tr-mapped-to="MaxChildSAs" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="remoteEndpoint"><PARAM name="addr" tr-mapped-to="RemoteEndpoints" ptype="IP_ADDRESS_OR_HOSTNAME" /><PARAM name="mask" optional="true" tr-mapped-to="X_ADB_RemoteEndpointMask" ptype="IPV4_MASK" /><ACTION>
        cmclient SET ${obj}.RemoteEndpoints ${addr} > /dev/null
        local realMask=""
        # simple IPv4 format test ...
        if (echo "${addr}" | grep  -qE ".+\..+\..+\..+") then
          [ -n "${mask}" ] &amp;&amp; realMask="${mask}"
        fi
        cmclient SET ${obj}.X_ADB_RemoteEndpointMask "$realMask" > /dev/null
      </ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no remoteEndpoint" tr-mapped-to="RemoteEndpoints" tr-val=""><ACTION>
        cmclient SETM "${obj}.RemoteEndpoints=	${obj}.X_ADB_RemoteEndpointMask=" > /dev/null
      </ACTION></COMMAND><COMMAND name="localEndpoint"><PARAM name="ifname" tr-mapped-to="%(X_ADB_LocalEndpoint).Alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.[X_ADB_Upstream=true].Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_LocalEndpoint=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no localEndpoint" tr-mapped-to="X_ADB_LocalEndpoint" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="IKEAuthenticationMethod"><PARAM name="credentials" tr-mapped-to="%(IKEv2AuthenticationMethod).Alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IPsec.X_ADB_Security.Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.IKEv2AuthenticationMethod=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><NAMESPACE ref="security-namespace" help="true" completion="true" /><COMMAND name="ikeCheckPeers" /><COMMAND name="ikeCheckPeers add" no-config-gen="true"><PARAM name="credentials" tr-mapped-to="X_ADB_IKEv2CheckPeersID" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IPsec.X_ADB_Security.[Side=Remote].Alias" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ikeCheckPeers del" no-config-gen="true"><PARAM name="credentials" tr-mapped-to="X_ADB_IKEv2CheckPeersID" ptype="COMPLETE_NATIVE" ptype_args="listFromRefProp ${obj}.X_ADB_IKEv2CheckPeersID#Alias" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><VAR name="VAR_REFLIST_IPSEC_IKECHECK"><ACTION>
        . /etc/clish/clish-commons.sh
        show_deref_list_as_list ${obj}.X_ADB_IKEv2CheckPeersID Alias
      </ACTION></VAR><COMMAND name="ikeCheckPeers set"><PARAM name="credentials_list" ptype="STRING" tr-mapped-to="X_ADB_IKEv2CheckPeersID" tr-var-action="VAR_REFLIST_IPSEC_IKECHECK" /><ACTION builtin="cm_list_reference_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.IPsec.X_ADB_Security.[Side=Remote].Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ikeCheckPeers show" no-config-gen="true" tr-mapped-to="X_ADB_IKEv2CheckPeersID"><ACTION>
            . /etc/clish/clish-commons.sh
            show_deref_list ${obj}.X_ADB_IKEv2CheckPeersID Alias
      </ACTION></COMMAND><COMMAND name="ikeCheckPeers clear" tr-mapped-to="X_ADB_IKEv2CheckPeersID" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND></VIEW><VIEW name="security-namespace" depth="dynamic"><COMMAND name="protocol"><PARAM name="proto" ptype="COMPLETE" ptype_args="get_ipsec_protcols" tr-mapped-to="Protocol" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ikeEncryption" /><COMMAND name="ikeEncryption add" no-config-gen="true"><PARAM name="alg" tr-mapped-to="IKEv2AllowedEncryptionAlgorithms" ptype="COMPLETE" ptype_args="list_add Device.IPsec.IKEv2SupportedEncryptionAlgorithms ${obj}.IKEv2AllowedEncryptionAlgorithms" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ikeEncryption del" no-config-gen="true"><PARAM name="alg" tr-mapped-to="IKEv2AllowedEncryptionAlgorithms" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.IKEv2AllowedEncryptionAlgorithms" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ikeEncryption set"><PARAM name="alg_list" ptype="FROM_CM" tr-mapped-to="IKEv2AllowedEncryptionAlgorithms" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ikeEncryption show" no-config-gen="true" tr-mapped-to="IKEv2AllowedEncryptionAlgorithms"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="ikeEncryption clear" tr-mapped-to="IKEv2AllowedEncryptionAlgorithms" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="espEncryption" aux_availability_condition="${obj}.[Protocol=ESP]" /><COMMAND name="espEncryption add" no-config-gen="true"><PARAM name="alg" tr-mapped-to="ESPAllowedEncryptionAlgorithms" ptype="COMPLETE" ptype_args="list_add Device.IPsec.ESPSupportedEncryptionAlgorithms ${obj}.ESPAllowedEncryptionAlgorithms" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="espEncryption del" no-config-gen="true"><PARAM name="alg" tr-mapped-to="ESPAllowedEncryptionAlgorithms" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.ESPAllowedEncryptionAlgorithms" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="espEncryption set"><PARAM name="alg_list" ptype="FROM_CM" tr-mapped-to="ESPAllowedEncryptionAlgorithms" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="espEncryption show" no-config-gen="true" tr-mapped-to="ESPAllowedEncryptionAlgorithms"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="espEncryption clear" tr-mapped-to="ESPAllowedEncryptionAlgorithms" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="ikeIntegrity" /><COMMAND name="ikeIntegrity add" no-config-gen="true"><PARAM name="alg" tr-mapped-to="IKEv2AllowedIntegrityAlgorithms" ptype="COMPLETE" ptype_args="list_add Device.IPsec.SupportedIntegrityAlgorithms ${obj}.IKEv2AllowedIntegrityAlgorithms" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ikeIntegrity del" no-config-gen="true"><PARAM name="alg" tr-mapped-to="IKEv2AllowedIntegrityAlgorithms" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.IKEv2AllowedIntegrityAlgorithms" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ikeIntegrity set"><PARAM name="alg_list" ptype="FROM_CM" tr-mapped-to="IKEv2AllowedIntegrityAlgorithms" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ikeIntegrity show" no-config-gen="true" tr-mapped-to="IKEv2AllowedIntegrityAlgorithms"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="ikeIntegrity clear" tr-mapped-to="IKEv2AllowedIntegrityAlgorithms" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="ahIntegrity" aux_availability_condition="${obj}.[Protocol=AH]" /><COMMAND name="ahIntegrity add" no-config-gen="true"><PARAM name="alg" tr-mapped-to="AHAllowedIntegrityAlgorithms" ptype="COMPLETE" ptype_args="list_add Device.IPsec.SupportedIntegrityAlgorithms ${obj}.AHllowedIntegrityAlgorithms" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ahIntegrity del" no-config-gen="true"><PARAM name="alg" tr-mapped-to="AHAllowedIntegrityAlgorithms" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.AHAllowedIntegrityAlgorithms" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ahIntegrity set"><PARAM name="alg_list" ptype="FROM_CM" tr-mapped-to="AHAllowedIntegrityAlgorithms" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ahIntegrity show" no-config-gen="true" tr-mapped-to="AHAllowedIntegrityAlgorithms"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="ahIntegrity clear" tr-mapped-to="AHAllowedIntegrityAlgorithms" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="espIntegrity" aux_availability_condition="${obj}.[Protocol=ESP]" /><COMMAND name="espIntegrity add" no-config-gen="true"><PARAM name="alg" tr-mapped-to="ESPAllowedIntegrityAlgorithms" ptype="COMPLETE" ptype_args="list_add Device.IPsec.SupportedIntegrityAlgorithms ${obj}.ESPAllowedIntegrityAlgorithms" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="espIntegrity del" no-config-gen="true"><PARAM name="alg" tr-mapped-to="ESPAllowedIntegrityAlgorithms" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.ESPAllowedIntegrityAlgorithms" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="espIntegrity set"><PARAM name="alg_list" ptype="FROM_CM" tr-mapped-to="ESPAllowedIntegrityAlgorithms" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="espIntegrity show" no-config-gen="true" tr-mapped-to="ESPAllowedIntegrityAlgorithms"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="espIntegrity clear" tr-mapped-to="ESPAllowedIntegrityAlgorithms" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="ikeDhGTrans" /><COMMAND name="ikeDhGTrans add" no-config-gen="true"><PARAM name="alg" tr-mapped-to="IKEv2AllowedDiffieHellmanGroupTransforms" ptype="COMPLETE" ptype_args="list_add Device.IPsec.SupportedDiffieHellmanGroupTransforms ${obj}.IKEv2AllowedDiffieHellmanGroupTransforms" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ikeDhGTrans del" no-config-gen="true"><PARAM name="alg" tr-mapped-to="IKEv2AllowedDiffieHellmanGroupTransforms" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.IKEv2AllowedDiffieHellmanGroupTransforms" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ikeDhGTrans set"><PARAM name="alg_list" ptype="FROM_CM" tr-mapped-to="IKEv2AllowedDiffieHellmanGroupTransforms" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ikeDhGTrans show" no-config-gen="true" tr-mapped-to="IKEv2AllowedDiffieHellmanGroupTransforms"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="ikeDhGTrans clear" tr-mapped-to="IKEv2AllowedDiffieHellmanGroupTransforms" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="espDhGTrans" aux_availability_condition="${obj}.[Protocol=ESP]"><PARAM name="alg" ptype="COMPLETE" ptype_args="list_add Device.IPsec.SupportedDiffieHellmanGroupTransforms" tr-mapped-to="X_ADB_ESPAllowedDiffieHellmanGroupTransform" tr-ifval-not-in="NONE" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no espDhGTrans" aux_availability_condition="${obj}.[Protocol=ESP]" tr-mapped-to="X_ADB_ESPAllowedDiffieHellmanGroupTransform" tr-val="NONE"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="ikeDpdTimeout"><PARAM name="time" tr-mapped-to="IKEv2DeadPeerDetectionTimeout" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ikeSaTimeLimit"><PARAM name="time" tr-mapped-to="IKEv2SATimeLimit" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="saLifetime"><PARAM name="time" tr-mapped-to="ChildSATimeLimit" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ikeExchangeMode"><PARAM name="mode" tr-mapped-to="X_ADB_IKEv2ExchangeMode" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ikeCheck"><PARAM name="type" tr-mapped-to="X_ADB_IKEv2Check" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="vpn-ipsec-filter-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="order"><PARAM name="position" tr-mapped-to="Order" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface"><PARAM name="ifname" ptype="COMPLETE" ptype_args="get_cust_obj_by_prop_with_pref Device.IP.Interface.Alias#Device.PPP.Interface.Alias#Device.ATM.Link.Alias#Device.PTM.Link.Alias#Device.WiFi.SSID.Alias#Device.Ethernet.Interface.Alias#Device.Ethernet.VLANTermination.Alias#Device.Bridging.Bridge.Port.[ManagementPort=true].Alias all\(all\) true" tr-var-action="VAR_QOS_QUEUE_IFACE" /><ACTION>
            case ${ifname} in
            all)
                . /etc/clish/quick_cm.sh setm "${obj}.AllInterfaces=true	${obj}.Interface="
	            ;;
            *)
                . /etc/clish/quick_cm.sh setm "${obj}.AllInterfaces=false	${obj}.Interface=${ifname}"
                ;;
            esac
      </ACTION></COMMAND><COMMAND name="no interface" tr-obj=".[AllInterfaces=false].[Interface=]" tr-config-phony="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.AllInterfaces=false	${obj}.Interface=</ACTION></COMMAND><COMMAND name="destIpAddr"><PARAM name="ip" ptype="IPV4_ADDRESS_WITH_PREFIX" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" tr-var-action="VAR_RUNCONF_DEST_IP" /><ACTION>
        . /etc/clish/clish-commons.sh
        set_ip_with_prefix_possibly_excluded ${obj} Dest ${ip} ${exclude}
      </ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no destIpAddr" tr-mapped-to="DestIP" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.DestIP=	${obj}.DestMask=	${obj}.DestIPExclude=false</ACTION></COMMAND><COMMAND name="sourceIpAddr"><PARAM name="ip" ptype="IPV4_ADDRESS_WITH_PREFIX" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" tr-var-action="VAR_RUNCONF_SOURCE_IP" /><ACTION>
        . /etc/clish/clish-commons.sh
        set_ip_with_prefix_possibly_excluded ${obj} Source ${ip} ${exclude}
      </ACTION></COMMAND><COMMAND name="no sourceIpAddr" tr-mapped-to="SourceIP" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.SourceIP=	${obj}.SourceMask=	${obj}.SourceIPExclude=false</ACTION></COMMAND><COMMAND name="processing"><PARAM name="choice" tr-mapped-to="ProcessingChoice" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="profile"><PARAM name="profile" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IPsec.Profile.Alias" tr-mapped-to="Profile" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="roadWarrior" view="vpn-ipsec-rwar-view" viewid="obj=${obj}.X_ADB_RoadWarrior;prompt=${prompt}:${VAR_GET_ALIAS}-roadWarriors" tr-obj=".X_ADB_RoadWarrior" tr-config-phony="true">
    </COMMAND><COMMAND name="show" no-config-gen="true" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Interface">
        show_deref_list_as_list ${obj}.Interface Alias true
      </DISPENTRY><DISPENTRY tr-mapped-to="Profile">
        cmclient GETV "%(${obj}.Profile).Alias"
      </DISPENTRY><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND></VIEW><VIEW name="vpn-ipsec-rwar-view" prompt="${CLISH_PROMPT}(${prompt}# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="type"><PARAM name="type" tr-mapped-to="Type" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="poolSize"><PARAM name="size" tr-mapped-to="PoolSize" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="domain"><PARAM name="name" tr-mapped-to="DomainName" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="dnsServers" /><COMMAND name="dnsServers add" no-config-gen="true"><PARAM name="addr" tr-mapped-to="DNSServers" ptype="IPV4_ADDRESS" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="dnsServers del" no-config-gen="true"><PARAM name="addr" tr-mapped-to="DNSServers" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.DNSServers" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="dnsServers set"><PARAM name="addr_list" ptype="LIST_IPV4_ADDRESS" tr-mapped-to="DNSServers" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="dnsServers show" no-config-gen="true" tr-mapped-to="DNSServers"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="dnsServers clear" tr-mapped-to="DNSServers" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="addrPool"><PARAM name="addr" ptype="IPV4_ADDRESS" tr-mapped-to="Address" /><PARAM name="mask" ptype="IPV4_MASK" tr-mapped-to="SubnetMask" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}</ACTION></COMMAND><COMMAND name="show" no-config-gen="true" show_all_except="yes" escape_chars="&quot;"><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND></VIEW><VIEW name="vpn-ipsec-credentials-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="scope"><PARAM name="side" tr-mapped-to="Side" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="id"><PARAM name="type" tr-mapped-to="IdentifierType" ptype="FROM_CM" /><PARAM name="value" tr-mapped-to="IdentifierValue" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}</ACTION></COMMAND><COMMAND name="psk"><PARAM name="key" tr-mapped-to="PSK" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="order"><PARAM name="position" tr-mapped-to="Order" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="exclusive"><PARAM name="addr" ptype="IPV4_ADDRESS" tr-mapped-to="RestrictedAddress" /><PARAM name="mask" ptype="IPV4_MASK" optional="true" tr-mapped-to="RestrictedSubnet" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no exclusive" tr-mapped-to="RestrictedAddress" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.RestrictedAddress=	${obj}.RestrictedSubnet=</ACTION></COMMAND><COMMAND name="show" no-config-gen="true" show_all_except="yes" escape_chars="&quot;"><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND></VIEW><VIEW name="vpn-ipsec-template-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="security-namespace" help="true" completion="true" /><COMMAND name="roadWarrior" view="vpn-ipsec-rwar-view" viewid="obj=${obj}.X_ADB_RoadWarrior;prompt=${prompt}:${VAR_GET_ALIAS}-roadWarriors" tr-obj=".X_ADB_RoadWarrior" tr-config-phony="true">
    </COMMAND><COMMAND name="show" no-config-gen="true" show_all_except="yes" escape_chars="&quot;"><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND></VIEW><VIEW name="vpn-l2tp-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="add" /><COMMAND name="add client" tr-obj=".Client.L2TP" config-gen-prio="0"><PARAM name="alias" optional="true" ptype="FROM_CM" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">Device.X_ADB_VPN.Client.L2TP Alias=${alias}</ACTION></COMMAND><COMMAND name="client" view="vpn-l2tp-client-view" viewid="obj=${alias};prompt=${prompt}-client" tr-obj=".Client.L2TP" config-gen-prio="1"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.X_ADB_VPN.Client.L2TP.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del" /><COMMAND name="del client" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.X_ADB_VPN.Client.L2TP.Alias" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="add server" tr-obj=".Server.L2TP" config-gen-prio="0"><PARAM name="alias" optional="true" ptype="FROM_CM" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">Device.X_ADB_VPN.Server.L2TP Alias=${alias}</ACTION></COMMAND><COMMAND name="server" view="vpn-l2tp-pptp-server-view" viewid="obj=${alias};prompt=${prompt}-server" tr-obj=".Server.L2TP" config-gen-prio="1"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.X_ADB_VPN.Server.L2TP.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del server" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.X_ADB_VPN.Server.L2TP.Alias" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND></VIEW><VIEW name="vpn-l2tp-client-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><NAMESPACE ref="vpn-client-server-namespace" help="true" completion="true" /><NAMESPACE ref="vpn-common-l2tp-pptp-client-view" help="true" completion="true" /><COMMAND name="idleDisconnectTime"><PARAM name="time" tr-mapped-to="IdleDisconnectTime" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="defaultRoute"><PARAM name="mask" tr-mapped-to="SubnetMask" ptype="IPV4_MASK" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.SubnetMask=${__eval PAR_ATTR_1_name}	${obj}.DefaultRoute=true</ACTION></COMMAND><COMMAND name="no defaultRoute" tr-mapped-to="SubnetMask" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.SubnetMask=	${obj}.DefaultRoute=false</ACTION></COMMAND></VIEW><VIEW name="vpn-client-server-namespace" depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="ip-config-view" help="true" completion="true" /><COMMAND name="authProtocol" /><COMMAND name="authProtocol add" no-config-gen="true"><PARAM name="proto" tr-mapped-to="AuthenticationProtocol" ptype="FROM_CM" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="authProtocol del" no-config-gen="true"><PARAM name="proto" tr-mapped-to="AuthenticationProtocol" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.AuthenticationProtocol" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="authProtocol set"><PARAM name="proto list" ptype="FROM_CM" tr-mapped-to="AuthenticationProtocol" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="authProtocol show" no-config-gen="true" tr-mapped-to="AuthenticationProtocol"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="authProtocol clear" tr-mapped-to="AuthenticationProtocol" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interface"><PARAM name="ifname" tr-mapped-to="%(Interface).Alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Interface=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="ip-config-view" depth="dynamic"><VAR name="IPINTERFACE_OBJ" help="IPINTERFACE_OBJ" dynamic="true"><ACTION>
        ip_iface=`. /etc/clish/ip-address.sh ip_interface_get_or_create "" "${obj}" "${alias_ip}"`
        echo -n "$ip_iface"
      </ACTION></VAR><VAR name="VAR_IP_EXISTS" dynamic="true"><ACTION>
          . /etc/clish/clish-commons.sh
          res=$(ll_obj_to_ip_obj ${obj})
          [ -n "$res" ] &amp;&amp; echo "READ" || echo "WRITE"
        </ACTION></VAR><COMMAND name="ip" viewid="prompt=${prompt}:${VAR_GET_ALIAS}-ip;pobj=${obj};obj=${IPINTERFACE_OBJ};ethlink_management=${ethlink_management}" view="ipinterface-config-view" visible="case &quot;${obj}&quot; in Device.ATM.Link* ) cmclient -v type GETV ${obj}.LinkType; [ xIPoA = x$type ] ;; esac" tr-only-if-visible="true" tr-obj="Device.IP.Interface" tr-connection="#ip_upperlayer" required_permissions="evaluate ${VAR_IP_EXISTS}"><PARAM name="alias_ip" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION>
        if [ -z "${IPINTERFACE_OBJ}" ]; then echo "Error during getting ip interface"; exit 1; fi
      </ACTION></COMMAND><COMMAND name="ipDetach" no-config-gen="true" visible="case &quot;${obj}&quot; in Device.ATM.Link* ) cmclient -v type GETV ${obj}.LinkType; [ xIPoA = x$type ] ;; esac"><ACTION>
        . /etc/clish/clish-commons.sh
        # Remove from IP or from ethlink (if integrated) - don't touch ppp, vlan or ethlink (if standalone)

        if [ "${ethlink_management}" = "integrated" ]; then
            # this can't be executed from ethlink, vlan nor ppp: only from bridge, ethlan, or ssid
            remove_entry_from_specific_owner "${obj}" "Device.Ethernet.Link"
        else
            remove_entry_from_specific_owner "${obj}" "Device.IP.Interface"
        fi
        </ACTION></COMMAND></VIEW><VIEW name="ipinterface-config-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><VAR name="ROUNTER_ADV_OBJ" help="DHCPV6_CLIENT_OBJ" dynamic="true"><ACTION>
                cmclient -v ra_obj GETO Device.RouterAdvertisement.InterfaceSetting.[Interface=${obj}]
                if [ -z "$ra_obj" ]; then
                    cmclient -v ra_obj_idx ADD Device.RouterAdvertisement.InterfaceSetting.[Interface=${obj}]
                    [ -n "$ra_obj_idx" ] &amp;&amp; ra_obj="Device.RouterAdvertisement.InterfaceSetting.$ra_obj_idx"
                fi
                echo -n "$ra_obj"
            </ACTION></VAR><COMMAND name="ipv6Ra" visible="cmclient -v isWan GETV ${obj}.X_ADB_Upstream; [ &quot;$isWan&quot; = 'false' ]" view="ipv6ra-config-view" viewid="pobj=${obj};obj=${ROUNTER_ADV_OBJ};prompt=${prompt}:${VAR_GET_ALIAS}-ipv6Ra" tr-obj="Device.RouterAdvertisement.InterfaceSetting" tr-connection="Interface" tr-config-phony="true"><ACTION>
                 if [ -z "${ROUNTER_ADV_OBJ}" ]; then echo "Error during getting ra settings";exit 1; fi
            </ACTION></COMMAND><COMMAND name="del ipv6Ra" no-config-gen="true"><ACTION>
                cmclient -v ra_obj GETO "Device.RouterAdvertisement.InterfaceSetting.[Interface=${obj}]"
                if [ -n "$ra_obj" ]; then . /etc/clish/quick_cm.sh del "$ra_obj"; fi
            </ACTION></COMMAND><COMMAND name="dhcpv4Server" view="dhcp-server-config" viewid="root=Device.DHCPv4.Server.Pool;obj=${obj};ipObj=${obj};prompt=${prompt}:${VAR_GET_ALIAS}-dhcpv4Server" config-gen-prio="1" aux_availability_condition="${obj}.[X_ADB_Upstream=false]" tr-obj=".[X_ADB_Upstream=false]" tr-config-phony="true" /><NAMESPACE ref="ip6address-config-view" help="true" completion="true" /><COMMAND name="dhcpv6Server" view="dhcp6v-server-view" aux_availability_condition="${obj}.[X_ADB_Upstream=false]" tr-obj=".[X_ADB_Upstream=false]" viewid="obj=${obj};ipObj=${obj};prompt=${prompt}:${VAR_GET_ALIAS}-dhcpv6Server" tr-config-phony="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-permissions-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-stats-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="reset" no-config-gen="true" tr-mapped-to="Reset" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><VAR name="TR_GET_MTU" dynamic="true"><ACTION>
            cmclient -v automtu GETV "${obj}.X_ADB_AutoMTU"
            if [ "${automtu}" = "true" ]; then
                echo -n "auto"
            else
                cmclient -v val GETV "${obj}.MaxMTUSize"
                echo -n "$val"
            fi
        </ACTION></VAR><COMMAND name="mtu"><PARAM name="mtu" ptype="MTU" tr-var-action="TR_GET_MTU" tr-mapped-to="MaxMTUSize" /><ACTION>
      if [ "${mtu}" = "auto" ]; then
          setm="${obj}.X_ADB_AutoMTU=true"
      else
          setm="${obj}.X_ADB_AutoMTU=false	${obj}.MaxMTUSize=${mtu}"
      fi
      . /etc/clish/quick_cm.sh setm "$setm"
      </ACTION></COMMAND><COMMAND name="ipv6"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="IPv6Enable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ula"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="ULAEnable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="defaultRoute"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_DefaultRoute" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="dnsOverride"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_DNSOverrideAllowed" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="proxyArp"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_ProxyArp" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><NAMESPACE ref="dhcp-client-view" help="true" completion="true" /><VAR name="TR_GET_ADDRESS_WITH_PREFIX" dynamic="true"><ACTION>
            addr=`/etc/clish/ip-address.sh obj_ipv4_address_print_addr ${obj} IPAddress SubnetMask`
            [ -z "$addr" ] &amp;&amp; echo -n "\"\"" || echo -n "$addr"
        </ACTION></VAR><VAR name="TR_GET_NOT_EMPTY_ADDRESS_WITH_PREFIX" dynamic="true"><ACTION>
            addr=`/etc/clish/ip-address.sh obj_ipv4_address_print_addr ${obj} IPAddress SubnetMask`
            echo -n "$addr"
        </ACTION></VAR><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add ipv4StaticAddr" tr-obj=".IPv4Address.[AddressingType=Static]"><PARAM name="addr" optional="true" ptype="IPV4_ADDRESS_WITH_PREFIX" tr-var-action="TR_GET_ADDRESS_WITH_PREFIX" tr-mapped-to="IPAddress" /><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION>
      . /etc/clish/ip-address.sh ipv4_address_add "${obj}" "${addr}" "${alias}"
      </ACTION></COMMAND><VAR name="IPV4STATIC_ADDR_OBJ" help="IPV4STATIC_ADDR_OBJ" dynamic="true"><ACTION>
        ipv4_obj=`. /etc/clish/ip-address.sh ipv4_get_obj_address_from_alias_or_addr "${obj}.IPv4Address.[AddressingType=Static]" "${name}"`
        echo -n "$ipv4_obj"
      </ACTION></VAR><COMMAND name="ipv4StaticAddr" viewid="pobj=${obj};obj=${IPV4STATIC_ADDR_OBJ};alias=${name};prompt=${prompt}:${VAR_GET_ALIAS}-ipv4" view="ipaddress-config-view" tr-obj=".IPv4Address.[AddressingType=Static]"><PARAM name="name" ptype="COMPLETE" ptype_args="iface_get_alias_or_ipaddr_with_prefix ${obj}.IPv4Address.[AddressingType=Static]" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del ipv4StaticAddr" no-config-gen="true"><PARAM name="name" ptype="COMPLETE" ptype_args="iface_get_alias_or_ipaddr_with_prefix ${obj}.IPv4Address.[AddressingType=Static]" /><ACTION>
      OBJ=${IPV4STATIC_ADDR_OBJ}
      [ -n "$OBJ" ] &amp;&amp; cmclient -v res DEL "$OBJ"
      </ACTION></COMMAND><COMMAND name="add dns" tr-obj="Device.DNS.Client.Server.[Type=Static]" tr-connection="Interface"><PARAM name="addr" ptype="IPV4_ADDRESS" tr-mapped-to="DNSServer" /><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_alias_and_key@cmplugin">${CMD_ATTR_tr-obj}.[Interface=${obj}] ${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	Type=Static</ACTION></COMMAND><COMMAND name="dns" viewid="obj=${name};prompt=${prompt}:${VAR_GET_ALIAS}-dns" view="dns-config-view" tr-obj="Device.DNS.Client.Server.[Type=Static]" tr-connection="Interface"><PARAM name="name" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.DNS.Client.Server.[Interface=${obj}].[Type=Static].Alias Device.DNS.Client.Server.[Interface=${obj}].[Type=Static].DNSServer" tr-mapped-to="DNSServer" /></COMMAND><COMMAND name="del dns" no-config-gen="true"><PARAM name="name" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.DNS.Client.Server.[Interface=${obj}].[Type=Static].Alias Device.DNS.Client.Server.[Interface=${obj}].[Type=Static].DNSServer" /><ACTION builtin="cmwrap@cmplugin">DEL ${name}</ACTION></COMMAND><COMMAND name="connectionType" /><COMMAND name="connectionType set"><PARAM name="connTypes" ptype="STRING" tr-mapped-to="X_ADB_ConnectionType" /><ACTION builtin="cm_list_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="connectionType add" no-config-gen="true"><PARAM name="connType" ptype="FROM_CM" tr-mapped-to="X_ADB_ConnectionType" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="connectionType del" no-config-gen="true"><PARAM name="connTypes" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.X_ADB_ConnectionType" tr-mapped-to="X_ADB_ConnectionType" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="connectionType clear" tr-mapped-to="X_ADB_ConnectionType" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=</ACTION></COMMAND><COMMAND name="connectionType show" no-config-gen="true" tr-mapped-to="X_ADB_ConnectionType"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><NAMESPACE ref="dhcp6-client-view" help="true" completion="true" /><COMMAND name="dhcpRelay" view="dhcp-relay-config" viewid="root=Device.DHCPv4.Relay.Forwarding;obj=${obj};ipObj=${obj};prompt=${prompt}:${VAR_GET_ALIAS}-dhcpRelay" config-gen-prio="0" tr-config-phony="true" /></VIEW><VIEW name="ip6address-config-view" depth="dynamic"><COMMAND name="add" /><COMMAND name="del" /><VAR name="GET_IPV6_PREFIX_LEN" dynamic="true"><ACTION>
      cmclient -v prefix_obj GETV ${obj}.Prefix
      cmclient -v prefix GETV ${prefix_obj}.Prefix
      if [ -n "$prefix" ]; then
        echo -n "${prefix#*/}"
      fi
      </ACTION></VAR><VAR name="IPV6STATIC_ADDR_OBJ" dynamic="true"><ACTION>
        ipv6_obj=`. /etc/clish/ip-address.sh ipv6_get_obj_address_from_alias_or_addrprfxlen "${obj}.IPv6Address.[Origin=Static]" "${alias_or_addr/prefix_len}"`
        echo -n "$ipv6_obj"
      </ACTION></VAR><COMMAND name="del ipv6StaticAddr" no-config-gen="true"><PARAM name="alias_or_addr/prefix_len" ptype="COMPLETE" ptype_args="iface_get_alias_or_ip6addr_with_prefixlen ${obj}.IPv6Address.[Origin=Static]" /><ACTION>
      OBJ=${IPV6STATIC_ADDR_OBJ}
      [ -n "$OBJ" ] &amp;&amp; cmclient DEL "$OBJ" &amp;> /dev/null || exit 1
      </ACTION></COMMAND><COMMAND name="add ipv6StaticAddr" tr-obj=".IPv6Address.[Origin=Static]"><PARAM name="address" ptype="IPV6_ADDRESS" tr-mapped-to="IPAddress" /><PARAM name="len" ptype="UINT_1_128" tr-mapped-to="%(Prefix).Prefix" tr-var-action="GET_IPV6_PREFIX_LEN" /><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION>. /etc/clish/ip-address.sh "ipv6_address_add" "${obj}" "${address}/${len}" "${alias}"</ACTION></COMMAND><COMMAND name="ipv6StaticAddr" view="ipv-six-address-config-view" viewid="pobj=${obj};obj=${IPV6STATIC_ADDR_OBJ};prompt=${prompt}:${VAR_GET_ALIAS}-ipv6addr" tr-obj=".IPv6Address.[Origin=Static]"><PARAM name="alias_or_addr/prefix_len" ptype="COMPLETE" ptype_args="iface_get_alias_or_ip6addr_with_prefixlen ${obj}.IPv6Address.[Origin=Static]" tr-mapped-to="IPAddress" /></COMMAND><VAR name="IPV6_NEIGHBOR_DISCOVERY" help="IPV6_NEIGHBOR_DISCOVERY" dynamic="true"><ACTION builtin="cmwrap_add_with_alias_and_key@cmplugin">Device.NeighborDiscovery.InterfaceSetting Interface=${obj}</ACTION></VAR><COMMAND name="ipv6Nd" view="neighbor-discovery-iface-view" viewid="obj=${IPV6_NEIGHBOR_DISCOVERY};prompt=${prompt}:${VAR_GET_ALIAS}-ipv6Nd" tr-obj="Device.NeighborDiscovery.InterfaceSetting" tr-connection="Interface" tr-config-phony="true"><ACTION builtin="cmwrap@cmplugin">ADD Device.NeighborDiscovery.InterfaceSetting.[Interface=${obj}]</ACTION></COMMAND><COMMAND name="del ipv6Nd" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">DEL Device.NeighborDiscovery.InterfaceSetting.[Interface=${obj}]</ACTION></COMMAND><VAR name="IPV6STATIC_PREFIX_OBJ" help="IPV6STATIC_PREFIX_OBJ" dynamic="true"><ACTION>
        ipv6_obj=`. /etc/clish/ip-address.sh ipv6_get_obj_prefix_from_alias_or_addr "${obj}.IPv6Prefix.[Origin=Static]" "${alias_or_addr}"`
        echo -n "$ipv6_obj"
      </ACTION></VAR><COMMAND name="add ipv6Prefix" tr-obj=".IPv6Prefix.[Origin=Static]"><PARAM name="prefix" ptype="IPV6_ADDRESS_WITH_PREFIX" allow-empty="true" tr-mapped-to="Prefix" /><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION>
        . /etc/clish/ip-address.sh "add_prefix" "${pobj}" "${prefix}" "${alias}"
      </ACTION></COMMAND><COMMAND name="del ipv6Prefix" no-config-gen="true" tr-obj=".IPv6Prefix.[Origin=Static]"><PARAM name="addr" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.Alias ${obj}${CMD_ATTR_tr-obj}.Prefix" /><ACTION>. /etc/clish/ip-address.sh "delete_prefix" "${pobj}" "${addr}"</ACTION></COMMAND><COMMAND name="ipv6Prefix" view="ipv-six-prefix-config-view" viewid="pobj=${obj};obj=${alias_or_prefix};prompt=${prompt}:${VAR_GET_ALIAS}-ipv6pref" tr-obj=".IPv6Prefix.[Origin=Static]"><PARAM name="alias_or_prefix" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.Alias ${obj}${CMD_ATTR_tr-obj}.Prefix" tr-mapped-to="Alias" /></COMMAND></VIEW><VIEW name="ipv-six-address-config-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><COMMAND name="show"><ACTION>
      . /etc/clish/ipv6.sh show_addr "${obj}"</ACTION></COMMAND><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><COMMAND name="address" no-config-gen="true"><PARAM name="address" ptype="FROM_CM" tr-mapped-to="IPAddress" /><PARAM name="len" ptype="UINT_1_128" /><ACTION>
      . /etc/clish/ip-address.sh ipv6_address_set_addr "${pobj}" "${obj}" "${address}/${len}"
      </ACTION></COMMAND><COMMAND name="no" /><COMMAND name="lifetime" /><COMMAND name="anycast" tr-mapped-to="Anycast" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no anycast" tr-mapped-to="Anycast" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="lifetime valid"><PARAM name="time" ptype="ISO8601_DATE" tr-mapped-to="ValidLifetime" /><ACTION>. /etc/clish/ipv6.sh set_time "${obj}" ValidLifetime "${time}"</ACTION></COMMAND><COMMAND name="lifetime preferred"><PARAM name="time" ptype="ISO8601_DATE" tr-mapped-to="PreferredLifetime" /><ACTION>. /etc/clish/ipv6.sh set_time "${obj}" PreferredLifetime "${time}"</ACTION></COMMAND></VIEW><VIEW name="neighbor-discovery-iface-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="no" /><COMMAND name="routerSolicit"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="RSEnable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="routerSolicitInt"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="RtrSolicitationInterval" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="maxRouterSolicit"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="MaxRtrSolicitations" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" no-config-gen="true" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Interface">
          cmclient GETV "%\(${obj}.Interface\).Alias"
        </DISPENTRY><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND></VIEW><VIEW name="ipv-six-prefix-config-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><COMMAND name="show"><ACTION>
      . /etc/clish/ipv6.sh show_prefix "${obj}"
      </ACTION></COMMAND><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><COMMAND name="no" /><COMMAND name="autonomous" tr-mapped-to="Autonomous" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no autonomous" tr-mapped-to="Autonomous" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="lifetime" /><COMMAND name="lifetime valid"><PARAM name="time" ptype="ISO8601_DATE" tr-mapped-to="ValidLifetime" /><ACTION>. /etc/clish/ipv6.sh set_time "${obj}" ValidLifetime "${time}"</ACTION></COMMAND><COMMAND name="lifetime preferred"><PARAM name="time" ptype="ISO8601_DATE" tr-mapped-to="PreferredLifetime" /><ACTION>. /etc/clish/ipv6.sh set_time "${obj}" PreferredLifetime "${time}"</ACTION></COMMAND><COMMAND name="on-link" tr-mapped-to="OnLink" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no on-link" tr-mapped-to="OnLink" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="prefix"><PARAM name="prefix" ptype="FROM_CM" tr-mapped-to="Prefix" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="generic-obj-stats-view" depth="dynamic"><COMMAND name="stats" /><COMMAND name="stats reset" no-config-gen="true" tr-mapped-to="Stats.X_ADB_Reset" aux_availability_condition="${obj}.Stats.[X_ADB_Reset=false]"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=true</ACTION></COMMAND><COMMAND name="stats show" no-config-gen="true"><ACTION builtin="cmshow@cmplugin">${obj}.Stats</ACTION></COMMAND></VIEW><VIEW name="dhcp-client-view" depth="dynamic"><VAR name="DHCPV4_CLIENT_OBJ" help="DHCPV4_CLIENT_OBJ" dynamic="true"><ACTION builtin="cmwrap_add_with_alias_and_key@cmplugin">Device.DHCPv4.Client Interface=${obj}</ACTION></VAR><COMMAND name="dhcpv4Client" aux_availability_condition="${obj}.[IPv4Enable=true].[X_ADB_Upstream=true].[LowerLayers&gt;Device.Ethernet]|%(${obj}.[IPv4Enable=true].[X_ADB_Upstream=true].X_ADB_ActiveLowerLayer).[LowerLayers&gt;X_ADB_MobileModem]" view="dhcp-client-config" viewid="obj=${DHCPV4_CLIENT_OBJ};prompt=${prompt}:${VAR_GET_ALIAS}-dhcpv4Client" tr-obj="Device.DHCPv4.Client" tr-connection="Interface" tr-mapped-to="Alias" required_permissions="write_read_if_exists Device.DHCPv4.Client.[Interface=${obj}]"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION>
        if [ -z "${DHCPV4_CLIENT_OBJ}" ]; then echo "Error during getting dhcpv4 settings";exit 1; fi
      </ACTION></COMMAND><COMMAND name="del dhcpv4Client" no-config-gen="true" aux_availability_condition="${obj}.[IPv4Enable=true].[X_ADB_Upstream=true].[LowerLayers&gt;Device.Ethernet]"><ACTION>
        cmclient -v dhcp_obj GETO "Device.DHCPv4.Client.[Interface=${obj}]"
        if [ -n "$dhcp_obj" ]; then . /etc/clish/quick_cm.sh del "$dhcp_obj"; fi
      </ACTION></COMMAND></VIEW><VIEW name="dhcp-client-config" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="renew" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Renew=true</ACTION></COMMAND><COMMAND name="release" no-config-gen="true" tr-mapped-to="X_ADB_Release"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=true</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="passThrough"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="PassthroughEnable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="opt121Routes"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="%(Interface).X_ADB_DHCPOpt121Enable" /><ACTION builtin="cmwrap@cmplugin">SETM %(${obj}.Interface).X_ADB_DHCPOpt121Enable=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no passThrough" /><COMMAND name="no passThrough pool" tr-mapped-to="PassthroughDHCPPool" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="passThrough pool"><PARAM name="alias_pool" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.DHCPv4.Server.Pool.Alias" tr-mapped-to="%(PassthroughDHCPPool).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.PassthroughDHCPPool=${alias_pool}</ACTION></COMMAND><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add option" /><COMMAND name="del option" /><COMMAND name="option" /><COMMAND name="add option requested" tr-obj=".ReqOption"><PARAM name="tag" ptype="FROM_CM" tr-mapped-to="Tag" /><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_alias_and_key@cmplugin">${obj}${CMD_ATTR_tr-obj} Tag=${tag}</ACTION></COMMAND><COMMAND name="del option requested" no-config-gen="true" tr-obj=".ReqOption"><PARAM name="val" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.Tag ${obj}${CMD_ATTR_tr-obj}.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${val}</ACTION></COMMAND><COMMAND name="option requested" view="dhcp-option-req-config" viewid="pobj=${obj};obj=${val};prompt=${prompt}-reqOpt" tr-obj=".ReqOption"><PARAM name="val" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.Tag ${obj}${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Tag" /></COMMAND><COMMAND name="add option sent" tr-obj=".SentOption"><PARAM name="tag" ptype="FROM_CM" tr-mapped-to="Tag" /><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_alias_and_key@cmplugin">${obj}${CMD_ATTR_tr-obj} Tag=${tag}</ACTION></COMMAND><COMMAND name="del option sent" tr-obj=".SentOption" no-config-gen="true"><PARAM name="val" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.Tag ${obj}${CMD_ATTR_tr-obj}.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${val}</ACTION></COMMAND><COMMAND name="option sent" view="dhcp-option-sent-config" viewid="pobj=${obj};obj=${val};prompt=${prompt}-sentOpt" tr-obj=".SentOption"><PARAM name="val" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.Tag ${obj}${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Tag" /></COMMAND></VIEW><VIEW name="dhcp-option-req-config" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="no" /><COMMAND name="order"><PARAM name="num" ptype="FROM_CM" tr-mapped-to="Order" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tag"><PARAM name="val" ptype="FROM_CM" tr-mapped-to="Tag" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="passThrough"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_PassthroughEnable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no passThrough" /><COMMAND name="no passThrough pool" tr-mapped-to="X_ADB_PassthroughDHCPServerPool" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="passThrough pool"><PARAM name="alias_name" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.DHCPv4.Server.Pool.Alias" tr-mapped-to="%(X_ADB_PassthroughDHCPServerPool).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_PassthroughDHCPServerPool=${alias_name}</ACTION></COMMAND></VIEW><VIEW name="dhcp-option-sent-config" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="dhcp-option-common-sent-option-view" help="true" completion="true" /><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add suboption" tr-obj=".X_ADB_SentSubOption"><PARAM name="tag" ptype="FROM_CM" tr-mapped-to="Tag" /><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_alias_and_key@cmplugin">${obj}${CMD_ATTR_tr-obj} Tag=${tag}</ACTION></COMMAND><COMMAND name="del suboption" no-config-gen="true" tr-obj=".X_ADB_SentSubOption"><PARAM name="alias_opt" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.Tag ${obj}${CMD_ATTR_tr-obj}.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias_opt}</ACTION></COMMAND><COMMAND name="suboption" view="dhcp-option-common-sent-option-view" viewid="prompt=${prompt}:${VAR_GET_ALIAS}-subOpt;obj=${alias_subopt}" tr-obj=".X_ADB_SentSubOption"><PARAM name="alias_subopt" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.Tag ${obj}${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="show"><ACTION>
      . /etc/clish/dhcp_server_view.sh "${obj}" dhcp_client_option_sent_show
      echo "Suboptions:"
      cmclient -v subopts GETO "${obj}.X_ADB_SentSubOption"
      for sopt in $subopts; do
          . /etc/clish/dhcp_server_view.sh "$sopt" dhcp_client_option_sent_show
      done
      </ACTION></COMMAND></VIEW><VIEW name="dhcp-option-common-sent-option-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><COMMAND name="tag"><PARAM name="val" ptype="FROM_CM" tr-mapped-to="Tag" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="value" /><COMMAND name="value Empty" tr-obj=".[X_ADB_Type=Empty]" tr-config-phony="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=Empty	${obj}.Value=</ACTION></COMMAND><COMMAND name="value Hex" tr-obj=".[X_ADB_Type=Hex]"><PARAM name="val" ptype="HEX" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=Hex	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value Boolean" tr-obj=".[X_ADB_Type=Boolean]"><PARAM name="val" ptype="BOOLEAN" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=Boolean	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value String" tr-obj=".[X_ADB_Type=String]"><PARAM name="val" ptype="STRING" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=String	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value IPAddress" tr-obj=".[X_ADB_Type=IPAddress]"><PARAM name="val" ptype="IPV4_ADDRESS" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=IPAddress	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value IPAddressList" tr-obj=".[X_ADB_Type=IPAddressList]"><PARAM name="val" ptype="LIST_IPV4_ADDRESS" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=IPAddressList	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value U8" tr-obj=".[X_ADB_Type=U8]"><PARAM name="val" ptype="TYPE_U8" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=U8	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value U16" tr-obj=".[X_ADB_Type=U16]"><PARAM name="val" ptype="TYPE_U16" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=U16	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value U32" tr-obj=".[X_ADB_Type=U32]"><PARAM name="val" ptype="TYPE_U32" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=U32	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value S8" tr-obj=".[X_ADB_Type=S8]"><PARAM name="val" ptype="TYPE_S8" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=S8	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value S16" tr-obj=".[X_ADB_Type=S16]"><PARAM name="val" ptype="TYPE_S16" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=S16	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value S32" tr-obj=".[X_ADB_Type=S32]"><PARAM name="val" ptype="TYPE_S32" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=S32	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value Reference" escape_chars="'`\" tr-obj=".[X_ADB_Type=Reference]"><PARAM name="val" ptype="STRING" tr-mapped-to="Value" /><ACTION>
            . /etc/clish/clish-commons.sh
            cmclient -v res GETMDT "${val}"
            echo "$res" > /dev/console
            if [ -z "$res" ]; then
                die "ERROR: Invalid reference!"
            else
                case "$res" in
                *"ERROR #"*) die "ERROR: Invalid reference!" ;;
                esac
                . /etc/clish/quick_cm.sh setm "${obj}.X_ADB_Type=Reference	${obj}.Value=${val}"
            fi
      </ACTION></COMMAND><COMMAND name="show"><ACTION>. /etc/clish/dhcp_server_view.sh "${obj}" dhcp_client_option_sent_show</ACTION></COMMAND></VIEW><VIEW name="dhcp6-client-view" depth="dynamic"><VAR name="DHCPV6_CLIENT_OBJ" help="DHCPV6_CLIENT_OBJ" dynamic="true"><ACTION builtin="cmwrap_add_with_alias_and_key@cmplugin">Device.DHCPv6.Client Interface=${obj}</ACTION></VAR><COMMAND name="dhcpv6Client" aux_availability_condition="${obj}.[IPv6Enable=true].[X_ADB_Upstream=true].[LowerLayers&gt;Device.Ethernet]" view="dhcp6-client-config" viewid="obj=${DHCPV6_CLIENT_OBJ};prompt=${prompt}:${VAR_GET_ALIAS}-dhcpv6Client" tr-obj="Device.DHCPv6.Client" tr-connection="Interface" tr-config-phony="true"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION>
        if [ -z "${DHCPV6_CLIENT_OBJ}" ]; then echo "Error during getting dhcpv6 settings";exit 1; fi
      </ACTION></COMMAND><COMMAND name="del" /><COMMAND name="del dhcpv6Client" no-config-gen="true" aux_availability_condition="${obj}.[IPv6Enable=true].[X_ADB_Upstream=true].[LowerLayers&gt;Device.Ethernet]"><ACTION>
        cmclient -v dhcp_obj GETO "Device.DHCPv6.Client.[Interface=${obj}]"
        if [ -n "$dhcp_obj" ]; then . /etc/clish/quick_cm.sh del "$dhcp_obj"; fi
      </ACTION></COMMAND></VIEW><VIEW name="dhcp6-client-config" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><COMMAND name="no" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="requestA"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="RequestAddresses" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="requestPD"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="RequestPrefixes" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="rapidCommit"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="RapidCommit" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="automode"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_AutoMode" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="renew" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Renew=true</ACTION></COMMAND><COMMAND name="lifetime" /><COMMAND name="lifetime preferred"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="SuggestedT1" tr-ifval-not-in="-1" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no lifetime preferred" tr-mapped-to="SuggestedT1" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="lifetime valid"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="SuggestedT2" tr-ifval-not-in="-1" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no lifetime" /><COMMAND name="no lifetime valid" tr-mapped-to="SuggestedT2" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="release" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_ForceRelease=true</ACTION></COMMAND><COMMAND name="option" /><COMMAND name="option requested" /><COMMAND name="option requested set"><PARAM name="options" ptype="FROM_CM" tr-mapped-to="RequestedOptions" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="option requested add" no-config-gen="true"><PARAM name="tag" ptype="FROM_CM" tr-mapped-to="RequestedOptions" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="option requested del" no-config-gen="true"><PARAM name="tag" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.RequestedOptions" tr-mapped-to="RequestedOptions" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="option requested clear" tr-mapped-to="RequestedOptions" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add option" /><COMMAND name="del option" /><COMMAND name="add option sent" tr-obj=".SentOption"><PARAM name="tag" ptype="FROM_CM" tr-mapped-to="Tag" /><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_alias_and_key@cmplugin">${obj}${CMD_ATTR_tr-obj} ${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="del option sent" no-config-gen="true"><PARAM name="val" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}.SentOption.Alias  ${obj}.SentOption.Tag" /><ACTION builtin="cmwrap@cmplugin">DEL ${val}</ACTION></COMMAND><COMMAND name="option sent" view="dhcp6-option-sent-config" viewid="pobj=${obj};obj=${VAR_GET_OBJ_FROM_FIELD};field=${VAR_GET_NAME_FROM_FIELD};prompt=${prompt}:${VAR_GET_ALIAS}-sentOpt" tr-obj=".SentOption"><PARAM name="val" ptype="COMPLETE_NATIVE" ptype_args="getFieldByProp ${obj}.SentOption.Alias ${obj}.SentOption.Tag" tr-mapped-to="Alias" /></COMMAND><COMMAND name="servers" /><COMMAND name="servers show" show_all_except="yes" no-config-gen="true"><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}.Server" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND><COMMAND name="optionReceived" /><COMMAND name="optionReceived show" show_all_except="yes" no-config-gen="true"><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}.ReceivedOption" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND></VIEW><VIEW name="dhcp6-option-sent-config" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_CUST_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="tag" visible="[ '${field}' = 'Alias' ]"><PARAM name="val" ptype="FROM_CM" tr-mapped-to="Tag" /><ACTION>
        . /etc/clish/clish-commons.sh
        cmclient -v uniq GETO Device.DHCPv6.Client.SentOption.[Tag=${val}]
        [ -n "$uniq" -a "$uniq" != "${obj}" ] &amp;&amp; die "ERROR: Requested tag value: ${val} exists in another object"
        . /etc/clish/quick_cm.sh setm "${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}"
      </ACTION></COMMAND><COMMAND name="value" /><COMMAND name="value Empty" tr-obj=".[X_ADB_Type=Empty]" tr-config-phony="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=Empty	${obj}.Value=</ACTION></COMMAND><COMMAND name="value Hex" tr-obj=".[X_ADB_Type=Hex]"><PARAM name="val" ptype="HEX" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=Hex	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value Boolean" tr-obj=".[X_ADB_Type=Boolean]"><PARAM name="val" ptype="BOOLEAN" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=Boolean	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value String" tr-obj=".[X_ADB_Type=String]"><PARAM name="val" ptype="STRING" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=String	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value IPv6Address" tr-obj=".[X_ADB_Type=IPv6Address]"><PARAM name="val" ptype="IPV6_ADDRESS" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=IPv6Address	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value IPv6AddressList" tr-obj=".[X_ADB_Type=IPv6AddressList]"><PARAM name="val" ptype="LIST_IPV6_ADDRESS" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=IPv6AddressList	${obj}.Value=${val}</ACTION></COMMAND></VIEW><VIEW name="ipv6ra-config-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="mFlag"><PARAM name="flag" ptype="NUMERIC_BOOLEAN" tr-mapped-to="AdvManagedFlag" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="oFlag"><PARAM name="flag" ptype="NUMERIC_BOOLEAN" tr-mapped-to="AdvOtherConfigFlag" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="hFlag"><PARAM name="flag" ptype="NUMERIC_BOOLEAN" tr-mapped-to="AdvMobileAgentFlag" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="pFlag"><PARAM name="flag" ptype="NUMERIC_BOOLEAN" tr-mapped-to="AdvNDProxyFlag" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="maxAdvInterval"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="MaxRtrAdvInterval" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="minAdvInterval"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="MinRtrAdvInterval" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="advLifetime"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="AdvDefaultLifetime" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="advReachableTime"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="AdvReachableTime" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="advRetransTimer"><PARAM name="timer" ptype="FROM_CM" tr-mapped-to="AdvRetransTimer" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="advMtu"><PARAM name="mtu" ptype="FROM_CM" tr-mapped-to="AdvLinkMTU" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="routerPreference"><PARAM name="preference" ptype="FROM_CM" tr-mapped-to="AdvPreferredRouterFlag" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="advHopLimit"><PARAM name="hop" ptype="FROM_CM" tr-mapped-to="AdvCurHopLimit" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="prefix" /><COMMAND name="prefix clear" tr-mapped-to="ManualPrefixes" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><VAR name="VAR_IPV6RA_PREF_REF_TO_ALIAS"><ACTION>
                . /etc/clish/clish-commons.sh &amp;&amp; show_deref_list_as_list ${obj}.ManualPrefixes Alias
            </ACTION></VAR><COMMAND name="prefix set"><PARAM name="prefix_aliases" ptype="STRING" tr-mapped-to="ManualPrefixes" tr-var-action="VAR_IPV6RA_PREF_REF_TO_ALIAS" /><ACTION builtin="cm_list_reference_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#${pobj}.IPv6Prefix.[StaticType!Inapplicable].[StaticType!PrefixDelegation].Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="prefix add" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${pobj}.IPv6Prefix.[StaticType!Inapplicable].[StaticType!PrefixDelegation].Alias" tr-mapped-to="ManualPrefixes" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="prefix del" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="listFromRefProp ${obj}.ManualPrefixes#Alias" tr-mapped-to="ManualPrefixes" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="prefix show" no-config-gen="true"><ACTION>
                . /etc/clish/clish-commons.sh &amp;&amp; show_deref_list_as_list ${obj}.ManualPrefixes Alias
                echo
            </ACTION></COMMAND><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add option" tr-obj=".Option" config-gen-prio="0"><PARAM name="tag" ptype="FROM_CM" tr-mapped-to="Tag" /><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_alias_and_key@cmplugin">${obj}${CMD_ATTR_tr-obj} ${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="del option" no-config-gen="true"><PARAM name="val" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}.Option.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${val}</ACTION></COMMAND><COMMAND name="option" view="ipv6ra-option-config" viewid="pobj=${obj};obj=${VAR_GET_OBJ_FROM_FIELD};field=${VAR_GET_NAME_FROM_FIELD};prompt=${prompt}-opt" tr-obj=".Option"><PARAM name="val" ptype="COMPLETE_NATIVE" ptype_args="getFieldByProp ${obj}.Option.Alias ${obj}.Option.Tag" tr-mapped-to="Alias" /></COMMAND></VIEW><VIEW name="ipv6ra-option-config" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_CUST_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><COMMAND name="tag" visible="[ '${field}' = 'Alias' ]"><PARAM name="val" ptype="FROM_CM" tr-mapped-to="Tag" /><ACTION>
                . /etc/clish/clish-commons.sh
                cmclient -v uniq GETO Device.RouterAdvertisement.InterfaceSetting.Option.[Tag=${val}]
                [ -n "$uniq" -a "$uniq" != "${obj}" ] &amp;&amp; die "ERROR: Requested tag value: ${val} exists in another object"
                . /etc/clish/quick_cm.sh setm "${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}"
            </ACTION></COMMAND><COMMAND name="value" /><COMMAND name="value Hex" tr-obj=".[X_ADB_Type=Hex]"><PARAM name="val" ptype="HEX" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=Hex	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value String" tr-obj=".[X_ADB_Type=String]"><PARAM name="val" ptype="STRING" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=String	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value IPv6Address" tr-obj=".[X_ADB_Type=IPv6Address]"><PARAM name="val" ptype="IPV6_ADDRESS" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=IPv6Address	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value IPv6AddressList" tr-obj=".[X_ADB_Type=IPv6AddressList]"><PARAM name="val" ptype="LIST_IPV6_ADDRESS" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=IPv6AddressList	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="lifetime"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="X_ADB_OptionLifetime" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="preference"><PARAM name="preference" ptype="FROM_CM" tr-mapped-to="X_ADB_OptionPreference" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="flush"><PARAM name="flush" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_OptionFlush" /><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="dhcp-server-config" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-dhcp-server-or-relay-config" help="true" completion="true" /><COMMAND name="add pool" tr-obj="Device.DHCPv4.Server.Pool" tr-connection="Interface" config-gen-prio="0"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${root} Alias=${alias}	Interface=${ipObj}</ACTION></COMMAND><COMMAND name="pool" view="dhcp-server-pool-config" viewid="pobj=${root};obj=${alias};prompt=${prompt}-pool" tr-connection="Interface" tr-obj="Device.DHCPv4.Server.Pool"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${root}.[Interface=${ipObj}].Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="show"><ACTION>
        . /etc/clish/dhcp_server_view.sh show_ip_dhcp_servers "${ipObj}"
      </ACTION></COMMAND></VIEW><VIEW name="generic-dhcp-server-or-relay-config" depth="dynamic"><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="del pool" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${root}.[Interface=${ipObj}].Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND></VIEW><VIEW name="dhcp-server-pool-config" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-dhcp-pool-config" help="true" completion="true" /><COMMAND name="clientRange"><PARAM name="start_ip" ptype="FROM_CM" tr-mapped-to="MinAddress" /><PARAM name="end_ip" ptype="FROM_CM" tr-mapped-to="MaxAddress" /><PARAM name="netmask" ptype="FROM_CM" tr-mapped-to="SubnetMask" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${start_ip}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${end_ip}	${obj}.${PAR_ATTR_3_tr-mapped-to}=${netmask}</ACTION></COMMAND><COMMAND name="reservedAddr" /><COMMAND name="reservedAddr set"><PARAM name="addr" ptype="FROM_CM" tr-mapped-to="ReservedAddresses" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="reservedAddr add" no-config-gen="true"><PARAM name="addr" ptype="FROM_CM" tr-mapped-to="ReservedAddresses" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="reservedAddr del" no-config-gen="true"><PARAM name="addr" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.ReservedAddresses" tr-mapped-to="ReservedAddresses" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="reservedAddr show" no-config-gen="true" tr-mapped-to="ReservedAddresses"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="reservedAddr clear" tr-mapped-to="ReservedAddresses" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="dnsServers" /><COMMAND name="dnsServers set"><PARAM name="addr" ptype="FROM_CM" tr-mapped-to="DNSServers" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="dnsServers add" no-config-gen="true"><PARAM name="addr" ptype="FROM_CM" tr-mapped-to="DNSServers" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="dnsServers del" no-config-gen="true"><PARAM name="addr" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.DNSServers" tr-mapped-to="DNSServers" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="dnsServers clear" tr-mapped-to="DNSServers" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="dnsServers show" no-config-gen="true" tr-mapped-to="DNSServers"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="domainName"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="DomainName" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no domainName" tr-mapped-to="DomainName" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="routerAddr" /><COMMAND name="routerAddr set"><PARAM name="addr" ptype="FROM_CM" tr-mapped-to="IPRouters" /><ACTION builtin="cm_list_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="routerAddr add" no-config-gen="true"><PARAM name="addr" ptype="FROM_CM" tr-mapped-to="IPRouters" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="routerAddr del" no-config-gen="true"><PARAM name="addr" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.IPRouters" tr-mapped-to="IPRouters" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="routerAddr clear" tr-mapped-to="IPRouters" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="routerAddr show" no-config-gen="true"><ACTION>. /etc/clish/dhcp_server_view.sh "${obj}" router_show</ACTION></COMMAND><COMMAND name="leaseInfinite" tr-mapped-to="LeaseTime" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><VAR name="TR_GET_LEASE_DAYS_HOURS_MIN_SEC"><ACTION>
            cmclient -v lease GETV "${obj}.LeaseTime"
            if [ -n "${lease}" -a "${lease}" != "-1" ]; then
              days="$(( lease / 86400 ))"
              hours_sec="$(( lease % 86400 ))"
              hours="$(( hours_sec / 3600 ))"
              min_sec="$(( hours_sec % 3600 ))"
              min="$(( min_sec / 60 ))"
              sec="$((lease % 60))"
              echo -n "$days $hours $min $sec"
            fi
        </ACTION></VAR><COMMAND name="lease"><PARAM name="days" ptype="UINT" tr-var-action="TR_GET_LEASE_DAYS_HOURS_MIN_SEC" /><PARAM name="hours" ptype="UINT" /><PARAM name="minutes" ptype="UINT" /><PARAM name="seconds" ptype="UINT" /><ACTION>
      lease=0
      [ -n "${days}" ] &amp;&amp; lease=$(($lease + ${days} * 86400))
      [ -n "${hours}" ] &amp;&amp; lease=$(($lease + ${hours} * 3600))
      [ -n "${minutes}" ] &amp;&amp; lease=$(($lease + ${minutes} * 60))
      [ -n "${seconds}" ] &amp;&amp; lease=$(($lease + ${seconds}))
      . /etc/clish/quick_cm.sh setm "${obj}.LeaseTime=$lease"
      </ACTION></COMMAND><COMMAND name="useStaticAddrAsFilter"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_UseStaticAddressAsFilter" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="noAutoConfig"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_AutoConfDisable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="probe" /><COMMAND name="probe method"><PARAM name="method" ptype="FROM_CM" tr-mapped-to="X_ADB_AddressProbe" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="probe delay"><PARAM name="delay" ptype="FROM_CM" tr-mapped-to="X_ADB_AddressProbeDelay" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add staticAddr" tr-obj=".StaticAddress"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${obj}${CMD_ATTR_tr-obj} Alias=${alias}</ACTION></COMMAND><COMMAND name="del staticAddr" no-config-gen="true"><PARAM name="alias_addr" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}.StaticAddress.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias_addr}</ACTION></COMMAND><COMMAND name="staticAddr" view="dhcp-server-static-config" viewid="prompt=${prompt}:${VAR_GET_ALIAS}-staticAddr;pobj=${obj};obj=${alias_addr}" tr-obj=".StaticAddress"><PARAM name="alias_addr" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}.StaticAddress.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="add option" tr-obj=".Option"><PARAM name="tag" ptype="FROM_CM" tr-mapped-to="Tag" /><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_alias_and_key@cmplugin">${obj}${CMD_ATTR_tr-obj} Tag=${tag}</ACTION></COMMAND><COMMAND name="del option" no-config-gen="true"><PARAM name="alias_opt" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}.Option.Tag ${obj}.Option.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias_opt}</ACTION></COMMAND><COMMAND name="option" view="dhcp-server-option-config" viewid="prompt=${prompt}:${VAR_GET_ALIAS}-opt;pobj=${obj};obj=${alias_opt}" tr-obj=".Option"><PARAM name="alias_opt" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}.Option.Tag ${obj}.Option.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="show"><ACTION>
        . /etc/clish/dhcp_server_view.sh "${obj}" dhcp_server_pool_show
      </ACTION></COMMAND><COMMAND name="client" /><COMMAND name="client show" show_all_except="yes" no-config-gen="true"><ACTION>
        cmclient -v clients GETO ${obj}.Client
        for c in $clients; do
          . /etc/clish/dhcp_server_view.sh "$c" dhcp_client_show
        done
      </ACTION></COMMAND></VIEW><VIEW name="generic-dhcp-pool-config" depth="dynamic"><COMMAND name="no" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><COMMAND name="order"><PARAM name="num" ptype="FROM_CM" tr-mapped-to="Order" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><VAR name="VAR_GET_VENDOR_CLASS_ID_EXCLUDE"><ACTION>
      EXC=" "
      cmclient -v res GETV ${obj}.VendorClassIDExclude
      [ "$res" = "true" ] &amp;&amp; EXC=exclude
      echo -n "$EXC"
      </ACTION></VAR><COMMAND name="vendorClassId"><PARAM name="id" ptype="FROM_CM" tr-mapped-to="VendorClassID" /><PARAM name="mode" ptype="FROM_CM" tr-mapped-to="VendorClassIDMode" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" default="false" tr-mapped-to="VendorClassIDExclude" tr-val="true" tr-var-action="VAR_GET_VENDOR_CLASS_ID_EXCLUDE" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}	${obj}.${PAR_ATTR_3_tr-mapped-to}=${__eval PAR_ATTR_3_name}</ACTION></COMMAND><COMMAND name="no vendorClassId" tr-val="" tr-mapped-to="VendorClassID"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.VendorClassID=	${obj}.VendorClassIDMode=Exact	${obj}.VendorClassIDExclude=false</ACTION></COMMAND><COMMAND name="no clientId" tr-val="" tr-mapped-to="ClientID"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.ClientID=	${obj}.ClientIDExclude=false</ACTION></COMMAND><VAR name="VAR_GET_CLIENT_ID_EXCLUDE"><ACTION>
      EXC=" "
      cmclient -v res GETV ${obj}.ClientIDExclude
      [ "$res" = "true" ] &amp;&amp; EXC=exclude
      echo -n "$EXC"
      </ACTION></VAR><COMMAND name="clientId"><PARAM name="id" ptype="HEX" tr-mapped-to="ClientID" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" default="false" tr-mapped-to="ClientIDExclude" tr-val="true" tr-var-action="VAR_GET_CLIENT_ID_EXCLUDE" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}</ACTION></COMMAND><COMMAND name="no chaddr" tr-mapped-to="ChaddrMask" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Chaddr=	${obj}.ChaddrMask=	${obj}.ChaddrExclude=false</ACTION></COMMAND><VAR name="VAR_GET_CHADDR_ID_EXCLUDE"><ACTION>
      EXC=" "
      cmclient -v res GETV ${obj}.ChaddrExclude
      [ "$res" = "true" ] &amp;&amp; EXC=exclude
      echo -n "$EXC"
      </ACTION></VAR><COMMAND name="chaddr"><PARAM name="mac" ptype="FROM_CM" tr-mapped-to="Chaddr" /><PARAM name="mac_mask" ptype="FROM_CM" tr-mapped-to="ChaddrMask" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" default="false" tr-mapped-to="ChaddrExclude" tr-val="true" tr-var-action="VAR_GET_CHADDR_ID_EXCLUDE" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}	${obj}.${PAR_ATTR_3_tr-mapped-to}=${__eval PAR_ATTR_3_name}</ACTION></COMMAND><COMMAND name="no userClassId" tr-val="" tr-mapped-to="UserClassID"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.UserClassID=	${obj}.UserClassIDExclude=false</ACTION></COMMAND><VAR name="VAR_GET_USER_CLASS_ID_EXCLUDE"><ACTION>
      EXC=" "
      cmclient -v res GETV ${obj}.UserClassIDExclude
      [ "$res" = "true" ] &amp;&amp; EXC=exclude
      echo -n "$EXC"
      </ACTION></VAR><COMMAND name="userClassId"><PARAM name="id" ptype="HEX" tr-mapped-to="UserClassID" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" default="false" tr-mapped-to="UserClassIDExclude" tr-val="true" tr-var-action="VAR_GET_USER_CLASS_ID_EXCLUDE" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}</ACTION></COMMAND></VIEW><VIEW name="dhcp-server-static-config" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="enable" tr-mapped-to="Enable" tr-val="true"><ACTION>
         cmclient -v poolmin GETV "${pobj}.MinAddress"
         cmclient -v poolmax GETV "${pobj}.MaxAddress"
         if [ -n "$poolmin" -a -n "$poolmax" ]; then
            . /etc/ah/helper_functions.sh
            cmclient -v static_ip GETV "${obj}.Yiaddr"
            cmclient -v mac_ip GETV "${obj}.Chaddr"
            if [ -n "$static_ip" -a -n "$mac_ip" ]; then
               if help_ipcmp_enh "$static_ip" ">=" "$poolmin" &amp;&amp;\
                        help_ipcmp_enh "$static_ip" "&lt;=" "$poolmax"; then
                  cmclient -v _ SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}
                  exit
               fi
            fi
            echo "Error : cannot enable static address because it is not properly configured"
         fi
      </ACTION></COMMAND><COMMAND name="disable" tr-mapped-to="Enable" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="chaddr"><PARAM name="mac" ptype="FROM_CM" tr-mapped-to="Chaddr" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ipaddr"><PARAM name="ip" ptype="FROM_CM" tr-mapped-to="Yiaddr" /><ACTION>
         cmclient -v poolmin GETV "${pobj}.MinAddress"
         cmclient -v poolmax GETV "${pobj}.MaxAddress"
         if [ -n "$poolmin" -a -n "$poolmax" ]; then
            . /etc/ah/helper_functions.sh
            if help_ipcmp_enh "${__eval PAR_ATTR_1_name}" ">=" "$poolmin" &amp;&amp;\
                   help_ipcmp_enh "${__eval PAR_ATTR_1_name}" "&lt;=" "$poolmax" ]; then
               cmclient -v _ SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}
               exit
            fi
            echo "Error : given static IPv4 address is not in DHCP pool range"
         fi
      </ACTION></COMMAND></VIEW><VIEW name="dhcp-server-option-config" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><COMMAND name="sendOnRequest"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_OnRequest" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tag"><PARAM name="val" ptype="FROM_CM" tr-mapped-to="Tag" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="value" /><COMMAND name="value Empty" tr-obj=".[X_ADB_Type=Empty]" tr-config-phony="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=Empty	${obj}.Value=</ACTION></COMMAND><COMMAND name="value Hex" tr-obj=".[X_ADB_Type=Hex]"><PARAM name="val" ptype="HEX" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=Hex	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value Boolean" tr-obj=".[X_ADB_Type=Boolean]"><PARAM name="val" ptype="BOOLEAN" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=Boolean	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value String" tr-obj=".[X_ADB_Type=String]"><PARAM name="val" ptype="STRING" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=String	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value IPAddress" tr-obj=".[X_ADB_Type=IPAddress]"><PARAM name="val" ptype="IPV4_ADDRESS" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=IPAddress	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value IPAddressList" tr-obj=".[X_ADB_Type=IPAddressList]"><PARAM name="val" ptype="LIST_IPV4_ADDRESS" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=IPAddressList	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value U8" tr-obj=".[X_ADB_Type=U8]"><PARAM name="val" ptype="TYPE_U8" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=U8	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value U16" tr-obj=".[X_ADB_Type=U16]"><PARAM name="val" ptype="TYPE_U16" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=U16	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value U32" tr-obj=".[X_ADB_Type=U32]"><PARAM name="val" ptype="TYPE_U32" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=U32	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value S8" tr-obj=".[X_ADB_Type=S8]"><PARAM name="val" ptype="TYPE_S8" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=S8	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value S16" tr-obj=".[X_ADB_Type=S16]"><PARAM name="val" ptype="TYPE_S16" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=S16	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value S32" tr-obj=".[X_ADB_Type=S32]"><PARAM name="val" ptype="TYPE_S32" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=S32	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="show" no-config-gen="true"><ACTION>
      . /etc/clish/dhcp_server_view.sh "${obj}" dhcp_server_option_show
      cmclient -v subopts GETO ${obj}.X_ADB_SubOption
      echo "Suboptions:"
      for sopt in $subopts; do
          . /etc/clish/clish-commons.sh &amp;&amp; show_object "$sopt" "" "yes"
      done
      </ACTION></COMMAND><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add suboption" tr-obj=".X_ADB_SubOption"><PARAM name="tag" ptype="FROM_CM" tr-mapped-to="Tag" /><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_alias_and_key@cmplugin">${obj}${CMD_ATTR_tr-obj} Tag=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="del suboption" no-config-gen="true" tr-obj=".X_ADB_SubOption"><PARAM name="alias_opt" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.Tag ${obj}${CMD_ATTR_tr-obj}.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias_opt}</ACTION></COMMAND><COMMAND name="suboption" view="dhcp-server-suboption-config" viewid="prompt=${prompt}:${VAR_GET_ALIAS}-subOpt;obj=${alias_subopt}" tr-obj=".X_ADB_SubOption"><PARAM name="alias_subopt" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.Tag ${obj}${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /></COMMAND></VIEW><VIEW name="dhcp-server-suboption-config" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="tag"><PARAM name="val" ptype="FROM_CM" tr-mapped-to="Tag" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="value" /><COMMAND name="value Hex" tr-obj=".[X_ADB_Type=Hex]"><PARAM name="val" ptype="HEX" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=Hex	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value String" tr-obj=".[X_ADB_Type=String]"><PARAM name="val" ptype="STRING" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=String	${obj}.Value=${val}</ACTION></COMMAND></VIEW><VIEW name="dhcp6v-server-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add pool" tr-obj="Device.DHCPv6.Server.Pool" tr-connection="Interface"><PARAM name="dhcp6-alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${CMD_ATTR_tr-obj} Alias=${dhcp6-alias}	Interface=${ipObj}</ACTION></COMMAND><COMMAND name="del pool" no-config-gen="true" tr-obj="Device.DHCPv6.Server.Pool"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${CMD_ATTR_tr-obj}.[Interface=${ipObj}].Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="pool" view="dhcp6v-server-config" viewid="ipObj=${ipObj};obj=${alias};prompt=${prompt}-pool" tr-obj="Device.DHCPv6.Server.Pool" tr-connection="Interface"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.[Interface=${ipObj}].Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="show"><ACTION>. /etc/clish/dhcp6.sh show_ip_dhcp6_servers "${ipObj}"</ACTION></COMMAND></VIEW><VIEW name="dhcp6v-server-config" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><COMMAND name="show"><ACTION>. /etc/clish/dhcp6.sh "${obj}" show_pool</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="order"><PARAM name="order" ptype="FROM_CM" tr-mapped-to="Order" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(Interface).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Interface=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="duid"><PARAM name="duid" ptype="FROM_CM" tr-mapped-to="DUID" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" default="false" tr-mapped-to="DUIDExclude" tr-val="true" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}</ACTION></COMMAND><COMMAND name="no duid" tr-mapped-to="DUID" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.DUID=	${obj}.DUIDExclude=false</ACTION></COMMAND><COMMAND name="vendorClassId"><PARAM name="id" ptype="FROM_CM" tr-mapped-to="VendorClassID" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" default="false" tr-mapped-to="VendorClassIDExclude" tr-val="true" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}</ACTION></COMMAND><COMMAND name="no vendorClassId" tr-mapped-to="VendorClassID" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.VendorClassID=	${obj}.VendorClassIDExclude=false</ACTION></COMMAND><COMMAND name="userClassId"><PARAM name="id" ptype="FROM_CM" tr-mapped-to="UserClassID" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" default="false" tr-mapped-to="UserClassIDExclude" tr-val="true" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}</ACTION></COMMAND><COMMAND name="no userClassId" tr-mapped-to="UserClassID" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.UserClassID=	${obj}.UserClassIDExclude=false</ACTION></COMMAND><COMMAND name="sourceAddress"><PARAM name="addr" ptype="IPV6_ADDRESS" tr-mapped-to="SourceAddress" /><PARAM name="mask" ptype="IPV6_MASK" tr-mapped-to="SourceAddressMask" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" default="false" tr-mapped-to="SourceAddressExclude" tr-val="true" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}	${obj}.${PAR_ATTR_3_tr-mapped-to}=${__eval PAR_ATTR_3_name}</ACTION></COMMAND><COMMAND name="no sourceAddress" tr-mapped-to="SourceAddress" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.SourceAddress=	${obj}.SourceAddressExclude=false</ACTION></COMMAND><COMMAND name="iana"><PARAM name="flag" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="IANAEnable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ianaManualPrefix" /><VAR name="VAR_IANAMANUAL_PREF_REF_TO_PREF"><ACTION>
        cmclient -v prefixes GETV "${obj}.IANAManualPrefixes"
        pref_list=$(. /etc/clish/clish-commons.sh &amp;&amp; list_print "$prefixes")
        for l in $pref_list; do
            cmclient -v p GETV "$l.Prefix"
            val="$val $p"
        done
        list=$(. /etc/clish/clish-commons.sh &amp;&amp; list_to_comma_sep "$val")
        echo -n "$list"
        </ACTION></VAR><COMMAND name="ianaManualPrefix set"><PARAM name="prefix_aliases" ptype="LIST_IPV6_ADDRESS_WITH_PREFIX" tr-mapped-to="IANAManualPrefixes" tr-var-action="VAR_IANAMANUAL_PREF_REF_TO_PREF" /><ACTION builtin="cm_list_reference_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#${ipObj}.IPv6Prefix.[StaticType&lt;Static,Child].[Origin&lt;Static,PrefixDelegation].Prefix=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ianaManualPrefix clear" no-config-gen="true" tr-mapped-to="IANAManualPrefixes" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="ianaManualPrefix show" no-config-gen="true" tr-mapped-to="IANAManualPrefixes"><ACTION>. /etc/clish/clish-commons.sh &amp;&amp; show_deref_list ${obj}.${CMD_ATTR_tr-mapped-to} Prefix</ACTION></COMMAND><COMMAND name="ianaManualPrefix add" no-config-gen="true"><PARAM name="pr" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${ipObj}.IPv6Prefix.[StaticType&lt;Static,Child].[Origin&lt;Static,PrefixDelegation].Prefix" tr-mapped-to="IANAManualPrefixes" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ianaManualPrefix del" no-config-gen="true"><PARAM name="pr" ptype="COMPLETE_NATIVE" ptype_args="listFromRefProp ${obj}.IANAManualPrefixes#Prefix" tr-mapped-to="IANAManualPrefixes" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="iapd"><PARAM name="flag" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="IAPDEnable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="iapdManualPrefix" /><COMMAND name="iapdManualPrefix add" no-config-gen="true"><PARAM name="pr" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${ipObj}.IPv6Prefix.[StaticType&lt;Static,Child].[Origin&lt;Static,PrefixDelegation].Prefix" tr-mapped-to="IAPDManualPrefixes" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="iapdManualPrefix del" no-config-gen="true"><PARAM name="pr" ptype="COMPLETE_NATIVE" ptype_args="listFromRefProp ${obj}.IAPDManualPrefixes#Prefix" tr-mapped-to="IAPDManualPrefixes" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="iapdManualPrefix clear" no-config-gen="true" tr-mapped-to="IAPDManualPrefixes" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><VAR name="VAR_IAPDMANUAL_PREF_REF_TO_PREF"><ACTION>
        cmclient -v prefixes GETV "${obj}.IAPDManualPrefixes"
        pref_list=$(. /etc/clish/clish-commons.sh &amp;&amp; list_print "$prefixes")
        for l in $pref_list; do
            cmclient -v p GETV "$l.Prefix"
            val="$val $p"
        done
        list=$(. /etc/clish/clish-commons.sh &amp;&amp; list_to_comma_sep "$val")
        echo -n "$list"
        </ACTION></VAR><COMMAND name="iapdManualPrefix show" no-config-gen="true" tr-mapped-to="IAPDManualPrefixes"><ACTION>. /etc/clish/clish-commons.sh &amp;&amp; show_deref_list ${obj}.${CMD_ATTR_tr-mapped-to} Prefix</ACTION></COMMAND><COMMAND name="iapdManualPrefix set"><PARAM name="prefix_aliases" ptype="LIST_IPV6_ADDRESS_WITH_PREFIX" tr-mapped-to="IAPDManualPrefixes" tr-var-action="VAR_IAPDMANUAL_PREF_REF_TO_PREF" /><ACTION builtin="cm_list_reference_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#${ipObj}.IPv6Prefix.[StaticType&lt;Static,Child].[Origin&lt;Static,PrefixDelegation].Prefix=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="iapdAddLength"><PARAM name="len" ptype="FROM_CM" tr-mapped-to="IAPDAddLength" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="dnsPassthrough"><PARAM name="flag" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_EnableDNSPassthrough" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add option" tr-obj=".Option"><PARAM name="tag" ptype="FROM_CM" tr-mapped-to="Tag" /><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_alias_and_key@cmplugin">${obj}${CMD_ATTR_tr-obj} ${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="del option" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}.Option.Tag ${obj}.Option.Alias" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="option" view="dhcp6v-server-option-config" viewid="pobj=${obj};obj=${alias};prompt=${prompt}:${VAR_GET_ALIAS}-opt" tr-obj=".Option"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}.Option.Tag ${obj}.Option.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="client" /><COMMAND name="client show" show_all_except="yes" no-config-gen="true"><ACTION>. /etc/clish/dhcp6.sh "${obj}" show_dhcp6_pool_clients</ACTION></COMMAND></VIEW><VIEW name="dhcp6v-server-option-config" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><COMMAND name="no" /><COMMAND name="tag"><PARAM name="tag" ptype="FROM_CM" tr-mapped-to="Tag" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="value" /><COMMAND name="value Empty" tr-obj=".[X_ADB_Type=Empty]" tr-config-phony="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=Empty	${obj}.Value=</ACTION></COMMAND><COMMAND name="value Hex" tr-obj=".[X_ADB_Type=Hex]"><PARAM name="val" ptype="HEX" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=Hex	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value Boolean" tr-obj=".[X_ADB_Type=Boolean]"><PARAM name="val" ptype="BOOLEAN" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=Boolean	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value String" tr-obj=".[X_ADB_Type=String]"><PARAM name="val" ptype="STRING" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=String	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value IPv6Address" tr-obj=".[X_ADB_Type=IPv6Address]"><PARAM name="val" ptype="IPV6_ADDRESS" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=IPv6Address	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="value IPv6AddressList" tr-obj=".[X_ADB_Type=IPv6AddressList]"><PARAM name="val" ptype="LIST_IPV6_ADDRESS" tr-mapped-to="Value" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_Type=IPv6AddressList	${obj}.Value=${val}</ACTION></COMMAND><COMMAND name="show"><ACTION>. /etc/clish/dhcp6.sh "${obj}" show_option</ACTION></COMMAND><COMMAND name="passthroughClient"><PARAM name="cli" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${pobj}.Client.Alias" tr-mapped-to="%(PassthroughClient).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.PassthroughClient=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no passthroughClient" tr-mapped-to="PassthroughClient" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND></VIEW><VIEW name="ipaddress-config-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><COMMAND name="address"><PARAM name="addr" ptype="IPV4_ADDRESS_WITH_PREFIX" tr-mapped-to="IPAddress" tr-var-action="TR_GET_NOT_EMPTY_ADDRESS_WITH_PREFIX" /><ACTION>
      . /etc/clish/ip-address.sh obj_ipv4_address_set_addr ${obj} IPAddress SubnetMask "${addr}"
      </ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no address" tr-mapped-to="IPAddress" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}	${obj}.SubnetMask=</ACTION></COMMAND><COMMAND name="show"><ACTION>. /etc/clish/interface-show.sh interface_ip_show_table_entry "${obj}"</ACTION></COMMAND></VIEW><VIEW name="dns-config-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-permissions-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="address"><PARAM name="addr" ptype="FROM_CM" tr-mapped-to="DNSServer" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="matchingDomain" /><COMMAND name="matchingDomain set"><PARAM name="domain_list" ptype="FROM_CM" tr-mapped-to="X_ADB_DomainFiltering" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="matchingDomain add" no-config-gen="true"><PARAM name="domain" ptype="FROM_CM" tr-mapped-to="X_ADB_DomainFiltering" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="matchingDomain del" no-config-gen="true"><PARAM name="domain" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="X_ADB_DomainFiltering" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="matchingDomain clear" tr-mapped-to="X_ADB_DomainFiltering" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="matchingDomain show" no-config-gen="true" tr-mapped-to="X_ADB_DomainFiltering"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="strictDomain"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_DomainFilteringRestricted" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="domainInterface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(X_ADB_DomainInterface).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_DomainInterface=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="priority"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="X_ADB_PrioBase" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="domainPriority"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="X_ADB_PrioDomain" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="timeout"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="X_ADB_Timeout" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="dhcp-relay-config" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-dhcp-server-or-relay-config" help="true" completion="true" /><COMMAND name="add pool" tr-obj="Device.DHCPv4.Relay.Forwarding" tr-connection="Interface" config-gen-prio="0"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${root} Alias=${alias}	Interface=${ipObj}</ACTION></COMMAND><COMMAND name="pool" view="dhcp-relay-pool-config" viewid="pobj=${root};obj=${alias};prompt=${prompt}-pool" tr-connection="Interface" tr-obj="Device.DHCPv4.Relay.Forwarding"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${root}.[Interface=${ipObj}].Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="show"><ACTION>for o in $(cmclient GETO ${root}.[Interface=${ipObj}]); do /etc/clish/dhcp_server_view.sh "$o" dhcp_relay_show; done</ACTION></COMMAND></VIEW><VIEW name="dhcp-relay-pool-config" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-dhcp-pool-config" help="true" completion="true" /><COMMAND name="interface" /><COMMAND name="no interface" /><COMMAND name="no interface out" tr-mapped-to="X_ADB_UpstreamInterface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=</ACTION></COMMAND><COMMAND name="interface out"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(X_ADB_UpstreamInterface).Alias" /><ACTION>
        cmclient -v val GETV "${obj}.Interface"
        if [ "$val" = "${ifname}" ]; then echo "ERROR: interface is used for inbound connections"; exit 1; fi
        . /etc/clish/quick_cm.sh setm "${obj}.X_ADB_UpstreamInterface=${ifname}"
      </ACTION></COMMAND><COMMAND name="localService"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="LocallyServed" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="server"><PARAM name="ip" ptype="FROM_CM" tr-mapped-to="DHCPServerIPAddress" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" no-config-gen="true"><ACTION>
        . /etc/clish/dhcp_server_view.sh "${obj}" dhcp_relay_show</ACTION></COMMAND></VIEW><VIEW name="vpn-common-l2tp-pptp-client-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><COMMAND name="server"><PARAM name="srvr" tr-mapped-to="Hostname" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="username"><PARAM name="name" tr-mapped-to="Username" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no username" tr-mapped-to="Username" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="password" no-config-gen="true"><PARAM name="pass" tr-mapped-to="Password" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no password" tr-mapped-to="Password" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="autoDisconnectTime"><PARAM name="time" tr-mapped-to="AutoDisconnectTime" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="reset" no-config-gen="true" tr-mapped-to="Reset" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND></VIEW><VIEW name="vpn-l2tp-pptp-server-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="vpn-client-server-namespace" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="addressRange"><PARAM name="min-addr" tr-mapped-to="MinAddress" ptype="IPV4_ADDRESS" /><PARAM name="max-addr" tr-mapped-to="MaxAddress" ptype="IPV4_ADDRESS" /><ACTION>
        . /etc/clish/clish-commons.sh
        /etc/clish/ip-address.sh ipv4_address_compare ${min-addr} ${max-addr}
        [ "$?" -eq 1 ] &amp;&amp; die 'ERROR: parameter "min-addr" must be less or equal to "max-addr"'
        . /etc/clish/quick_cm.sh setm "${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}"
      </ACTION></COMMAND><COMMAND name="users" /><COMMAND name="users add" no-config-gen="true"><PARAM name="user" tr-mapped-to="Users" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.X_ADB_VPN.Users.User.Alias" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="users del" no-config-gen="true"><PARAM name="user" tr-mapped-to="Users" ptype="COMPLETE_NATIVE" ptype_args="listFromRefProp ${obj}.Users#Alias" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><VAR name="VAR_REFLIST_L2TP_PPTP_USER"><ACTION>
        . /etc/clish/clish-commons.sh
        show_deref_list_as_list ${obj}.Users Alias
      </ACTION></VAR><COMMAND name="users set"><PARAM name="user_list" ptype="STRING" tr-mapped-to="Users" tr-var-action="VAR_REFLIST_L2TP_PPTP_USER" /><ACTION builtin="cm_list_reference_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.X_ADB_VPN.Users.User.Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="users show" no-config-gen="true" tr-mapped-to="Users"><ACTION>
            . /etc/clish/clish-commons.sh
            show_deref_list ${obj}.Users Alias
      </ACTION></COMMAND><COMMAND name="users clear" tr-mapped-to="Users" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND></VIEW><VIEW name="vpn-pptp-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="add" /><COMMAND name="add client" tr-obj=".Client.PPTP" config-gen-prio="0"><PARAM name="alias" optional="true" ptype="FROM_CM" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">Device.X_ADB_VPN.Client.PPTP Alias=${alias}</ACTION></COMMAND><COMMAND name="client" view="vpn-pptp-client-view" viewid="obj=${alias};prompt=${prompt}-client" tr-obj=".Client.PPTP" config-gen-prio="1"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.X_ADB_VPN.Client.PPTP.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del" /><COMMAND name="del client" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.X_ADB_VPN.Client.PPTP.Alias" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="add server" tr-obj=".Server.PPTP" config-gen-prio="0"><PARAM name="alias" optional="true" ptype="FROM_CM" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">Device.X_ADB_VPN.Server.PPTP Alias=${alias}</ACTION></COMMAND><COMMAND name="server" view="vpn-pptp-server-ext-view" viewid="obj=${alias};prompt=${prompt}-server" tr-obj=".Server.PPTP" config-gen-prio="1"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.X_ADB_VPN.Server.PPTP.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del server" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.X_ADB_VPN.Server.PPTP.Alias" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND></VIEW><VIEW name="vpn-pptp-client-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><NAMESPACE ref="vpn-client-server-namespace" help="true" completion="true" /><NAMESPACE ref="vpn-common-l2tp-pptp-client-view" help="true" completion="true" /><COMMAND name="idleDisconnectTime"><PARAM name="time" tr-mapped-to="IdleDisconnectTime" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="vpn-pptp-server-ext-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="vpn-l2tp-pptp-server-view" help="true" completion="true" /><COMMAND name="idleDisconnectTime"><PARAM name="time" tr-mapped-to="IdleDisconnectTime" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="pppoaRelay"><PARAM name="ifname" tr-mapped-to="%(PPPRelayOutBoundInterface).Alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.ATM.Link.Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.PPPRelayOutBoundInterface=${__eval PAR_ATTR_1_name}	${obj}.PPPRelayEnable=true</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no pppoaRelay" tr-mapped-to="PPPRelayOutBoundInterface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.PPPRelayOutBoundInterface=	${obj}.PPPRelayEnable=false</ACTION></COMMAND></VIEW><VIEW name="vpn-users-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="add" /><COMMAND name="add user" tr-obj=".Users.User" config-gen-prio="0"><PARAM name="alias" optional="true" ptype="FROM_CM" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">Device.X_ADB_VPN.Users.User Alias=${alias}</ACTION></COMMAND><COMMAND name="user" view="vpn-users-user-view" viewid="obj=${alias};prompt=${prompt}-user" tr-obj=".Users.User" config-gen-prio="1"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.X_ADB_VPN.Users.User.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del" /><COMMAND name="del user" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.X_ADB_VPN.Users.User.Alias" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND></VIEW><VIEW name="vpn-users-user-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="username"><PARAM name="name" tr-mapped-to="Username" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no username" tr-mapped-to="Username" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="password" no-config-gen="true"><PARAM name="pass" tr-mapped-to="Password" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no password" tr-mapped-to="Password" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND></VIEW><VIEW name="powermanagement-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="cpuSpeed"><PARAM name="speed" ptype="FROM_CM" tr-mapped-to="CpuSpeed" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="cpuR4Wait"><PARAM name="val" ptype="ENABLEORDISABLE_ONOFF" tr-mapped-to="CpuR4kWait" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="dramSelfRefresh"><PARAM name="val" ptype="ENABLEORDISABLE_ONOFF" tr-mapped-to="DRamSelfRefresh" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="ethernetEEE"><PARAM name="val" ptype="ENABLEORDISABLE_ONOFF" tr-mapped-to="GlobalEEEEnable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="autoPowerScaling"><PARAM name="state" ptype="FROM_CM" tr-mapped-to="AdaptiveVoltageScaling" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="pciPolicy"><PARAM name="policy" ptype="FROM_CM" tr-mapped-to="PciExpressPolicy" /><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="usbhost-cfg-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="reset" no-config-gen="true" tr-mapped-to="Reset" tr-val="true"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="powerManagement"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="PowerManagementEnable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="show connectedDevice" show_all_except="yes" no-config-gen="true"><PARAM name="deviceNumber" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}.Device.DeviceNumber" /><ACTION builtin="cmshow@cmplugin">${deviceNumber}</ACTION></COMMAND></VIEW><VIEW name="pppoeproxy-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><VAR name="VAR_IN_INTERFACES" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        show_deref_list_runconf ${obj}.InboundInterface
        </ACTION></VAR><COMMAND name="inInterface" /><COMMAND name="inInterface set" tr-obj=".[InboundInterface!]"><PARAM name="interfaces" ptype="STRING" tr-mapped-to="InboundInterface" tr-var-action="VAR_IN_INTERFACES" /><ACTION builtin="cm_list_reference_wrap_with_pref@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.IP.Interface.Alias#Device.Ethernet.Interface.Alias#Device.WiFi.SSID.Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="inInterface add" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropWithPref Device.IP.Interface.Alias Device.Ethernet.Interface.Alias Device.WiFi.SSID.Alias" tr-mapped-to="InboundInterface" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="inInterface del" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="listFromRefPropWithPref ${obj}.${PAR_ATTR_1_tr-mapped-to}#Alias" tr-mapped-to="InboundInterface" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="inInterface show" no-config-gen="true" tr-mapped-to="InboundInterface"><ACTION>
          . /etc/clish/clish-commons.sh
          show_deref_list ${obj}.${CMD_ATTR_tr-mapped-to} Alias true
      </ACTION></COMMAND><COMMAND name="inInterface clear" tr-mapped-to="InboundInterface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><VAR name="VAR_OUT_INTERFACES" dynamic="true"><ACTION>
        cmclient -v ifaces GETV ${obj}.OutboundInterface
        set -f; IFS=","; set -- $ifaces; unset IFS; set +f
        for l; do
            cmclient -v o GETV $l.Alias
            l=${l#Device.}
            l=${l%%.*}
            val="${val:+$val,}$l.$o"
        done
        echo -n "\"$val\""
        </ACTION></VAR><COMMAND name="outInterface" /><COMMAND name="outInterface set" tr-obj=".[OutboundInterface!]"><PARAM name="interfaces" ptype="STRING" tr-mapped-to="OutboundInterface" tr-var-action="VAR_OUT_INTERFACES" /><ACTION builtin="cm_list_reference_wrap_with_pref@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.IP.Interface.Alias#Device.ATM.Link.Alias#Device.PTM.Link.Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="outInterface add" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropWithPref Device.IP.Interface.Alias Device.ATM.Link.Alias Device.PTM.Link.Alias" tr-mapped-to="OutboundInterface" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="outInterface del" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="listFromRefPropWithPref ${obj}.${PAR_ATTR_1_tr-mapped-to}#Alias" tr-mapped-to="OutboundInterface" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="outInterface show" no-config-gen="true" tr-mapped-to="OutboundInterface"><ACTION>
          . /etc/clish/clish-commons.sh
          show_deref_list ${obj}.${CMD_ATTR_tr-mapped-to} Alias true
      </ACTION></COMMAND><COMMAND name="outInterface clear" tr-mapped-to="OutboundInterface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="stat" /><COMMAND name="stat show" no-config-gen="true" tr-obj=".Stats" show_all_except="yes"><DISPENTRY tr-mapped-to="Reset" /><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}${CMD_ATTR_tr-obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND><COMMAND name="client" /><COMMAND name="client show" no-config-gen="true" tr-obj=".Client" show_all_except="yes"><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_all_child_objects "${obj}${CMD_ATTR_tr-obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND></VIEW><VIEW name="interfaces-view" depth="dynamic" prompt="${CLISH_PROMPT}(${prompt})# "><COMMAND name="dsl" view="if-dsl-view" viewid="obj=${alias};prompt=cfg-intf-dsl" tr-obj="Device.DSL.Line"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.DSL.Line.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="usb" viewid="obj=${alias};prompt=cfg-intf-usb" view="usb-cfg-view" tr-config-phony="true" no-config-gen="true" tr-obj="Device.USB.Port"><PARAM name="alias" ptype="COMPLETE_NATIVE" tr-mapped-to="Alias" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.Alias" /></COMMAND><COMMAND name="show" escape_chars="&quot;"><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; print_horizontal_line 40

	show_interfaces_names() {
		if [ -n "$objlist" ];
		then
			print_horizontal_line 40
			echo $group_name
			for obj in $objlist; do
			    cmclient -v objName   GETV $obj.Name
			    cmclient -v objEnable GETV $obj.Enable
			    show_split_text "$objName" "$objEnable"
			done
		fi
	}

	show_split_text "Name" "Enabled"
	cmclient -v objlist GETO Device.DSL.Line
	group_name="DSL"
	show_interfaces_names

	cmclient -v objlist GETO Device.WiFi.Radio
	group_name="WiFi"
        show_interfaces_names

	cmclient -v objlist GETO Device.Ethernet.Interface
	group_name="Ethernet"
        show_interfaces_names

	cmclient -v objlist GETO Device.USB.Interface
	group_name="USB"
        show_interfaces_names

	cmclient -v objlist GETO Device.HPNA.Interface
	group_name="HPNA"
        show_interfaces_names

	print_horizontal_line 40
        </ACTION></COMMAND><COMMAND name="usbCdc" viewid="obj=${alias};prompt=cfg-intf-usbCdc" view="usbcdc-cfg-view" tr-config-phony="true" tr-obj="USB.Interface"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="wifi" view="if-wifi-view" viewid="obj=${alias};prompt=cfg-intf-wifi" tr-obj="Device.WiFi.Radio"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="mobileModem" view="mobileModem-view" viewid="prompt=${prompt}-mobileModem" tr-config-phony="true" config-gen-prio="1" aux_availability_condition="Device.X_ADB_MobileModem">
    </COMMAND><COMMAND name="ethWan" view="wan-if-eth-view" viewid="obj=${alias};prompt=cfg-intf-ethWan" tr-obj="Device.Ethernet.Interface"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="[Upstream=true].Alias" /><ACTION>
      cmclient -v res GETV ${alias}.Upstream
      if [ "$res" = "false" ]; then
          cmclient -v br_port GETO "Device.Bridging.Bridge.*.Port.[LowerLayers=${alias}]"
          if [ -n "$br_port" ]; then
            cmclient -v res DEL "$br_port"
          else
            cmclient -v ethLink GETO Device.Ethernet.Link.*.[LowerLayers=${alias}]
            if [ -n "$ethLink" ]; then
              . /etc/clish/clish-commons.sh
              upper_if=$(upper_interfaces_get $ethLink)
              for if in $upper_if; do
                  cmclient -v res DEL "$if"
              done
            fi
          fi
          . /etc/clish/quick_cm.sh setm "${alias}.Upstream=true"
      fi
      </ACTION></COMMAND><COMMAND name="ethLan" view="lan-if-eth-view" viewid="obj=${alias};prompt=cfg-intf-ethLan;ethlink_management=integrated" tr-obj="Device.Ethernet.Interface"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="[Upstream=false].Alias" /><ACTION>
      cmclient -v res GETV ${alias}.Upstream
      if [ "$res" = "true" ]; then
          cmclient -v br_port GETO "Device.Bridging.Bridge.*.Port.[LowerLayers=${alias}]"
          if [ -n "$br_port" ]; then
            cmclient -v res DEL "$br_port"
          else
            cmclient -v ethLink GETO Device.Ethernet.Link.*.[LowerLayers=${alias}]
            if [ -n "$ethLink" ]; then
              . /etc/clish/clish-commons.sh
              upper_if=$(upper_interfaces_get $ethLink)
              for if in $upper_if; do
                  cmclient -v res DEL "$if"
              done
            fi
          fi
          . /etc/clish/quick_cm.sh setm "${alias}.Upstream=false"
      fi
      </ACTION></COMMAND></VIEW><VIEW name="if-dsl-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add atm" tr-obj="Device.ATM.Link.[LowerLayers=Device.DSL.Channel.1]"><PARAM name="linktype" ptype="FROM_CM" tr-mapped-to="LinkType" /><PARAM name="atm_alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">Device.ATM.Link Alias=${atm_alias}	LinkType=${linktype}	LowerLayers=Device.DSL.Channel.1</ACTION></COMMAND><COMMAND name="atm" view="if-atm-view" viewid="obj=${alias_atm};prompt=${prompt}:${VAR_GET_ALIAS}-atm;ethlink_management=standalone" tr-obj="Device.ATM.Link.[LowerLayers=Device.DSL.Channel.1]"><PARAM name="alias_atm" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del atm" tr-obj="Device.ATM.Link.[LowerLayers=Device.DSL.Channel.1]" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Alias" /><ACTION>. /etc/clish/clish-commons.sh &amp;&amp; remove_entry_from_all_owners "${alias}"</ACTION></COMMAND><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-stats-view" help="true" completion="true" /><COMMAND name="enable" tr-mapped-to="Enable" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}	Device.DSL.Channel.[LowerLayers=${obj}].${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="disable" tr-mapped-to="Enable" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}	Device.DSL.Channel.[LowerLayers=${obj}].${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="lineReset" tr-mapped-to="X_ADB_Reset" tr-val="true" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="phy" view="if-dsl-phy-view" viewid="prompt=cfg-intf-dsl:${VAR_GET_ALIAS};obj=${obj}" tr-config-phony="true" /><COMMAND name="show"><ACTION>. /etc/clish/dsl.sh "config" "${obj}"</ACTION></COMMAND><VAR name="PTM_OBJ" help="PTM_OBJ" dynamic="true"><ACTION builtin="cmwrap_add_with_alias_and_key@cmplugin">Device.PTM.Link LowerLayers=Device.DSL.Channel.1</ACTION></VAR><COMMAND name="ptm" view="if-ptm-view" viewid="prompt=${prompt}:${VAR_GET_ALIAS}-ptm;physIface=${PTM_OBJ};pobj=${obj};obj=${PTM_OBJ};upstream=true" tr-obj="Device.PTM.1.Link" tr-mapped-to="Alias" required_permissions="write_read_if_exists Device.PTM.Link.[LowerLayers=Device.DSL.Channel.1]"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION>
        if [ -z "${PTM_OBJ}" ]; then echo "Error during getting ptm interface"; exit 1; fi
        </ACTION></COMMAND><COMMAND name="del ptm" no-config-gen="true"><ACTION>
        cmclient -v obj GETO Device.PTM.Link.[LowerLayers=Device.DSL.Channel.1]
        if [ -z "$obj" ]; then echo "Error during getting ptm interface"; exit 0; fi
        . /etc/clish/clish-commons.sh &amp;&amp; remove_entry_from_all_owners "$obj"
      </ACTION></COMMAND></VIEW><VIEW name="if-atm-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><COMMAND name="show"><ACTION>. /etc/clish/interface-show.sh atm "${obj}"</ACTION></COMMAND><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="pvc"><PARAM name="vpi_vci" ptype="FROM_CM" tr-mapped-to="DestinationAddress" /><ACTION>
             cmclient -v objlist GETO Device.ATM.Link.[DestinationAddress=${__eval PAR_ATTR_1_name}].[Alias!${VAR_GET_ALIAS}]
             for object in $objlist; do
                 cmclient -v objAlias GETV $object.Alias
                 echo "The following VPI/VCI are used by another ATM link ($objAlias) on this DSL channel: " ${__eval PAR_ATTR_1_name}
                 exit 1
             done
             cmclient -v res SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}
      </ACTION></COMMAND><COMMAND name="encapsulation"><PARAM name="encapsulation" ptype="FROM_CM" tr-mapped-to="Encapsulation" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="checksum"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="FCSPreserved" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="oamPing"><PARAM name="value" ptype="NEG_ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_DisableOAMPing" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="multiQueue"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_MultiQueue" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="serviceClass"><PARAM name="serv_class" ptype="FROM_CM" tr-mapped-to="QoS.QoSClass" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="pcr"><PARAM name="pcr" ptype="FROM_CM" tr-mapped-to="QoS.PeakCellRate" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="mbs"><PARAM name="mbs" ptype="FROM_CM" tr-mapped-to="QoS.MaximumBurstSize" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="scr"><PARAM name="scr" ptype="FROM_CM" tr-mapped-to="QoS.SustainableCellRate" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="mcr"><PARAM name="mcr" ptype="FROM_CM" tr-mapped-to="QoS.X_ADB_ATMMinimumCellRate" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="pvcSearchList" /><COMMAND name="pvcSearchList set"><PARAM name="vcsearchlist" ptype="FROM_CM" tr-mapped-to="VCSearchList" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="pvcSearchList add" no-config-gen="true"><PARAM name="vpi_vci" ptype="FROM_CM" tr-mapped-to="VCSearchList" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="pvcSearchList del" no-config-gen="true"><PARAM name="vpi_vci" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.VCSearchList" tr-mapped-to="VCSearchList" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="pvcSearchList show" no-config-gen="true" tr-mapped-to="VCSearchList"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="pvcSearchList clear" tr-mapped-to="VCSearchList" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="f5LoopbackTest" /><COMMAND name="f5LoopbackTest start" no-config-gen="true" tr-obj="Device.ATM.Diagnostics.F5Loopback"><PARAM name="repetitions" ptype="FROM_CM" tr-mapped-to="NumberOfRepetitions" /><PARAM name="timeout" ptype="FROM_CM" tr-mapped-to="Timeout" /><ACTION builtin="cmwrap@cmplugin">SETM ${CMD_ATTR_tr-obj}.DiagnosticsState=Requested	${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${CMD_ATTR_tr-obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}	${CMD_ATTR_tr-obj}.Interface=${obj}</ACTION></COMMAND><COMMAND name="f5LoopbackTest results" no-config-gen="true" tr-obj="Device.ATM.Diagnostics.F5Loopback" show_all_except="yes"><DISPENTRY tr-mapped-to="Interface,Timeout,NumberOfRepetitions,DiagnosticsState" /><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${CMD_ATTR_tr-obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND><NAMESPACE ref="ethlink-includeconfig-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="ip-config-view" help="true" completion="true" /><NAMESPACE ref="if-ppp-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-stats-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-permissions-view" help="true" completion="true" /></VIEW><VIEW name="ethlink-includeconfig-view" depth="dynamic"><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add ethLink" visible="case &quot;${obj}&quot; in Device.ATM.Link* ) cmclient -v type GETV ${obj}.LinkType; [ xEoA = x$type ] ;; esac" tr-obj="Device.Ethernet.Link" config-gen-prio="0" tr-connection="#upperlayer"><PARAM name="alias_ethlink" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION>
        . /etc/clish/clish-commons.sh
        if [ -n "${alias_ethlink}" ]; then
            cmclient -v ethlink_num ADD "Device.Ethernet.Link.[Alias=${alias_ethlink}]"
        else
            cmclient -v ethlink_num ADD "Device.Ethernet.Link"
            cmclient -v alias GETV "Device.Ethernet.Link.$ethlink_num.Alias"
            echo "Created ethLink with alias \"$alias\""
        fi

        ethlink_obj=Device.Ethernet.Link.$ethlink_num

        # Append the lower layers
        new_list="$(handle_list_actions $ethlink_obj.LowerLayers add ${obj})"
        cmclient SETM "$new_list" > /dev/null 2>&amp;1

        # In the USB modem case the Name should be automatically assigned
        if [ -n "${ethlink_name}" ] ; then
            cmclient SET $ethlink_obj.Name ${ethlink_name} > /dev/null 2>&amp;1
        fi
      </ACTION></COMMAND><COMMAND name="ethLink" view="ethlink-config-view" viewid="pobj=${obj};obj=${alias};prompt=${prompt}:${VAR_GET_ALIAS}-eth;ethlink_management=standalone" visible="case &quot;${obj}&quot; in Device.ATM.Link* ) cmclient -v type GETV ${obj}.LinkType; [ xEoA = x$type ] ;; esac" tr-obj="Device.Ethernet.Link" tr-connection="#upperlayer" config-gen-prio="1"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.[LowerLayers,${obj}].Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del ethLink" visible="case &quot;${obj}&quot; in Device.ATM.Link* ) cmclient -v type GETV ${obj}.LinkType; [ xEoA = x$type ] ;; esac" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.Ethernet.Link.[LowerLayers,${obj}].Alias" tr-mapped-to="Alias" /><ACTION>
        . /etc/clish/clish-commons.sh
        remove_entry_from_specific_owner "${obj}" ${alias}
      </ACTION></COMMAND></VIEW><VIEW name="ethlink-config-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="ip-config-view" help="true" completion="true" /><NAMESPACE ref="if-ppp-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="vlanterm-includeconfig-view" help="true" completion="true" /><COMMAND name="promiscuousMode"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_Promisc" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="prioTag"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="PriorityTagging" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" no-config-gen="true" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Enable, PriorityTagging" /><ACTION>
        # the following prints the object contents as specified above
        # Note: preferably it should be implemented as a VAR routine, alas, it tries to "execute"
        # the returned output ...
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"

        show_split_text "Direct Higher Layers" ""
        print_horizontal_line
        cmclient -v objects GETO "Device.PPP.Interface.[LowerLayers,${obj}]"
        for object in $objects; do
            # By separating these queries I have no problem with spaces in names
            cmclient -v alias GETV $object.Alias
            show_split_text "PPP" "$alias"
        done

        cmclient -v objects GETO "Device.IP.Interface.[LowerLayers,${obj}]"
        for object in $objects; do
            # By separating these queries I have no problem with spaces in names
            cmclient -v alias GETV $object.Alias
            show_split_text "IP" "$alias"
        done

        cmclient -v objects GETO "Device.Ethernet.VLANTermination.[LowerLayers,${obj}]"
        for object in $objects; do
            # By separating these queries I have no problem with spaces in names
            cmclient -v alias GETV $object.Alias
            show_split_text "VLAN Termination" "$alias"
        done

      </ACTION></COMMAND></VIEW><VIEW name="if-ppp-view" depth="dynamic"><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add ppp" tr-obj="Device.PPP.Interface" tr-connection="#upperlayer" visible="case &quot;${obj}&quot; in Device.ATM.Link* ) cmclient -v type GETV ${obj}.LinkType; [ xPPPoA = x$type ] ;; esac"><PARAM name="ppp_alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION>. /etc/clish/interface-add.sh ppp "${obj}" "${ppp_alias}"</ACTION></COMMAND><COMMAND name="ppp" visible="case &quot;${obj}&quot; in Device.ATM.Link* ) cmclient -v type GETV ${obj}.LinkType; [ xPPPoA = x$type ] ;; esac" view="if-ppp-iface-view" viewid="physIface=${obj};pobj=${obj};obj=${alias_ppp};prompt=${prompt}:${VAR_GET_ALIAS}-ppp;;ethlink_management=standalone" tr-obj="Device.PPP.Interface" tr-connection="#upperlayer"><PARAM name="alias_ppp" ptype="COMPLETE" ptype_args="get_upper_interfaces_obj_by_alias ${obj} Device.PPP.Interface" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del ppp" no-config-gen="true" visible="case &quot;${obj}&quot; in Device.ATM.Link* ) cmclient -v type GETV ${obj}.LinkType; [ xPPPoA = x$type ] ;; esac"><PARAM name="alias_ppp" ptype="COMPLETE" ptype_args="get_upper_interfaces_obj_by_alias ${obj} Device.PPP.Interface" /><ACTION>. /etc/clish/clish-commons.sh &amp;&amp; remove_entry_from_specific_owner "${obj}" "${alias_ppp}"</ACTION></COMMAND></VIEW><VIEW name="if-ppp-iface-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="ip-config-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-stats-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="no" /><COMMAND name="reset" no-config-gen="true" tr-mapped-to="Reset" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="disconnect" no-config-gen="true" tr-mapped-to="X_ADB_Disconnect" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="reconnect" no-config-gen="true" tr-mapped-to="X_ADB_Reconnect" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="idleDisconnectTime"><PARAM name="sec" ptype="FROM_CM" tr-mapped-to="IdleDisconnectTime" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="autoDisconnectTime"><PARAM name="sec" ptype="FROM_CM" tr-mapped-to="AutoDisconnectTime" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="user"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_UserEnable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="username"><PARAM name="username" ptype="FROM_CM" tr-mapped-to="Username" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no username" tr-mapped-to="Username" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="password" no-config-gen="true"><PARAM name="password" ptype="FROM_CM" tr-mapped-to="Password" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no password" tr-mapped-to="Password" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="encryption" /><COMMAND name="encryption set"><PARAM name="auth_mode" ptype="FROM_CM" tr-mapped-to="X_ADB_EncryptionProtocol" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="encryption add" no-config-gen="true"><PARAM name="domain" ptype="FROM_CM" tr-mapped-to="X_ADB_EncryptionProtocol" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="encryption del" no-config-gen="true"><PARAM name="domain" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="X_ADB_EncryptionProtocol" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="encryption clear" no-config-gen="true" tr-mapped-to="X_ADB_EncryptionProtocol" tr-val="None"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="encryption show" no-config-gen="true" tr-mapped-to="X_ADB_EncryptionProtocol"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="compression"><PARAM name="comp_mode" ptype="FROM_CM" tr-mapped-to="CompressionProtocol" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="authentication" /><COMMAND name="authentication set"><PARAM name="auth_mode" ptype="FROM_CM" tr-mapped-to="AuthenticationProtocol" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="authentication add" no-config-gen="true"><PARAM name="domain" ptype="FROM_CM" tr-mapped-to="AuthenticationProtocol" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="authentication del" no-config-gen="true"><PARAM name="domain" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="AuthenticationProtocol" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="authentication clear" tr-mapped-to="AuthenticationProtocol" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="authentication show" no-config-gen="true" tr-mapped-to="AuthenticationProtocol"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="maxMruSize"><PARAM name="size" ptype="FROM_CM" tr-mapped-to="MaxMRUSize" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="connectionTrigger"><PARAM name="con_trig_mode" ptype="FROM_CM" tr-mapped-to="ConnectionTrigger" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="passThrough"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="IPCP.PassthroughEnable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no passThrough" /><COMMAND name="no passThrough pool" tr-mapped-to="IPCP.PassthroughDHCPPool" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="passThrough pool"><PARAM name="alias_pool" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.DHCPv4.Server.Pool.Alias" tr-mapped-to="%(IPCP.PassthroughDHCPPool).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.IPCP.PassthroughDHCPPool=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ipv6cp"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="IPv6CPEnable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="payloadComp"><PARAM name="comp_mode" ptype="FROM_CM" tr-mapped-to="X_ADB_PayloadCompressionProtocol" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="payloadCompCodeSize"><PARAM name="size" ptype="FROM_CM" tr-mapped-to="X_ADB_PayloadCompressionProtocolMaxCodeSize" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="addrReqMask"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_RequestMask" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="acName" tr-obj=".[X_ADB_ActiveLowerLayer&gt;Device.Ethernet.]" aux_availability_condition="${obj}.[X_ADB_ActiveLowerLayer&gt;Device.Ethernet.]"><PARAM name="acname" ptype="FROM_CM" tr-mapped-to="PPPoE.ACName" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no acName" tr-obj=".[X_ADB_ActiveLowerLayer&gt;Device.Ethernet.]" tr-mapped-to="PPPoE.ACName" tr-val="" aux_availability_condition="${obj}.[X_ADB_ActiveLowerLayer&gt;Device.Ethernet.]"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="serviceName" tr-obj=".[X_ADB_ActiveLowerLayer&gt;Device.Ethernet.]" aux_availability_condition="${obj}.[X_ADB_ActiveLowerLayer&gt;Device.Ethernet.]"><PARAM name="pppservname" ptype="FROM_CM" tr-mapped-to="PPPoE.ServiceName" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no serviceName" tr-mapped-to="PPPoE.ServiceName" tr-val="" tr-obj=".[X_ADB_ActiveLowerLayer&gt;Device.Ethernet.]" aux_availability_condition="${obj}.[X_ADB_ActiveLowerLayer&gt;Device.Ethernet.]"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND></VIEW><VIEW name="vlanterm-includeconfig-view" depth="dynamic"><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add vlan" tr-obj="Device.Ethernet.VLANTermination" tr-connection="#upperlayer" config-gen-prio="0"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION>
        . /etc/clish/clish-commons.sh
        [ -z "${alias}" ] &amp;&amp; cmclient -v vlanterm_num ADD "Device.Ethernet.VLANTermination" || cmclient -v vlanterm_num ADD "Device.Ethernet.VLANTermination.[Alias=${alias}]"
        vlanterm_obj=Device.Ethernet.VLANTermination.$vlanterm_num

        # Append the lower layers
        new_list="$(handle_list_actions $vlanterm_obj.LowerLayers add ${obj})"
        cmclient SETM "$new_list" > /dev/null 2>&amp;1
      </ACTION></COMMAND><COMMAND name="vlan" view="vlanterm-config-view" viewid="pobj=${obj};obj=${alias};prompt=${prompt}:${VAR_GET_ALIAS}-vlan;ethlink_management=standalone" tr-obj="Device.Ethernet.VLANTermination" tr-connection="#upperlayer" config-gen-prio="1"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.[LowerLayers,${obj}].Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del vlan" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.Ethernet.VLANTermination.[LowerLayers,${obj}].Alias" tr-mapped-to="Alias" /><ACTION>
        . /etc/clish/clish-commons.sh
        remove_entry_from_specific_owner "${obj}" ${alias}
      </ACTION></COMMAND></VIEW><VIEW name="vlanterm-config-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="ip-config-view" help="true" completion="true" /><NAMESPACE ref="if-ppp-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="vlanID"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="VLANID" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="prio"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="X_ADB_8021pPrio" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" no-config-gen="true" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Enable, VLANID, X_ADB_8021pPrio" /><ACTION>
        # the following prints the object contents as specified above
        # Note: preferably it should be implemented as a VAR routine, alas, it tries to "execute"
        # the returned output ...
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"

        show_split_text "Direct Higher Layers" ""
        print_horizontal_line
        cmclient -v objects GETO "Device.PPP.Interface.[LowerLayers,${obj}]"
        for object in $objects; do
            # By separating these queries I have no problem with spaces in names
            cmclient -v alias GETV $object.Alias
            show_split_text "PPP" "$alias"
        done

        cmclient -v objects GETO "Device.IP.Interface.[LowerLayers,${obj}]"
        for object in $objects; do
            # By separating these queries I have no problem with spaces in names
            cmclient -v alias GETV $object.Alias
            show_split_text "IP" "$alias"
        done
      </ACTION></COMMAND><COMMAND name="stat" no-config-gen="true" /><COMMAND name="stat show" show_all_except="yes" no-config-gen="true"><ACTION>
        alt_obj=${obj}.Stats
        # the following prints the object contents as specified above
        # Note: preferably it should be implemented as a VAR routine, alas, it tries to "execute"
        # the returned output ...
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "$alt_obj" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND></VIEW><VIEW name="if-dsl-phy-view" prompt="${CLISH_PROMPT}(${prompt}-phy)# " depth="dynamic"><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="SNRMpbds,SNRMpbus" /><ACTION>
            . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
            echo -e "hwBasedQos:"
            . /etc/clish/clish-commons.sh &amp;&amp; show_all_child_objects "${obj}.X_ADB_HwBasedQos" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
          </ACTION></COMMAND><COMMAND name="bitswap"><PARAM name="value" ptype="ENABLEORDISABLE" tr-mapped-to="X_ADB_BitSwap" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${value}</ACTION></COMMAND><COMMAND name="sra"><PARAM name="value" ptype="ENABLEORDISABLE" tr-mapped-to="X_ADB_SRA" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${value}</ACTION></COMMAND><COMMAND name="trellis"><PARAM name="val" ptype="ENABLEORDISABLE" tr-mapped-to="TRELLISds" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.TRELLISds=${__eval PAR_ATTR_1_name}	${obj}.TRELLISus=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="targetSnr"><PARAM name="snr" ptype="FROM_CM" tr-mapped-to="X_ADB_TargetSNR" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="g992Dtf"><PARAM name="val" ptype="ENABLEORDISABLE" tr-mapped-to="X_ADB_G992DTF" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="v43"><PARAM name="val" ptype="ENABLEORDISABLE" tr-ifval-not-in="-1" tr-mapped-to="X_ADB_V43" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no v43" tr-mapped-to="X_ADB_V43" tr-val="-1"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="attndrFramingConstraints"><PARAM name="val" ptype="ENABLEORDISABLE" tr-ifval-not-in="-1" tr-mapped-to="X_ADB_EnableATTNDRframingConstrains" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no attndrFramingConstraints" tr-mapped-to="X_ADB_EnableATTNDRframingConstrains" tr-val="-1"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="noG994AvdslToggle"><PARAM name="val" ptype="ENABLEORDISABLE" tr-ifval-not-in="-1" tr-mapped-to="X_ADB_NoG994AVdslToggle" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no noG994AvdslToggle" tr-mapped-to="X_ADB_NoG994AVdslToggle" tr-val="-1"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="alignAfterPeriodics"><PARAM name="val" ptype="ENABLEORDISABLE" tr-ifval-not-in="-1" tr-mapped-to="X_ADB_AlignAfterPeriodics" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no alignAfterPeriodics" tr-mapped-to="X_ADB_AlignAfterPeriodics" tr-val="-1"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="dynamicV43Handling"><PARAM name="val" ptype="ENABLEORDISABLE" tr-ifval-not-in="-1" tr-mapped-to="X_ADB_DynamicV43handling" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no dynamicV43Handling" tr-mapped-to="X_ADB_DynamicV43handling" tr-val="-1"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="monitorTone"><PARAM name="val" ptype="ENABLEORDISABLE" tr-mapped-to="X_ADB_MonitorTone" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="toggleJ43B43"><PARAM name="val" ptype="ENABLEORDISABLE" tr-mapped-to="X_ADB_ToggleJ43B43" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="phyR"><PARAM name="mode" ptype="FROM_CM" tr-mapped-to="X_ADB_PhyR" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ginp"><PARAM name="mode" ptype="FROM_CM" tr-mapped-to="X_ADB_GINP" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="annexMode"><PARAM name="annex" ptype="FROM_CM" tr-mapped-to="X_ADB_Annex" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="dslStandards" /><COMMAND name="dslStandards set"><PARAM name="list" ptype="STRING" tr-ifval-not-in="Auto" tr-mapped-to="X_ADB_AllowedStandards" /><ACTION>
             # Auto option can be used alone only
             case "${__eval PAR_ATTR_1_name}" in
               *Auto*)
                 if [ "${__eval PAR_ATTR_1_name}" != "Auto" ]; then
                   echo "\"Auto\" cannot be used together with other options"
                   return
                 fi
               ;;
             esac
             cmclient SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}
      </ACTION></COMMAND><COMMAND name="dslStandards add" no-config-gen="true"><PARAM name="mode" ptype="COMPLETE" ptype_args="list_add ${obj}.StandardsSupported ${obj}.X_ADB_AllowedStandards" tr-mapped-to="X_ADB_AllowedStandards" /><ACTION>
             # If Auto was previously set, remove it
             cmclient -v oldList GETV ${obj}.${PAR_ATTR_1_tr-mapped-to}
             [ "$oldList" = "Auto" ] &amp;&amp; newList=${__eval PAR_ATTR_1_name} || newList=$oldList,${__eval PAR_ATTR_1_name}
             cmclient SET ${obj}.${PAR_ATTR_1_tr-mapped-to} $newList
      </ACTION></COMMAND><COMMAND name="dslStandards del" no-config-gen="true"><PARAM name="mode" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.X_ADB_AllowedStandards" tr-mapped-to="X_ADB_AllowedStandards" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="dslStandards clear" tr-mapped-to="X_ADB_AllowedStandards" tr-val="Auto"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="dslStandards show" no-config-gen="true"><ACTION>. /etc/clish/dsl.sh "print_mode" "${obj}"</ACTION></COMMAND><COMMAND name="hwBasedQos"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_HwBasedQos.Enable" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><NAMESPACE ref="if-vdsl-phy-view" help="true" completion="true" /></VIEW><VIEW name="if-vdsl-phy-view" depth="dynamic"><COMMAND name="vdslProfiles" /><COMMAND name="vdslProfiles set"><PARAM name="profiles" ptype="STRING" tr-mapped-to="X_ADB_AllowedProfiles" tr-ifval-not-in="Auto" /><ACTION>
        # Auto option can be used alone only
        case "${__eval PAR_ATTR_1_name}" in
          *Auto*)
            if [ "${__eval PAR_ATTR_1_name}" != "Auto" ]; then
              echo "\"Auto\" cannot be used together with other options"
              return
            fi
            ;;
        esac
        cmclient SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}
      </ACTION></COMMAND><COMMAND name="vdslProfiles add" no-config-gen="true"><PARAM name="profile" ptype="COMPLETE" ptype_args="list_add ${obj}.AllowedProfiles ${obj}.X_ADB_AllowedProfiles" tr-mapped-to="X_ADB_AllowedProfiles" /><ACTION>
           # If Auto was previously set, remove it
           cmclient -v oldList GETV ${obj}.${PAR_ATTR_1_tr-mapped-to}
           [ "$oldList" = "Auto" ] &amp;&amp; newList=${__eval PAR_ATTR_1_name} || newList=$oldList,${__eval PAR_ATTR_1_name}
           cmclient SET ${obj}.${PAR_ATTR_1_tr-mapped-to} $newList
      </ACTION></COMMAND><COMMAND name="vdslProfiles del" no-config-gen="true"><PARAM name="profile" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.X_ADB_AllowedProfiles" tr-mapped-to="X_ADB_AllowedProfiles" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="vdslProfiles clear" tr-mapped-to="X_ADB_AllowedProfiles" tr-val="Auto"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="vdslProfiles show" no-config-gen="true" tr-mapped-to="X_ADB_AllowedProfiles"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="dynamicD"><PARAM name="val" ptype="ENABLEORDISABLE" tr-mapped-to="X_ADB_DynamicD" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="dynamicF"><PARAM name="val" ptype="ENABLEORDISABLE" tr-mapped-to="X_ADB_DynamicF" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="if-ptm-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><NAMESPACE ref="ethlink-includeconfig-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-stats-view" help="true" completion="true" /></VIEW><VIEW name="usb-cfg-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /></VIEW><VIEW name="usbcdc-cfg-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-stats-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="add" no-config-gen="true" /><COMMAND name="del" no-config-gen="true" /><COMMAND name="add modem" tr-obj="Device.X_ADB_MobileModem.Interface" config-gen-prio="0"><PARAM name="modelAlias" ptype="FROM_CM" tr-mapped-to="Alias" /><ACTION>
        cmclient -v newModel ADD Device.X_ADB_MobileModem.Interface
        cmclient -v dummy SET Device.X_ADB_MobileModem.Interface.$newModel.Alias "${modelAlias}"
        cmclient -v dummy SET Device.X_ADB_MobileModem.Interface.$newModel.LowerLayers ${obj}
      </ACTION></COMMAND><COMMAND name="del modem" no-config-gen="true"><PARAM name="modelObj" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.X_ADB_MobileModem.Interface.Alias" tr-mapped-to="Alias" /><ACTION>. /etc/clish/clish-commons.sh &amp;&amp; remove_entry_from_all_owners "${modelObj}"</ACTION></COMMAND><COMMAND name="modem" view="modem-view" viewid="obj=${alias};prompt=${prompt}:${VAR_GET_ALIAS}-modem;ethlink_name=wwan0" tr-obj="Device.X_ADB_MobileModem.Interface" tr-config-phony="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.X_ADB_MobileModem.Interface.Alias" tr-mapped-to="Alias" /></COMMAND></VIEW><VIEW name="modem-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="ethlink-includeconfig-view" help="true" completion="true" /><NAMESPACE ref="if-ppp-view" help="true" completion="true" /><COMMAND name="apn"><PARAM name="apn" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp %(%(Device.X_ADB_MobileModem.Interface.{i}.ActiveSIMCard).SIMOperator).APN.Name" tr-mapped-to="%(PreferredAPN).Name" /><ACTION builtin="cmwrap@cmplugin">SETM %(${obj}.ActiveSIMCard).PreferredAPN=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" no-config-gen="true" /><COMMAND name="no apn" no-config-gen="true" tr-val="" tr-mapped-to="PreferredAPN"><ACTION builtin="cmwrap@cmplugin">SETM %(${obj}.ActiveSIMCard).${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="pin" aux_availability_condition="%(${obj}.ActiveSIMCard).[PINEnable=true]"><PARAM name="pin" ptype="STRING" tr-mapped-to="PIN" /><ACTION builtin="cmwrap@cmplugin">SETM %(${obj}.ActiveSIMCard).${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="puk"><PARAM name="puk" ptype="STRING" tr-mapped-to="PUK" /><ACTION builtin="cmwrap@cmplugin">SETM %(${obj}.ActiveSIMCard).${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="pinUsage"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="PINEnable" /><ACTION builtin="cmwrap@cmplugin">SETM %(${obj}.ActiveSIMCard).${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="pinChange" no-config-gen="true" tr-obj="Device.X_ADB_MobileModem.SIMCard"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="NewPIN" /><ACTION builtin="cmwrap@cmplugin">SETM %(${obj}.ActiveSIMCard).NewPIN=${__eval PAR_ATTR_1_name}	%(${obj}.ActiveSIMCard).PINChange=true</ACTION></COMMAND><COMMAND name="credit" no-config-gen="true" /><COMMAND name="credit show" no-config-gen="true"><ACTION>
        local simObj

        cmclient -v simObj GETV ${obj}.ActiveSIMCard
        if [ -z "$simObj" ] ; then
            echo "No active SIM card."
            exit 1
        fi

        # Date format in seconds:
        local date_format='+%s'
        # First timeout: 30 seconds
        local waiting_message_shown=0
        local message_timeout=30
        # Final timeout: 60 seconds
        local final_timeout=60
        local balance
        local balanceTime
        local dummy

        echo "Sending SSD command to request credit balance information."
        cmclient -v dummy SET $simObj.CreditBalanceTrigger true

        start=$(date "$date_format")

        while [ 1 ] ; do
            sleep 1

            cmclient -v balanceTime GETV $simObj.CreditBalanceTime

            if [ -n "$balanceTime" ] &amp;&amp; [ "$balanceTime" -eq 0 ] ; then
                cmclient -v balance GETV $simObj.CreditBalance

                echo "Balance: $balance"

                break
            fi

            now=$(date "$date_format")
            delta=$((now - start))

            if [ "$delta" -gt "$message_timeout" -a "$waiting_message_shown" -eq 0 ] ; then
                waiting_message_shown=1
                echo "Still working: awaiting response message."
            fi

            if [ "$delta" -gt "$final_timeout" ] ; then
                echo "Reading the balance timed out."
                break
            fi
        done
      </ACTION></COMMAND><COMMAND name="stat" no-config-gen="true" /><COMMAND name="stat reset" no-config-gen="true"><ACTION>
        cmclient -v simCard GETV ${obj}.ActiveSIMCard
        if [ -n "$simCard" ] ; then
            cmclient -v dummy SET $simCard.Stats.ResetStatistics true
        fi
      </ACTION></COMMAND><COMMAND name="stat show" no-config-gen="true"><ACTION>
        cmclient -v simCard GETV ${obj}.ActiveSIMCard
        if [ -n "$simCard" ] ; then
            . /etc/clish/clish-commons.sh &amp;&amp; show_object "$simCard.Stats" "ResetStatistics" yes
        fi
      </ACTION></COMMAND><COMMAND name="sim" view="modem-sim-view" viewid="obj=${iccid};prompt=${prompt}:${VAR_GET_ALIAS}-sim" tr-obj="Device.X_ADB_MobileModem.SIMCard" tr-config-phony="true" no-config-gen="true"><PARAM name="iccid" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.ICCID ${CMD_ATTR_tr-obj}.Name" tr-mapped-to="ICCID" /></COMMAND><COMMAND name="del sim" tr-obj="Device.X_ADB_MobileModem.SIMCard" no-config-gen="true"><PARAM name="iccid" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${CMD_ATTR_tr-obj}.ICCID ${CMD_ATTR_tr-obj}.Name" tr-mapped-to="ICCID" /><ACTION builtin="cmwrap@cmplugin">DEL ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="LowerLayers">
        show_deref_list ${obj}.LowerLayers Alias
      </DISPENTRY><DISPENTRY tr-mapped-to="ActiveSIMCard">
        show_deref_list ${obj}.ActiveSIMCard Name
      </DISPENTRY><DISPENTRY tr-mapped-to="ActiveOperator">
        show_deref_list ${obj}.ActiveOperator Name
      </DISPENTRY><ACTION>
        . /etc/clish/clish-commons.sh \
            &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}" \
            &amp;&amp; show_object "${obj}.Modem" \
                                   "ActiveModel::show_deref_list ${obj}.Modem.ActiveModel Name::" \
                                   "yes"

        print_horizontal_line
        cmclient -v sims GETO Device.X_ADB_MobileModem.SIMCard
        if [ -n "$sims" ] ; then
            cmclient -v activeSim GETV Device.X_ADB_MobileModem.Interface.1.ActiveSIMCard
            for sim in $sims ; do
                [ "$sim" = "$activeSim" ] &amp;&amp; prefix='* ' || prefix='  '
                cmclient -v name GETV "$sim.Name"
                echo "$prefix$name"
            done
        else
            echo "No SIM cards available."
        fi
        print_horizontal_line
      </ACTION></COMMAND><VAR name="VAR_GET_SIMCARD" dynamic="true"><ACTION>
        cmclient -v operator GETV "${obj}.ActiveSIMCard"
        echo -n "$operator"
        </ACTION></VAR></VIEW><VIEW name="modem-sim-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_NAME})# " depth="dynamic"><COMMAND name="name"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="Name" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="pin"><PARAM name="pin" ptype="STRING" tr-mapped-to="PIN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="pinUsage" no-config-gen="true" /><COMMAND name="pinUsage enable" tr-mapped-to="PINEnable" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="pinUsage disable" tr-mapped-to="PINEnable" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="apn"><PARAM name="apn" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp %(${obj}.SIMOperator).APN.Name" tr-mapped-to="%(PreferredAPN).Name" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.PreferredAPN=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" no-config-gen="true" /><COMMAND name="no apn" tr-mapped-to="PreferredAPN" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="credit" no-config-gen="true" /><COMMAND name="credit show" no-config-gen="true"><ACTION>
        local simObj=${obj}

        # Date format in seconds:
        local date_format='+%s'
        # First timeout: 30 seconds
        local waiting_message_shown=0
        local message_timeout=30
        # Final timeout: 60 seconds
        local final_timeout=60
        local balance
        local balanceTime
        local dummy

        echo "Sending SSD command to request credit balance information."
        cmclient -v dummy SET $simObj.CreditBalanceTrigger true

        start=$(date "$date_format")

        while [ 1 ] ; do
            sleep 1

            cmclient -v balanceTime GETV $simObj.CreditBalanceTime

            if [ -n "$balanceTime" ] &amp;&amp; [ "$balanceTime" -eq 0 ] ; then
                cmclient -v balance GETV $simObj.CreditBalance

                echo "Balance: $balance"

                break
            fi

            now=$(date "$date_format")
            delta=$((now - start))

            if [ "$delta" -gt "$message_timeout" -a "$waiting_message_shown" -eq 0 ] ; then
                waiting_message_shown=1
                echo "Still working: awaiting response message."
            fi

            if [ "$delta" -gt "$final_timeout" ] ; then
                echo "Reading the balance timed out."
                break
            fi
        done
      </ACTION></COMMAND><COMMAND name="stat" no-config-gen="true" /><COMMAND name="stat reset" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Stats.ResetStatistics=true</ACTION></COMMAND><COMMAND name="stat show" no-config-gen="true"><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}.Stats" "ResetStatistics" yes
      </ACTION></COMMAND><COMMAND name="show" show_all_except="yes" no-config-gen="true" escape_chars="&quot;"><DISPENTRY tr-mapped-to="SIMOperator">
        . /etc/clish/clish-commons.sh &amp;&amp; show_deref_list ${obj}.SIMOperator Name
      </DISPENTRY><DISPENTRY tr-mapped-to="PreferredAPN">
        . /etc/clish/clish-commons.sh &amp;&amp; show_deref_list ${obj}.PreferredAPN Name
      </DISPENTRY><DISPENTRY tr-mapped-to="AuthenticationStatus" /><DISPENTRY tr-mapped-to="AuthenticationRequest" /><DISPENTRY tr-mapped-to="PINRemainingAttempts" /><DISPENTRY tr-mapped-to="PUKRemainingAttempts" /><DISPENTRY tr-mapped-to="PINChangeAllowed" /><DISPENTRY tr-mapped-to="PINChange" /><DISPENTRY tr-mapped-to="NewPIN" /><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND></VIEW><VIEW name="if-wifi-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-stats-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="band" aux_availability_condition="${obj}.[SupportedFrequencyBands&gt;5GHz].[SupportedFrequencyBands&gt;2.4GHz]"><PARAM name="band_freq" ptype="FROM_CM" tr-mapped-to="OperatingFrequencyBand" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="unii1Only" aux_availability_condition="${obj}.[OperatingFrequencyBand=5GHz]"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_UNII1_ONLY" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="standard" /><COMMAND name="standard set"><PARAM name="standards" ptype="FROM_CM" tr-mapped-to="OperatingStandards" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="standard add" no-config-gen="true"><PARAM name="standard" ptype="FROM_CM" tr-mapped-to="OperatingStandards" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="standard del" no-config-gen="true"><PARAM name="standard" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="OperatingStandards" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="standard clear" tr-mapped-to="OperatingStandards" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="standard show" no-config-gen="true" tr-mapped-to="OperatingStandards"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="channel" tr-obj=".[AutoChannelEnable=false]"><PARAM name="chan" ptype="FROM_CM" tr-mapped-to="Channel" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="autoChannel" aux_availability_condition="${obj}.[AutoChannelSupported=true]"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="AutoChannelEnable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="autoChannelRefresh" aux_availability_condition="${obj}.[AutoChannelSupported=true]"><PARAM name="period" ptype="FROM_CM" tr-mapped-to="AutoChannelRefreshPeriod" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="channelBand" aux_availability_condition="${obj}.[OperatingStandards&gt;n]|${obj}.[OperatingStandards&gt;ac]"><PARAM name="bw" ptype="COMPLETE" ptype_args="listRadioChannelBandFrequencies ${obj}" tr-mapped-to="OperatingChannelBandwidth" /><ACTION>
        . /etc/clish/clish-commons.sh
        local error_msg="" auto_channel="" operating_frequency_bands="" max_channel_bandwidth_2_4_ghz=40 channel_bandwidth_802_11_ac=80
        local max_channel_bandwidth_5_ghz=160 operating_standards="" e0_rev_938_regulatory_domain="" channel

        channel=$(remove_shortest_substring_from_back ${bw} "MHz")
        
        cmclient -v auto_channel GETV ${obj}.AutoChannelEnable
        if [ "$auto_channel" = "true" ]; then
            error_msg="Cannot change channel bandwidth, because automatic channel selection is enabled"
            echo "$error_msg"
            exit 1
        elif [ "$channel" = "Auto" ]; then
            :
        else
            
            cmclient -v operating_frequency_bands GETV ${obj}.OperatingFrequencyBand
            if [ "$operating_frequency_bands" = "2.4GHz" ] &amp;&amp; [ $channel -gt $max_channel_bandwidth_2_4_ghz ]; then
                error_msg="This radio doesn't support ${bw} channel bandwidth"
                echo "$error_msg"
                exit 1
            elif [ "$operating_frequency_bands" = "5GHz" ]; then
                cmclient -v operating_standards GETV ${obj}.OperatingStandards
                case "$operating_standards" in
                    *ac*)
                    ;;
                    *)
                        
                        if [ $channel -ge $channel_bandwidth_802_11_ac ]; then
                            error_msg="This radio doesn't support ${bw} channel bandwidth"
                            echo "$error_msg"
                            exit 1
                        fi
                    ;;
                esac
                
                cmclient -v e0_rev_938_regulatory_domain GETV ${obj}.X_ADB_UseE0Rev938RegulatoryDomain
                if [ "$e0_rev_938_regulatory_domain" = "false" ] &amp;&amp; [ $channel -eq $max_channel_bandwidth_5_ghz ]; then
                    error_msg="The E0/938 regulatory domain must be enabled to use ${bw} channel bandwidth"
                    echo "$error_msg"
                    exit 1
                fi
            fi
        fi
        cmclient SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${bw}
      </ACTION></COMMAND><COMMAND name="extChannel" aux_availability_condition="${obj}.[OperatingStandards&gt;n]|${obj}.[OperatingStandards&gt;ac]"><PARAM name="mode" ptype="FROM_CM" tr-mapped-to="ExtensionChannel" /><ACTION>
        cmclient -v autochan GETV ${obj}.AutoChannelEnable
        local error_msg="Can't change to ${mode} - wrong channel"
        if [ "$autochan" = "false" ]; then
            cmclient -v chan   GETV ${obj}.Channel
            cmclient -v opfreq GETV ${obj}.OperatingFrequencyBand
            if [ "$opfreq" = "5GHz" ]; then
                case "$chan" in
                "36"|"44"|"52"|"60"|"100"|"108"|"116"|"124"|"132"|"149"|"157")
                    if [ "${mode}" = "BelowControlChannel" ]; then
                        echo $error_msg
                        exit 0
                    fi
                ;;
                *)
                    if [ "${mode}" = "AboveControlChannel" ]; then
                        echo $error_msg
                        exit 0
                    fi
                ;;
                esac
            ### 2.4GHz
            else
                if [ "$chan" -lt 5 ] &amp;&amp; [ "${mode}" = "BelowControlChannel" ]; then
                    echo $error_msg
                    exit 0
                elif [ "$chan" -gt 9 ] &amp;&amp; [ "${mode}" = "AboveControlChannel" ]; then
                    echo $error_msg
                    exit 0
                fi
            fi
        fi
        cmclient -v tmp SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${mode}
        </ACTION></COMMAND><COMMAND name="guardInterval" aux_availability_condition="${obj}.[OperatingStandards&gt;n]|${obj}.[OperatingStandards&gt;ac]"><PARAM name="mode" ptype="FROM_CM" tr-mapped-to="GuardInterval" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="mcs" aux_availability_condition="${obj}.[OperatingStandards&gt;n]|${obj}.[OperatingStandards&gt;ac]"><PARAM name="index" ptype="FROM_CM" tr-mapped-to="MCS" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="txPower"><PARAM name="power" ptype="FROM_CM" tr-mapped-to="TransmitPower" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="80211h" aux_availability_condition="${obj}.[OperatingFrequencyBand=5GHz].[OperatingStandards&gt;n]|${obj}.[OperatingFrequencyBand=5GHz].[OperatingStandards&gt;a]"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="IEEE80211hEnabled" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="regDomain"><PARAM name="country" ptype="FROM_CM" tr-mapped-to="RegulatoryDomain" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="11gProtection" aux_availability_condition="${obj}.[OperatingFrequencyBand=2.4GHz]"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_gmodeProtection" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="11nGreenfield" aux_availability_condition="${obj}.[OperatingStandards&gt;n]"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_nProtection" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="wmm"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_WMMGlobalEnable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="wmmNoAck"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_WMMGlobalNoAck" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="rxStbc" aux_availability_condition="${obj}.[OperatingStandards&gt;n]|${obj}.[OperatingStandards&gt;ac]"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_STBC_Rx" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="txStbc" aux_availability_condition="${obj}.[OperatingStandards&gt;n]|${obj}.[OperatingStandards&gt;ac]"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_STBC_Tx" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ampdu" aux_availability_condition="${obj}.[OperatingStandards&gt;n]|${obj}.[OperatingStandards&gt;ac]"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_AMPDU" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="airtimeFairness" aux_availability_condition="${obj}.[X_ADB_AMPDU=true]"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_AirTimeFairnessEnable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="basicTxRates" /><COMMAND name="basicTxRates set"><PARAM name="rates" ptype="FROM_CM" tr-mapped-to="X_ADB_BasicDataTransmitRates" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="basicTxRates add" no-config-gen="true"><PARAM name="rate" ptype="FROM_CM" tr-mapped-to="X_ADB_BasicDataTransmitRates" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="basicTxRates del" no-config-gen="true"><PARAM name="rate" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="X_ADB_BasicDataTransmitRates" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="basicTxRates clear" tr-mapped-to="X_ADB_BasicDataTransmitRates" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="basicTxRates show" no-config-gen="true" tr-mapped-to="X_ADB_BasicDataTransmitRates"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="opTxRates" /><COMMAND name="opTxRates set"><PARAM name="rates" ptype="FROM_CM" tr-mapped-to="X_ADB_OperationalDataTransmitRates" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="opTxRates add" no-config-gen="true"><PARAM name="rate" ptype="FROM_CM" tr-mapped-to="X_ADB_OperationalDataTransmitRates" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="opTxRates del" no-config-gen="true"><PARAM name="rate" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="X_ADB_OperationalDataTransmitRates" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="opTxRates clear" tr-mapped-to="X_ADB_OperationalDataTransmitRates" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="opTxRates show" no-config-gen="true" tr-mapped-to="X_ADB_OperationalDataTransmitRates"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="chanMeasurement" aux_availability_condition="${obj}.X_ADB_WiFiChannelMeasurements" /><COMMAND name="chanMeasurement scan" tr-mapped-to="X_ADB_WiFiChannelMeasurements.SupportedChannelsRefresh" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=true</ACTION></COMMAND><COMMAND name="chanMeasurement duration"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="X_ADB_WiFiChannelMeasurements.SupportedChannelsMeasDuration" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="chanMeasurement show" no-config-gen="true" tr-obj=".X_ADB_WiFiChannelMeasurements.SupportedChannels"><ACTION builtin="cmshow@cmplugin">${obj}${CMD_ATTR_tr-obj}:1</ACTION></COMMAND><COMMAND name="neighbour" /><COMMAND name="neighbour scan" tr-obj="Device.WiFi.NeighboringWiFiDiagnostic" no-config-gen="true"><ACTION>
         cmclient -v s SET Device.WiFi.NeighboringWiFiDiagnostic.DiagnosticsState Requested
         echo "WiFi neighbour scanning: started. It might take some time."

         tries=20
         while [ $tries -ne 0 ]; do
             cmclient -v state GETV Device.WiFi.NeighboringWiFiDiagnostic.DiagnosticsState
             [ "$state" = "Requested" ] || break
             sleep 1
             tries=$((tries-1))
         done

         echo "WiFi neighbour scanning: $state"
      </ACTION></COMMAND><COMMAND name="neighbour show" no-config-gen="true" tr-obj="Device.WiFi.NeighboringWiFiDiagnostic"><ACTION builtin="cmshow@cmplugin">${CMD_ATTR_tr-obj}.Result.[Radio=${obj}]</ACTION></COMMAND><COMMAND name="interferenceOverride"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="X_ADB_InterferenceOverride" tr-ifval-not-in="-1" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interferenceOverride auto" tr-mapped-to="X_ADB_InterferenceOverride" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=-1</ACTION></COMMAND><COMMAND name="powerManagement" view="if-wifi-powermgmt-view" viewid="obj=${obj}${CMD_ATTR_tr-obj};prompt=${prompt}:${VAR_GET_ALIAS}-powerManagement" tr-obj=".X_ADB_PowerManagement" tr-config-phony="true" /><COMMAND name="ssid" view="if-wifi-ssid-view" viewid="obj=${alias};prompt=${prompt}:${VAR_GET_ALIAS}-ssid;ethlink_management=integrated" tr-obj="Device.WiFi.SSID" tr-connection="LowerLayers"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.[LowerLayers=${obj}].Alias" tr-mapped-to="Alias" /></COMMAND></VIEW><VIEW name="if-wifi-powermgmt-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="rxSingleChain"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="RxchainPowerSaveEnable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="rxQuietTime"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="RxchainPowerSaveQuietTime" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="rxPps"><PARAM name="number" ptype="FROM_CM" tr-mapped-to="RxchainPowerSavePps" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="txPowerSave"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="RadioPowerSaveEnable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="txOnTime"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="RadioPowerSaveOnTime" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="txQuietTime"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="RadioPowerSaveQuietTime" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="txPps"><PARAM name="number" ptype="FROM_CM" tr-mapped-to="RadioPowerSavePps" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="if-wifi-ssid-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="ip-config-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-stats-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="enable" tr-mapped-to="Enable" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}	Device.WiFi.AccessPoint.[SSIDReference=${obj}].${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="disable" tr-mapped-to="Enable" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}	Device.WiFi.AccessPoint.[SSIDReference=${obj}].${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><VAR name="VAR_GET_SSID" dynamic="true"><ACTION>
        cmclient -v prefix GETV "${obj}.X_ADB_SSIDPrefix"
        cmclient -v ssid GETV "${obj}.SSID"
        eval 'postfix=$''{ssid#$prefix}'
        echo -n "\"$postfix\""
      </ACTION></VAR><COMMAND name="ssidName"><PARAM name="ssidName" ptype="STRING" tr-var-action="VAR_GET_SSID" /><ACTION>
        cmclient -v prefix GETV "${obj}.X_ADB_SSIDPrefix"
        cmclient -v maxlen GETV "${obj}.X_ADB_SSIDMaxLength"
        if [ -n "$prefix" ] ; then
          summary="The '$prefix' prefix will be added to the specified SSID. "
        fi
        val=$prefix${__eval PAR_ATTR_1_name}
        if [ "$maxlen" != "" -a "$maxlen" != "0" ] ; then
          eval 'vallen=$''{#val}'
          if [ $vallen -gt $maxlen ] ; then
            summary=$summary"Max SSID length is $maxlen and SSID will be shortened. "
            val=`expr substr $val 1 $maxlen`
          fi
        fi
        if [ -n "$summary" ] ; then
          echo $summary"SSID will be set to '$val'"
        fi
        cmclient SETM ${obj}.SSID=$val
      </ACTION></COMMAND><COMMAND name="ssidBcast" tr-obj="Device.WiFi.AccessPoint" tr-connection="SSIDReference"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="SSIDAdvertisementEnabled" /><ACTION builtin="cmwrap@cmplugin">SET ${CMD_ATTR_tr-obj}.[${CMD_ATTR_tr-connection}=${obj}].${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="multiToUni" tr-obj="Device.WiFi.AccessPoint" tr-connection="SSIDReference"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_MulticastToUnicastEnable" /><ACTION builtin="cmwrap@cmplugin">SET ${CMD_ATTR_tr-obj}.[${CMD_ATTR_tr-connection}=${obj}].${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="apIsolation" tr-obj="Device.WiFi.AccessPoint" tr-connection="SSIDReference"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_APIsolation" /><ACTION builtin="cmwrap@cmplugin">SET ${CMD_ATTR_tr-obj}.[${CMD_ATTR_tr-connection}=${obj}].${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="wifiSegregation" tr-obj="Device.WiFi.AccessPoint" tr-connection="SSIDReference"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_WirelessSegregation" /><ACTION builtin="cmwrap@cmplugin">SET ${CMD_ATTR_tr-obj}.[${CMD_ATTR_tr-connection}=${obj}].${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="location" tr-obj="Device.WiFi.AccessPoint" tr-connection="SSIDReference"><PARAM name="val" ptype="FROM_CM" tr-mapped-to="X_ADB_LocationDescription" /><ACTION builtin="cmwrap@cmplugin">SET ${CMD_ATTR_tr-obj}.[${CMD_ATTR_tr-connection}=${obj}].${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="associatedDevices" /><COMMAND name="associatedDevices show" no-config-gen="true" tr-obj="Device.WiFi.AccessPoint" tr-connection="SSIDReference"><ACTION builtin="cmshow@cmplugin">${CMD_ATTR_tr-obj}.[${CMD_ATTR_tr-connection}=${obj}].AssociatedDevice:1</ACTION></COMMAND><COMMAND name="hwQos"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_HwBasedQos.Enable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="macFilter" /><COMMAND name="macFilter mode"><PARAM name="val" ptype="FROM_CM" tr-mapped-to="X_ADB_MacMode" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="macFilter set"><PARAM name="macs" ptype="FROM_CM" tr-mapped-to="X_ADB_MacList" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="macFilter add" no-config-gen="true"><PARAM name="mac" ptype="FROM_CM" tr-mapped-to="X_ADB_MacList" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="macFilter del" no-config-gen="true"><PARAM name="mac" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="X_ADB_MacList" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="macFilter clear" tr-mapped-to="X_ADB_MacList" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="macFilter show" tr-mapped-to="X_ADB_MacList" no-config-gen="true"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="maxAssociations" tr-obj="Device.WiFi.AccessPoint" tr-connection="SSIDReference"><PARAM name="val" ptype="FROM_CM" tr-mapped-to="X_ADB_MaxAssocLimit" /><ACTION builtin="cmwrap@cmplugin">SET ${CMD_ATTR_tr-obj}.[${CMD_ATTR_tr-connection}=${obj}].${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="wmm" tr-obj="Device.WiFi.AccessPoint" tr-connection="SSIDReference"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="WMMEnable" /><ACTION builtin="cmwrap@cmplugin">SET ${CMD_ATTR_tr-obj}.[${CMD_ATTR_tr-connection}=${obj}].${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="uapsd" tr-obj="Device.WiFi.AccessPoint" tr-connection="SSIDReference"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="UAPSDEnable" /><ACTION builtin="cmwrap@cmplugin">SET ${CMD_ATTR_tr-obj}.[${CMD_ATTR_tr-connection}=${obj}].${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="longRetryLimit" tr-obj="Device.WiFi.AccessPoint" tr-connection="SSIDReference"><PARAM name="val" ptype="FROM_CM" tr-mapped-to="X_ADB_LongRetryLimit" /><ACTION builtin="cmwrap@cmplugin">SET ${CMD_ATTR_tr-obj}.[${CMD_ATTR_tr-connection}=${obj}].${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="shortRetryLimit" tr-obj="Device.WiFi.AccessPoint" tr-connection="SSIDReference"><PARAM name="val" ptype="FROM_CM" tr-mapped-to="RetryLimit" /><ACTION builtin="cmwrap@cmplugin">SET ${CMD_ATTR_tr-obj}.[${CMD_ATTR_tr-connection}=${obj}].${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="security" view="if-wifi-security-view" viewid="obj=${CMD_ATTR_tr-obj}.[${CMD_ATTR_tr-connection}=${obj}];prompt=${prompt}:${VAR_GET_ALIAS}-security" tr-obj="Device.WiFi.AccessPoint" tr-connection="SSIDReference" tr-config-phony="true" /><COMMAND name="accounting" view="if-wifi-accounting-view" viewid="obj=${CMD_ATTR_tr-obj}.[${CMD_ATTR_tr-connection}=${obj}];prompt=${prompt}:${VAR_GET_ALIAS}-accounting" tr-obj="Device.WiFi.AccessPoint" tr-connection="SSIDReference" tr-config-phony="true" /><COMMAND name="setPermissions"><PARAM name="permissions" ptype="FROM_CM" tr-mapped-to="X_ADB_Permissions" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	Device.WiFi.AccessPoint.[SSIDReference=${obj}].${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="if-wifi-security-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="mode" tr-obj=".Security"><PARAM name="mode" ptype="FROM_CM" tr-mapped-to="ModeEnabled" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="encryptionMode" tr-obj=".Security.[ModeEnabled!None].[ModeEnabled!WEP-64].[ModeEnabled!WEP-128].[ModeEnabled!WPA-WPA2-Personal].[ModeEnabled!WPA-WPA2-Enterprise]" aux_availability_condition="${obj}.Security.[ModeEnabled!None].[ModeEnabled!WEP-64].[ModeEnabled!WEP-128].[ModeEnabled!WPA-WPA2-Personal].[ModeEnabled!WPA-WPA2-Enterprise]"><PARAM name="mode" ptype="FROM_CM" tr-mapped-to="X_ADB_EncryptionMode" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.Security.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><VAR name="VAR_WEP_KEY"><ACTION>
        cmclient -v wepKeyMode GETV ${obj}.X_ADB_WEPKeyMode
        cmclient -v wepKey GETV ${obj}.WEPKey
        if [ "$wepKeyMode" == "ASCII" ]; then
            wepKey=`/etc/clish/hex2ascii.sh "$wepKey"`
        fi
        [ -n "$wepKey" ] &amp;&amp; echo -n "\"$wepKey\"" || :
        </ACTION></VAR><COMMAND name="wepKey" tr-obj=".Security.[WEPKey!]" aux_availability_condition="${obj}.Security.[ModeEnabled&gt;WEP]"><PARAM name="key" ptype="STRING" tr-mapped-to="WEPKey" tr-var-action="VAR_WEP_KEY" /><PARAM name="mode" ptype="FROM_CM" tr-mapped-to="X_ADB_WEPKeyMode" /><ACTION>
      [ "${mode}" = "ASCII" ] &amp;&amp; . /etc/clish/clish-commons.sh &amp;&amp; keyHex=$(ascii2hex "${key}") || keyHex="${key}"
      . /etc/clish/quick_cm.sh setm "${obj}.Security.${PAR_ATTR_1_tr-mapped-to}=$keyHex	${obj}.Security.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}"
      </ACTION></COMMAND><COMMAND name="presharedKey" tr-obj=".Security" aux_availability_condition="${obj}.Security.[ModeEnabled&gt;Personal]"><PARAM name="key" ptype="FROM_CM" tr-mapped-to="PreSharedKey" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="keyPassphrase" tr-obj=".Security" aux_availability_condition="${obj}.Security.[ModeEnabled&gt;Personal]"><PARAM name="key" ptype="FROM_CM" tr-mapped-to="KeyPassphrase" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="rekeyInterval" tr-obj=".Security" aux_availability_condition="${obj}.Security.[ModeEnabled!None].[ModeEnabled!WEP-64].[ModeEnabled!WEP-128]"><PARAM name="interval" ptype="FROM_CM" tr-mapped-to="RekeyingInterval" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="mfpMode" tr-obj=".Security"><PARAM name="interval" ptype="FROM_CM" tr-mapped-to="X_ADB_MFPModeEnabled" /><WARN condition="${obj}.Security.[ModeEnabled!WPA2-Personal].[ModeEnabled!WPA2-Enterprise]">This command will only have effect if mode is set to WPA2-Personal or WPA2-Enterprise.</WARN><ACTION builtin="cmwrap@cmplugin">SET ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="radius1" tr-obj=".Security" aux_availability_condition="${obj}.Security.[ModeEnabled&gt;Enterprise]"><PARAM name="secret" ptype="FROM_CM" tr-mapped-to="RadiusSecret" /><PARAM name="ipaddr" ptype="FROM_CM" tr-mapped-to="RadiusServerIPAddr" /><PARAM name="portno" ptype="FROM_CM" optional="true" default="1812" tr-mapped-to="RadiusServerPort" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}	${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_3_tr-mapped-to}=${__eval PAR_ATTR_3_name}</ACTION></COMMAND><COMMAND name="radius2" tr-obj=".Security" aux_availability_condition="${obj}.Security.[ModeEnabled&gt;Enterprise]"><PARAM name="secret" ptype="FROM_CM" tr-mapped-to="SecondaryRadiusSecret" /><PARAM name="ipaddr" ptype="FROM_CM" tr-mapped-to="SecondaryRadiusServerIPAddr" /><PARAM name="portno" ptype="FROM_CM" optional="true" default="1812" tr-mapped-to="SecondaryRadiusServerPort" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}	${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_3_tr-mapped-to}=${__eval PAR_ATTR_3_name}</ACTION></COMMAND><COMMAND name="wps"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="WPS.Enable" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="wpsMode" /><COMMAND name="wpsMode set"><PARAM name="modes" ptype="FROM_CM" tr-mapped-to="WPS.ConfigMethodsEnabled" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="wpsMode add" no-config-gen="true"><PARAM name="mode" ptype="FROM_CM" tr-mapped-to="WPS.ConfigMethodsEnabled" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="wpsMode del" no-config-gen="true"><PARAM name="mode" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="WPS.ConfigMethodsEnabled" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="wpsMode clear" tr-mapped-to="WPS.ConfigMethodsEnabled" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="wpsMode show" tr-mapped-to="WPS.ConfigMethodsEnabled" no-config-gen="true"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="wpsConfState"><PARAM name="state" ptype="FROM_CM" tr-mapped-to="WPS.X_ADB_ConfigurationState" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" tr-obj=".Security" show_all_except="yes" escape_chars="&quot;"><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}${CMD_ATTR_tr-obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND><COMMAND name="show wpsStatus" no-config-gen="true" tr-obj=".WPS" escape_chars="&quot;"><DISPENTRY tr-mapped-to="X_ADB_Status, X_ADB_ConfigurationState" /><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}${CMD_ATTR_tr-obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND></VIEW><VIEW name="if-wifi-accounting-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="enable" tr-obj=".Accounting" tr-mapped-to="Enable" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SET ${obj}${CMD_ATTR_tr-obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="disable" tr-obj=".Accounting" tr-mapped-to="Enable" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SET ${obj}${CMD_ATTR_tr-obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="radius" tr-obj=".Accounting"><PARAM name="secret" ptype="FROM_CM" tr-mapped-to="Secret" /><PARAM name="ipaddr" ptype="FROM_CM" tr-mapped-to="ServerIPAddr" /><PARAM name="portno" ptype="FROM_CM" optional="true" default="1813" tr-mapped-to="ServerPort" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}	${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_3_tr-mapped-to}=${__eval PAR_ATTR_3_name}</ACTION></COMMAND><COMMAND name="interimInterval" tr-obj=".Accounting"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="InterimInterval" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" tr-obj=".Accounting" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="SecondaryServerIPAddr, SecondaryServerPort, SecondarySecret" /><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}${CMD_ATTR_tr-obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND></VIEW><VIEW name="mobileModem-view" depth="dynamic" prompt="${CLISH_PROMPT}(${prompt})# "><COMMAND name="add" no-config-gen="true" /><COMMAND name="del" no-config-gen="true" /><COMMAND name="add model" tr-obj="Device.X_ADB_MobileModem.Model.[Origin!CPE]" config-gen-prio="0"><PARAM name="modelName" ptype="FROM_CM" optional="true" tr-mapped-to="Name" /><ACTION builtin="cmwrap_add_with_key@cmplugin">Device.X_ADB_MobileModem.Model ${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="del model" no-config-gen="true"><PARAM name="modelObj" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.X_ADB_MobileModem.Model.Name" tr-mapped-to="Name" /><ACTION builtin="cmwrap@cmplugin">DEL ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="model" view="modem-model-view" viewid="obj=${name};prompt=${prompt}-model" tr-obj="Device.X_ADB_MobileModem.Model.[Origin!CPE]" tr-config-phony="true"><PARAM name="name" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.X_ADB_MobileModem.Model.Name" tr-mapped-to="Name" /></COMMAND><COMMAND name="add operator" tr-obj="Device.X_ADB_MobileModem.Operator.[Origin!CPE]"><PARAM name="plmn" ptype="FROM_CM" tr-mapped-to="PLMN" /><PARAM name="shortName" ptype="FROM_CM" tr-mapped-to="ShortName" /><ACTION builtin="cmwrap_add_with_key@cmplugin">Device.X_ADB_MobileModem.Operator ${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}	Origin=User</ACTION></COMMAND><COMMAND name="operator" view="modem-operator-view" viewid="obj=${plmn};prompt=${prompt}-operator" tr-obj="Device.X_ADB_MobileModem.Operator.[Origin!CPE]" tr-config-phony="true"><PARAM name="plmn" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.X_ADB_MobileModem.Operator.PLMN Device.X_ADB_MobileModem.Operator.ShortName" tr-mapped-to="PLMN" /></COMMAND><COMMAND name="del operator" tr-obj="Device.X_ADB_MobileModem.Operator" no-config-gen="true"><PARAM name="plmn" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${CMD_ATTR_tr-obj}.PLMN ${CMD_ATTR_tr-obj}.ShortName" tr-mapped-to="PLMN" /><ACTION builtin="cmwrap@cmplugin">DEL ${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="modem-model-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_NAME})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="name" no-config-gen="true"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="Name" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="manufacturer"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="Manufacturer" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="vendorID"><PARAM name="tag" ptype="FROM_CM" tr-mapped-to="VendorID" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.Origin=User</ACTION></COMMAND><COMMAND name="productID"><PARAM name="tag" ptype="FROM_CM" tr-mapped-to="ProductID" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="target" /><COMMAND name="target vendorId"><PARAM name="tag" ptype="FROM_CM" tr-mapped-to="TargetVendorID" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="target productId" /><COMMAND name="target productId set"><PARAM name="tagList" ptype="FROM_CM" tr-mapped-to="TargetProductIDs" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="target productId add" no-config-gen="true"><PARAM name="tag" ptype="FROM_CM" tr-mapped-to="TargetProductIDs" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="target productId del" no-config-gen="true"><PARAM name="tag" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="TargetProductIDs" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="target productId show" tr-mapped-to="TargetProductIDs" no-config-gen="true"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="target productId clear" tr-mapped-to="TargetProductIDs" no-config-gen="true" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="target interfaceClass"><PARAM name="class" ptype="FROM_CM" tr-mapped-to="TargetInterfaceClass" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="mode"><PARAM name="val" ptype="FROM_CM" tr-mapped-to="Mode" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="message" no-config-gen="true" /><COMMAND name="message set"><PARAM name="messageList" ptype="FROM_CM" tr-mapped-to="MessageContents" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="message add" no-config-gen="true"><PARAM name="tag" ptype="FROM_CM" tr-mapped-to="MessageContents" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="message del" no-config-gen="true"><PARAM name="tag" ptype="FROM_CM" tr-mapped-to="MessageContents" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="message show" tr-mapped-to="MessageContents" no-config-gen="true"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="message clear" tr-mapped-to="MessageContents" no-config-gen="true" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="messageResp" no-config-gen="true" /><COMMAND name="messageResp enable" tr-mapped-to="NeedResponse" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="messageResp disable" tr-mapped-to="NeedResponse" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="supportedInterfaceType"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="SupportedInterfaceType" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interfaceType"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="ModemInterfaceType" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /></VIEW><VIEW name="modem-operator-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_SHORT_NAME})# " depth="dynamic"><VAR name="VAR_GET_SHORT_NAME" dynamic="true"><ACTION builtin="cmwrap@cmplugin">GETV ${obj}.ShortName</ACTION></VAR><COMMAND name="name"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="Name" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.Origin=User</ACTION></COMMAND><COMMAND name="shortName" no-config-gen="true"><PARAM name="shortName" ptype="FROM_CM" tr-mapped-to="ShortName" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="description"><PARAM name="description" ptype="FROM_CM" tr-mapped-to="Description" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="defaultApn"><PARAM name="apn" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}.APN.Name" tr-mapped-to="%(DefaultAPN).Name" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.DefaultAPN=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" no-config-gen="true" /><COMMAND name="no defaultApn" tr-mapped-to="DefaultAPN" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="currency"><PARAM name="currency" ptype="FROM_CM" tr-mapped-to="LocalCurrency" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="add" no-config-gen="true" /><COMMAND name="add apn" tr-obj=".APN.[Origin!CPE]" config-gen-prio="0"><PARAM name="apnName" ptype="FROM_CM" tr-mapped-to="Name" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${obj}.APN ${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="apn" view="modem-apn-view" viewid="obj=${apn};prompt=${prompt}:${VAR_GET_SHORT_NAME}-apn" tr-obj=".APN.[Origin!CPE]" tr-config-phony="true"><PARAM name="apn" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}.APN.Name" tr-mapped-to="Name" /></COMMAND><COMMAND name="del" no-config-gen="true" /><COMMAND name="del apn" no-config-gen="true"><PARAM name="apnObj" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}.APN.Name" tr-mapped-to="Name" /><ACTION builtin="cmwrap@cmplugin">DEL ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" no-config-gen="true" show_all_except="yes"><DISPENTRY tr-mapped-to="DefaultAPN">
        . /etc/clish/clish-commons.sh &amp;&amp; show_deref_list ${obj}.DefaultAPN Name
      </DISPENTRY><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND></VIEW><VIEW name="modem-apn-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_NAME})# " depth="dynamic"><COMMAND name="url"><PARAM name="url" ptype="FROM_CM" tr-mapped-to="URL" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" no-config-gen="true" /><COMMAND name="no url" tr-mapped-to="URL" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="dial"><PARAM name="dial" ptype="FROM_CM" tr-mapped-to="Dial" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no dial" tr-mapped-to="Dial" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="username"><PARAM name="username" ptype="FROM_CM" tr-mapped-to="Username" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no username" tr-mapped-to="Username" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="password" no-config-gen="true"><PARAM name="password" ptype="FROM_CM" tr-mapped-to="Password" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no password" tr-mapped-to="Password" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="authProtocol"><PARAM name="proto" ptype="FROM_CM" tr-mapped-to="AuthenticationProtocol" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.Origin=User</ACTION></COMMAND><COMMAND name="accounting" no-config-gen="true" /><COMMAND name="accounting server"><PARAM name="server" ptype="FROM_CM" tr-mapped-to="AccountingServer" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no accounting" no-config-gen="true" /><COMMAND name="no accounting server" tr-mapped-to="AccountingServer" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="accounting command"><PARAM name="command" ptype="FROM_CM" tr-mapped-to="AccountingInfoCommand" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no accounting command" tr-mapped-to="AccountingInfoCommand" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /></VIEW><VIEW name="wan-if-eth-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="common-if-eth-view" help="true" completion="true" /></VIEW><VIEW name="common-if-eth-view" depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-stats-view" help="true" completion="true" /><NAMESPACE ref="ethlink-includeconfig-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="reset" no-config-gen="true" tr-mapped-to="X_ADB_Reset"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=true</ACTION></COMMAND><COMMAND name="rateAndMode"><PARAM name="rate" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.X_ADB_RateSupported" tr-ifval-not-in="-1" tr-mapped-to="MaxBitRate" /><PARAM name="duplexMode" ptype="FROM_CM" tr-mapped-to="DuplexMode" /><ACTION>
      cmclient -v val GETV "${obj}.Enable"
      [ "$val" = "true" ] &amp;&amp; cmclient -v res SETM "${obj}.Enable=false"
      cmclient -v res SETM "${obj}.MaxBitRate=${rate}	${obj}.DuplexMode=${duplexMode}	${obj}.Enable=$val"
      </ACTION></COMMAND><COMMAND name="rateAndMode Auto" tr-mapped-to="MaxBitRate" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.MaxBitRate=-1	${obj}.DuplexMode=Auto</ACTION></COMMAND><COMMAND name="energySave" aux_availability_condition="${obj}.[EEECapability=true]"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="EEEEnable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="hwQoS"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_HwBasedQos.Enable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="lan-if-eth-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="common-if-eth-view" help="true" completion="true" /></VIEW><VIEW name="qos-main-view" prompt="${CLISH_PROMPT}(cfg-qos)# " depth="dynamic"><COMMAND name="no" /><COMMAND name="add" /><COMMAND name="del" /><VAR name="VAR_RUNCONF_CLASSINDEX_QOS_D" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        var_runconf_classIndex ${obj}.DefaultForwardingPolicy get_forwarding_policies_qos
      </ACTION></VAR><COMMAND name="defaultClassificationIndex"><PARAM name="index" ptype="COMPLETE" ptype_args="get_forwarding_policies_qos" tr-var-action="VAR_RUNCONF_CLASSINDEX_QOS_D" /><PARAM name="new_value" ptype="UINT" optional="true" /><ACTION>
          val=${index}
          if [ "${index}" = "new" ]; then
              if [ -z "${new_value}" ]; then
                  echo "Provide a new value as the second parameter"
                  exit
              fi
              val=${new_value}
          else
              if [ -n "${new_value}" ]; then
                  echo "Warning: the second parameter ignored (valid only for \"new\")"
              fi
          fi
          . /etc/clish/quick_cm.sh setm "${obj}.DefaultForwardingPolicy=$val"
      </ACTION></COMMAND><VAR name="VAR_RUNCONF_TRAFFICCLASS_QOS_D" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        var_runconf_classIndex ${obj}.DefaultTrafficClass get_traffic_class
      </ACTION></VAR><COMMAND name="defaultTrafficClass"><PARAM name="index" ptype="COMPLETE" ptype_args="get_traffic_class" tr-var-action="VAR_RUNCONF_TRAFFICCLASS_QOS_D" /><PARAM name="new_value" ptype="UINT" optional="true" /><ACTION>
          val=${index}
          if [ "${index}" = "new" ]; then
              if [ -z "${new_value}" ]; then
                  echo "Provide a new value as the second parameter"
                  exit
              fi
              val=${new_value}
          else
              if [ -n "${new_value}" ]; then
                  echo "Warning: the second parameter ignored (valid only for \"new\")"
              fi
          fi
          . /etc/clish/quick_cm.sh setm "${obj}.DefaultTrafficClass=$val"
      </ACTION></COMMAND><COMMAND name="defaultPolicer"><PARAM name="policer" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.QoS.Policer.Alias" tr-mapped-to="%(DefaultPolicer).Alias" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.DefaultPolicer ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no defaultPolicer" tr-mapped-to="DefaultPolicer" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="defaultQueue"><PARAM name="queue" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.QoS.Queue.Alias" tr-mapped-to="%(DefaultQueue).Alias" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.DefaultQueue ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no defaultQueue" tr-mapped-to="DefaultQueue" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="defaultDscpMark" /><COMMAND name="defaultDscpMark sameAsInput" tr-mapped-to="DefaultDSCPMark" tr-val="-1" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="defaultDscpMark automatic" tr-mapped-to="DefaultDSCPMark" tr-val="-2" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="defaultDscpMark value"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="DefaultDSCPMark" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="defaultEthPrio" /><COMMAND name="defaultEthPrio sameAsInput" tr-mapped-to="DefaultEthernetPriorityMark" tr-val="-1" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="defaultEthPrio automatic" tr-mapped-to="DefaultEthernetPriorityMark" tr-val="-2" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="defaultEthPrio value"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="DefaultEthernetPriorityMark" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="add classificationRule" tr-obj="Device.QoS.Classification" config-gen-prio="0"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${CMD_ATTR_tr-obj} Alias=${alias}</ACTION></COMMAND><COMMAND name="del classificationRule" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.QoS.Classification.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="classificationRule" view="qos-classification-rule-view" viewid="obj=${alias};prompt=cfg-qos-classificationRule" tr-obj=".Classification"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.QoS.Classification.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="add policer" tr-obj="Device.QoS.Policer" config-gen-prio="0"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${CMD_ATTR_tr-obj} Alias=${alias}</ACTION></COMMAND><COMMAND name="del policer" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.QoS.Policer.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="policer" view="qos-policer-view" viewid="obj=${alias};prompt=cfg-qos-policer" tr-obj=".Policer"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.QoS.Policer.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="add queue" tr-obj="Device.QoS.Queue" config-gen-prio="0"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${CMD_ATTR_tr-obj} Alias=${alias}</ACTION></COMMAND><COMMAND name="del queue" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.QoS.Queue.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="queue" view="qos-queue-view" viewid="obj=${alias};prompt=cfg-qos-queue" tr-obj=".Queue"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.QoS.Queue.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="add queueStat" tr-obj="Device.QoS.QueueStats" config-gen-prio="0"><PARAM name="queue" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.QoS.Queue.Alias" tr-mapped-to="%(Queue).Alias" /><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_alias_and_key@cmplugin">${CMD_ATTR_tr-obj} Queue=${queue}</ACTION></COMMAND><COMMAND name="del queueStat" no-config-gen="true"><PARAM name="name" ptype="COMPLETE" ptype_args="get_cust_obj_by_prop_with_pref Device.QoS.QueueStats.Alias#Device.QoS.QueueStats.Queue^Alias '#' true" /><ACTION builtin="cmwrap@cmplugin">DEL ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><VAR name="VAR_QOS_QUEUESTATS" dynamic="true"><ACTION>
         pref="Queue."
         case ${obj} in
         Device.QoS.QueueStats*)
             pref="QueueStats."
             ;;
         esac
         cmclient -v alias GETV "${obj}.Alias"
         echo -n "\"$pref$alias\""
      </ACTION></VAR><COMMAND name="queueStat" view="qos-queue-stat-view" viewid="obj=${queuestat};prompt=cfg-qos-queueStat" tr-obj=".QueueStats"><PARAM name="queuestat" ptype="COMPLETE" ptype_args="get_cust_obj_by_prop_with_pref Device.QoS.QueueStats.Alias#Device.QoS.QueueStats.Queue^Alias '#' true" tr-var-action="VAR_QOS_QUEUESTATS" /></COMMAND><COMMAND name="add shaper" tr-obj="Device.QoS.Shaper" config-gen-prio="0"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${CMD_ATTR_tr-obj} Alias=${alias}</ACTION></COMMAND><COMMAND name="del shaper" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.QoS.Shaper.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="shaper" view="qos-shaper-view" viewid="obj=${alias};prompt=cfg-qos-shaper" tr-obj=".Shaper"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.QoS.Shaper.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="add ingressShaper" tr-obj="Device.QoS.X_ADB_IngressShaper" config-gen-prio="0"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${CMD_ATTR_tr-obj} Alias=${alias}</ACTION></COMMAND><COMMAND name="del ingressShaper" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.QoS.X_ADB_IngressShaper.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="ingressShaper" view="qos-ingress-shaper-view" viewid="obj=${alias};prompt=cfg-qos-ingressShaper" tr-obj=".X_ADB_IngressShaper"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.QoS.X_ADB_IngressShaper.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="X_ADB_TR098Reference" /><DISPENTRY tr-mapped-to="DefaultQueue">
            show_deref_list ${obj}.DefaultQueue Alias
        </DISPENTRY><DISPENTRY tr-mapped-to="DefaultPolicer">
            show_deref_list ${obj}.DefaultPolicer Alias
        </DISPENTRY><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "Device.QoS" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND></VIEW><VIEW name="qos-classification-rule-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-permissions-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><COMMAND name="no" /><COMMAND name="order"><PARAM name="order" ptype="FROM_CM" tr-mapped-to="Order" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><VAR name="VAR_QOS_CLASS_IFACE" dynamic="true"><ACTION>
        cmclient -v all GETV ${obj}.AllInterfaces
        if [ "$all" = "true" ]; then
            echo -n "all"
        else
            cmclient -v iface GETV ${obj}.Interface
            if [ "$iface" = "X_ADB_Local" ]; then
                echo -n "local"
            elif [ -n "$iface" ]; then
                case $iface in
                Device.Bridging.Bridge*)
                    pref=${iface#*"Device.Bridging.Bridge."}
                    pref=${pref%%"."*}
                    pref="Bridge.$pref."
                    ;;
                *)
                    pref=${iface#*"Device."}
                    pref=${pref%%"."*}
                    pref="$pref."
                    ;;
                esac
                cmclient -v alias GETV "$iface.Alias"
                echo -n "\"$pref$alias\""
            fi
        fi
      </ACTION></VAR><COMMAND name="interface"><PARAM name="ifname" ptype="COMPLETE" ptype_args="get_cust_obj_by_prop_with_pref Device.PPP.Interface.Alias#Device.ATM.Link.Alias#Device.PTM.Link.Alias#Device.WiFi.SSID.Alias#Device.Ethernet.Interface.Alias#Device.Ethernet.VLANTermination.Alias#Device.Bridging.Bridge.Port.[ManagementPort=true].Alias all\(all\)#local\(X_ADB_Local\) true" tr-var-action="VAR_QOS_CLASS_IFACE" /><ACTION>
            case ${ifname} in
            all)
                . /etc/clish/quick_cm.sh setm "${obj}.AllInterfaces=true	${obj}.Interface="
                ;;
            *)
                . /etc/clish/quick_cm.sh setm "${obj}.AllInterfaces=false	${obj}.Interface=${ifname}"
                ;;
            esac
      </ACTION></COMMAND><COMMAND name="no interface" tr-obj=".[AllInterfaces=false].[Interface=]" tr-config-phony="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.AllInterfaces=false	${obj}.Interface=</ACTION></COMMAND><VAR name="VAR_QOS_CLASS_DEST_ADDRESS_WITH_PREFIX" dynamic="true"><ACTION>
            . /etc/clish/ip-qos.sh print_ip_addr_and_mask ${obj} DestIP DestMask DestIPExclude
        </ACTION></VAR><COMMAND name="destIp"><PARAM name="addr_with_mask" ptype="IP_ADDRESS_OR_PREFIX" tr-var-action="VAR_QOS_CLASS_DEST_ADDRESS_WITH_PREFIX" /><PARAM name="exclude" ptype="EXCLUDE" default="false" optional="true" /><ACTION>
            . /etc/clish/ip-qos.sh set_ip_addr_and_mask ${obj} DestIP DestMask "${addr_with_mask}" DestIPExclude ${exclude}
      </ACTION></COMMAND><COMMAND name="no destIp" tr-mapped-to="DestIP" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.DestIP=	${obj}.DestMask=	${obj}.DestIPExclude=false</ACTION></COMMAND><COMMAND name="srcIp" /><VAR name="VAR_QOS_CLASS_SRC_ADDRESS_WITH_PREFIX" dynamic="true"><ACTION>
            . /etc/clish/ip-qos.sh print_ip_addr_and_mask ${obj} SourceIP SourceMask
        </ACTION></VAR><COMMAND name="srcIp set"><PARAM name="addr_with_mask_list" ptype="LIST_IP_ADDRESS_OR_PREFIX" tr-var-action="VAR_QOS_CLASS_SRC_ADDRESS_WITH_PREFIX" /><ACTION>
            . /etc/clish/ip-qos.sh set_ip_addr_and_mask ${obj} SourceIP SourceMask "${addr_with_mask_list}"
      </ACTION></COMMAND><COMMAND name="srcIp show" no-config-gen="true"><ACTION>
            . /etc/clish/ip-qos.sh print_ip_addr_and_mask ${obj} SourceIP SourceMask "-" true
        </ACTION></COMMAND><COMMAND name="srcIp clear" tr-config-phony="true" tr-obj=".[SourceIP=]"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.SourceIP=	${obj}.SourceMask=</ACTION></COMMAND><COMMAND name="srcIp add" no-config-gen="true"><PARAM name="addr_with_mask" ptype="IP_ADDRESS_OR_PREFIX" /><ACTION>
            . /etc/clish/ip-qos.sh add_ip_addr_and_mask ${obj} SourceIP SourceMask "${addr_with_mask}"
      </ACTION></COMMAND><COMMAND name="srcIp del" no-config-gen="true"><PARAM name="addr_with_mask" ptype="IP_ADDRESS_OR_PREFIX" /><ACTION>
            . /etc/clish/ip-qos.sh del_ip_addr_and_mask ${obj} SourceIP SourceMask "${addr_with_mask}"
      </ACTION></COMMAND><COMMAND name="srcIp exclude" tr-obj=".[SourceIPExclude=true]" tr-config-phony="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.SourceIPExclude=true</ACTION></COMMAND><COMMAND name="no srcIp" /><COMMAND name="no srcIp exclude" tr-obj=".[SourceIPExclude=false]" tr-config-phony="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.SourceIPExclude=false</ACTION></COMMAND><COMMAND name="protocol" tr-obj=".[Protocol!-1]"><PARAM name="proto" ptype="FROM_CM" tr-mapped-to="Protocol" /><PARAM name="exclude" ptype="EXCLUDE" default="false" optional="true" tr-mapped-to="ProtocolExclude" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${proto}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${exclude}</ACTION></COMMAND><COMMAND name="no protocol" tr-mapped-to="Protocol" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Protocol=-1	${obj}.ProtocolExclude=false</ACTION></COMMAND><COMMAND name="destPort" tr-obj=".[DestPort!-1]"><PARAM name="port_min" ptype="FROM_CM" tr-mapped-to="DestPort" /><PARAM name="port_max" ptype="FROM_CM" default="-1" optional="true" tr-mapped-to="DestPortRangeMax" /><PARAM name="exclude" ptype="EXCLUDE" default="false" optional="true" tr-mapped-to="DestPortExclude" /><ACTION>
        . /etc/clish/clish-commons.sh
        [ ${port_max} -ne -1 -a ${port_min} -gt ${port_max} ] &amp;&amp; die 'ERROR: parameter "port_min" must be less or equal to "port_max"'
        . /etc/clish/quick_cm.sh setm "${obj}.${PAR_ATTR_1_tr-mapped-to}=${port_min}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${port_max}	${obj}.${PAR_ATTR_3_tr-mapped-to}=${exclude}"
      </ACTION></COMMAND><COMMAND name="no destPort" tr-mapped-to="DestPort" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.DestPort=-1	${obj}.DestPortRangeMax=-1	${obj}.DestPortExclude=false</ACTION></COMMAND><COMMAND name="srcPort" tr-obj=".[SourcePort!-1]"><PARAM name="port_min" ptype="FROM_CM" tr-mapped-to="SourcePort" /><PARAM name="port_max" ptype="FROM_CM" default="-1" optional="true" tr-mapped-to="SourcePortRangeMax" /><PARAM name="exclude" ptype="EXCLUDE" default="false" optional="true" tr-mapped-to="SourcePortExclude" /><ACTION>
        . /etc/clish/clish-commons.sh
        [ ${port_max} -ne -1 -a ${port_min} -gt ${port_max} ] &amp;&amp; die 'ERROR: parameter "port_min" must be less or equal to "port_max"'
        . /etc/clish/quick_cm.sh setm "${obj}.${PAR_ATTR_1_tr-mapped-to}=${port_min}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${port_max}	${obj}.${PAR_ATTR_3_tr-mapped-to}=${exclude}"
      </ACTION></COMMAND><COMMAND name="no srcPort" tr-mapped-to="SourcePort" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.SourcePort=-1	${obj}.SourcePortRangeMax=-1	${obj}.SourcePortExclude=false</ACTION></COMMAND><COMMAND name="srcMac" /><VAR name="VAR_QOS_CLASS_SRC_MAC_LIST" dynamic="true"><ACTION>
            . /etc/clish/ip-qos.sh print_mac_addr_and_mask ${obj} SourceMACAddress SourceMACMask
        </ACTION></VAR><COMMAND name="srcMac set"><PARAM name="addr_with_mask_list" ptype="LIST_MAC_ADDRESS_WITH_OPT_MASK" tr-var-action="VAR_QOS_CLASS_SRC_MAC_LIST" /><ACTION>
            . /etc/clish/ip-qos.sh set_mac_addr_and_mask ${obj} SourceMACAddress SourceMACMask "${addr_with_mask_list}"
      </ACTION></COMMAND><COMMAND name="srcMac show" no-config-gen="true"><ACTION>
            . /etc/clish/ip-qos.sh print_mac_addr_and_mask ${obj} SourceMACAddress SourceMACMask "-" true
        </ACTION></COMMAND><COMMAND name="srcMac clear" tr-config-phony="true" tr-obj=".[SourceMACAddress=]"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.SourceMACAddress=	${obj}.SourceMACMask=</ACTION></COMMAND><COMMAND name="srcMac add" no-config-gen="true"><PARAM name="addr_with_mask_list" ptype="MAC_ADDRESS_WITH_OPT_MASK" /><ACTION>
            . /etc/clish/ip-qos.sh add_mac_addr_and_mask ${obj} SourceMACAddress SourceMACMask "${addr_with_mask_list}"
      </ACTION></COMMAND><COMMAND name="srcMac del" no-config-gen="true"><PARAM name="addr_with_mask_list" ptype="MAC_ADDRESS_WITH_OPT_MASK" /><ACTION>
            . /etc/clish/ip-qos.sh del_mac_addr_and_mask ${obj} SourceMACAddress SourceMACMask "${addr_with_mask_list}"
      </ACTION></COMMAND><COMMAND name="srcMac exclude" tr-obj=".[SourceMACExclude=true]" tr-config-phony="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.SourceMACExclude=true</ACTION></COMMAND><COMMAND name="no srcMac" /><COMMAND name="no srcMac exclude" tr-obj=".[SourceMACExclude=false]" tr-config-phony="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.SourceMACExclude=false</ACTION></COMMAND><VAR name="VAR_QOS_CLASS_DST_MAC_LIST" dynamic="true"><ACTION>
            . /etc/clish/ip-qos.sh print_mac_addr_and_mask ${obj} DestMACAddress DestMACMask DestMACExclude
        </ACTION></VAR><COMMAND name="destMac"><PARAM name="addr_with_mask" ptype="MAC_ADDRESS_WITH_OPT_MASK" tr-var-action="VAR_QOS_CLASS_DST_MAC_LIST" /><PARAM name="exclude" ptype="EXCLUDE" default="false" optional="true" /><ACTION>
            . /etc/clish/ip-qos.sh set_mac_addr_and_mask ${obj} DestMACAddress DestMACMask "${addr_with_mask}" DestMACExclude ${exclude}
      </ACTION></COMMAND><COMMAND name="no destMac" tr-obj=".[DestMACAddress=]" tr-config-phony="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.DestMACAddress=	${obj}.DestMACMask=	${obj}.DestMACExclude=false</ACTION></COMMAND><COMMAND name="ethertype" tr-obj=".[Ethertype!-1]"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="Ethertype" /><PARAM name="exclude" ptype="EXCLUDE" default="false" optional="true" tr-mapped-to="EthertypeExclude" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${type}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${exclude}</ACTION></COMMAND><COMMAND name="no ethertype" tr-mapped-to="Ethertype" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Ethertype=-1	${obj}.EthertypeExclude=false</ACTION></COMMAND><COMMAND name="ssap" tr-obj=".[SSAP!-1]"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="SSAP" /><PARAM name="exclude" ptype="EXCLUDE" default="false" optional="true" tr-mapped-to="SSAPExclude" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${type}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${exclude}</ACTION></COMMAND><COMMAND name="no ssap" tr-mapped-to="SSAP" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.SSAP=-1	${obj}.SSAPExclude=false</ACTION></COMMAND><COMMAND name="dsap" tr-obj=".[DSAP!-1]"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="DSAP" /><PARAM name="exclude" ptype="EXCLUDE" default="false" optional="true" tr-mapped-to="DSAPExclude" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${type}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${exclude}</ACTION></COMMAND><COMMAND name="no dsap" tr-mapped-to="DSAP" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.DSAP=-1	${obj}.DSAPExclude=false</ACTION></COMMAND><COMMAND name="llc" tr-obj=".[LLCControl!-1]"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="LLCControl" /><PARAM name="exclude" ptype="EXCLUDE" default="false" optional="true" tr-mapped-to="LLCControlExclude" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${type}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${exclude}</ACTION></COMMAND><COMMAND name="no llc" tr-mapped-to="LLCControl" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.LLCControl=-1	${obj}.LLCControlExclude=false</ACTION></COMMAND><COMMAND name="snapOui" tr-obj=".[SNAPOUI!-1]"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="SNAPOUI" /><PARAM name="exclude" ptype="EXCLUDE" default="false" optional="true" tr-mapped-to="SNAPOUIExclude" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${type}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${exclude}</ACTION></COMMAND><COMMAND name="no snapOui" tr-mapped-to="SNAPOUI" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.SNAPOUI=-1	${obj}.SNAPOUIExclude=false</ACTION></COMMAND><COMMAND name="srcVendorClassId" tr-obj=".[SourceVendorClassID!]"><PARAM name="id" ptype="FROM_CM" tr-mapped-to="SourceVendorClassID" /><PARAM name="exclude" ptype="EXCLUDE" default="false" optional="true" tr-mapped-to="SourceVendorClassIDExclude" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${id}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${exclude}</ACTION></COMMAND><COMMAND name="no srcVendorClassId" tr-mapped-to="SourceVendorClassID" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.SourceVendorClassID=	${obj}.SourceVendorClassIDExclude=false</ACTION></COMMAND><COMMAND name="srcVendorClassIdMode"><PARAM name="mode" ptype="FROM_CM" tr-mapped-to="SourceVendorClassIDMode" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="destVendorClassId" tr-obj=".[DestVendorClassID!]"><PARAM name="id" ptype="FROM_CM" tr-mapped-to="DestVendorClassID" /><PARAM name="exclude" ptype="EXCLUDE" default="false" optional="true" tr-mapped-to="DestVendorClassIDExclude" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${id}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${exclude}</ACTION></COMMAND><COMMAND name="no destVendorClassId" tr-mapped-to="DestVendorClassID" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.DestVendorClassID=	${obj}.DestVendorClassIDExclude=false</ACTION></COMMAND><COMMAND name="destVendorClassIdMode"><PARAM name="mode" ptype="FROM_CM" tr-mapped-to="DestVendorClassIDMode" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="srcClientId" tr-obj=".[SourceClientID!]"><PARAM name="id" ptype="FROM_CM" tr-mapped-to="SourceClientID" /><PARAM name="exclude" ptype="EXCLUDE" default="false" optional="true" tr-mapped-to="SourceClientIDExclude" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${id}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${exclude}</ACTION></COMMAND><COMMAND name="no srcClientId" tr-mapped-to="SourceClientID" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.SourceClientID=	${obj}.SourceClientIDExclude=false</ACTION></COMMAND><COMMAND name="srcUserClassId"><PARAM name="id" ptype="FROM_CM" tr-mapped-to="SourceUserClassID" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" default="false" tr-mapped-to="SourceUserClassIDExclude" tr-val="true" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no srcUserClassId" tr-mapped-to="SourceUserClassID" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.SourceUserClassID=	${obj}.SourceUserClassIDExclude=false</ACTION></COMMAND><COMMAND name="destUserClassId"><PARAM name="id" ptype="FROM_CM" tr-mapped-to="DestUserClassID" /><PARAM name="exclude" ptype="EXCLUDE" optional="true" default="false" tr-mapped-to="DestUserClassIDExclude" tr-val="true" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no destUserClassId" tr-mapped-to="DestUserClassID" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.DestUserClassID=	${obj}.DestUserClassIDExclude=false</ACTION></COMMAND><COMMAND name="destClientId" tr-obj=".[DestClientID!]"><PARAM name="id" ptype="FROM_CM" tr-mapped-to="DestClientID" /><PARAM name="exclude" ptype="EXCLUDE" default="false" optional="true" tr-mapped-to="DestClientIDExclude" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${id}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${exclude}</ACTION></COMMAND><COMMAND name="no destClientId" tr-mapped-to="DestClientID" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.DestClientID=	${obj}.DestClientIDExclude=false</ACTION></COMMAND><COMMAND name="tcpack" tr-obj=".[TCPACK=true]"><PARAM name="exclude" ptype="EXCLUDE" default="false" optional="true" tr-mapped-to="TCPACKExclude" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.TCPACK=true	${obj}.${PAR_ATTR_1_tr-mapped-to}=${exclude}</ACTION></COMMAND><COMMAND name="no tcpack" tr-mapped-to="TCPACK" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.TCPACK=false	${obj}.TCPACKExclude=false</ACTION></COMMAND><COMMAND name="ipLength" tr-obj=".[IPLengthMin!0]"><PARAM name="min" ptype="FROM_CM" tr-mapped-to="IPLengthMin" /><PARAM name="max" ptype="FROM_CM" tr-mapped-to="IPLengthMax" /><PARAM name="exclude" tr-mapped-to="IPLengthExclude" ptype="EXCLUDE" default="false" optional="true" /><ACTION>
        . /etc/clish/clish-commons.sh
        [ ${min} -lt 1 ] &amp;&amp; die 'ERROR: parameter "min" must greater than 0'
        [ ${min} -gt ${max} ] &amp;&amp; die 'ERROR: parameter "min" must be less or equal to "max"'
        . /etc/clish/quick_cm.sh setm "${obj}.IPLengthMin=${min}	${obj}.IPLengthMax=${max}	${obj}.IPLengthExclude=${exclude}"
      </ACTION></COMMAND><COMMAND name="no ipLength" tr-obj=".[IPLengthMin=0]" tr-config-phony="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.IPLengthMin=0	${obj}.IPLengthMax=0	${obj}.IPLengthExclude=false</ACTION></COMMAND><COMMAND name="dscp" tr-obj=".[DSCPCheck!-1]"><PARAM name="val" ptype="FROM_CM" tr-mapped-to="DSCPCheck" /><PARAM name="exclude" ptype="EXCLUDE" default="false" optional="true" tr-mapped-to="DSCPExclude" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${val}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${exclude}</ACTION></COMMAND><COMMAND name="no dscp" tr-mapped-to="DSCPCheck" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.DSCPCheck=-1	${obj}.DSCPExclude=false</ACTION></COMMAND><COMMAND name="dscpMark" /><COMMAND name="dscpMark sameAsInput" tr-mapped-to="DSCPMark" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="dscpMark automatic" tr-mapped-to="DSCPMark" tr-val="-2"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="dscpMark value" tr-obj=".[DSCPMark!-1].[DSCPMark!-2]"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="DSCPMark" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ethPrio" tr-obj=".[EthernetPriorityCheck!-1]"><PARAM name="val" ptype="FROM_CM" tr-mapped-to="EthernetPriorityCheck" /><PARAM name="exclude" ptype="EXCLUDE" default="false" optional="true" tr-mapped-to="EthernetPriorityExclude" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${val}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${exclude}</ACTION></COMMAND><COMMAND name="no ethPrio" tr-mapped-to="EthernetPriorityCheck" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.EthernetPriorityCheck=-1	${obj}.EthernetPriorityExclude=false</ACTION></COMMAND><COMMAND name="ethPrioMark" /><COMMAND name="ethPrioMark sameAsInput" tr-mapped-to="EthernetPriorityMark" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="ethPrioMark automatic" tr-mapped-to="EthernetPriorityMark" tr-val="-2"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="ethPrioMark value" tr-obj=".[EthernetPriorityMark!-1].[EthernetPriorityMark!-2]"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="EthernetPriorityMark" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><VAR name="VAR_CLASSRULE_VLANID_EXCLUDE"><ACTION>
      EXC=" "
      cmclient -v res GETV ${obj}.VLANIDExclude
      [ "$res" = "true" ] &amp;&amp; EXC=exclude
      echo -n "$EXC"
      </ACTION></VAR><COMMAND name="vlanId" tr-obj=".[VLANIDCheck!-1]"><PARAM name="val" ptype="FROM_CM" tr-mapped-to="VLANIDCheck" /><PARAM name="exclude" ptype="EXCLUDE" default="false" optional="true" tr-mapped-to="VLANIDExclude" tr-var-action="VAR_CLASSRULE_VLANID_EXCLUDE" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${val}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${exclude}</ACTION></COMMAND><COMMAND name="no vlanId" tr-mapped-to="VLANIDCheck" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.VLANIDCheck=-1	${obj}.VLANIDExclude=false</ACTION></COMMAND><VAR name="VAR_RUNCONF_CLASSINDEX_QOS" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        var_runconf_classIndex ${obj}.ForwardingPolicy get_forwarding_policies_qos
      </ACTION></VAR><COMMAND name="classificationIndex"><PARAM name="index" ptype="COMPLETE" ptype_args="get_forwarding_policies_qos" tr-var-action="VAR_RUNCONF_CLASSINDEX_QOS" /><PARAM name="new_value" ptype="UINT" optional="true" /><ACTION>
          val=${index}
          if [ "${index}" = "new" ]; then
              if [ -z "${new_value}" ]; then
                  echo "Provide a new value as the second parameter"
                  exit
              fi
              val=${new_value}
          else
              if [ -n "${new_value}" ]; then
                  echo "Warning: the second parameter ignored (valid only for \"new\")"
              fi
          fi
          . /etc/clish/quick_cm.sh setm "${obj}.ForwardingPolicy=$val"
      </ACTION></COMMAND><VAR name="VAR_RUNCONF_TRAFFICCLASS_QOS" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        var_runconf_classIndex ${obj}.TrafficClass get_traffic_class
      </ACTION></VAR><COMMAND name="trafficClass"><PARAM name="index" ptype="COMPLETE" ptype_args="get_traffic_class" tr-var-action="VAR_RUNCONF_TRAFFICCLASS_QOS" /><PARAM name="new_value" ptype="UINT" optional="true" /><ACTION>
          cmclient -v app GETV ${obj}.App
          [ -n "$app" ] &amp;&amp; echo "Warning: \"trafficClass\" is not compatible with the current set of \"application\" associated to this classification rule"
          val=${index}
          if [ "${index}" = "new" ]; then
              if [ -z "${new_value}" ]; then
                  echo "Provide a new value as the second parameter"
                  exit
              fi
              val=${new_value}
          else
              if [ -n "${new_value}" ]; then
                  echo "Warning: the second parameter ignored (valid only for \"new\")"
              fi
          fi
          . /etc/clish/quick_cm.sh setm "${obj}.TrafficClass=$val"
      </ACTION></COMMAND><COMMAND name="no trafficClass" tr-mapped-to="TrafficClass" tr-val="-1"><ACTION>
            cmclient -v app GETV ${obj}.App
            [ -z "$app" ] &amp;&amp; echo "Warning: Target \"application\" must be set using the \"app\" command"
            . /etc/clish/quick_cm.sh setm "${obj}.TrafficClass=-1"
        </ACTION></COMMAND><COMMAND name="policer"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.QoS.Policer.Alias" tr-mapped-to="%(Policer).Alias" /><ACTION>
        cmclient -v app GETV ${obj}.App
        [ -n "$app" ] &amp;&amp; echo "Warning: \"policer\" is not compatible with the current set of \"application\" associated to this classification rule"
        . /etc/clish/quick_cm.sh setm "${obj}.Policer=${__eval PAR_ATTR_1_name}"
      </ACTION></COMMAND><COMMAND name="no policer" tr-mapped-to="Policer" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Policer=</ACTION></COMMAND><COMMAND name="app"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.QoS.App.Alias" tr-mapped-to="%(App).Alias" /><ACTION>
            cmclient -v traffic GETV ${obj}.TrafficClass
            [ "x$traffic" != "x-1" ] &amp;&amp; echo "Warning: \"app\" is not compatible with the current set of \"trafficClass\" associated to this classification rule"
            cmclient -v policer GETV ${obj}.Policer
            [ -n "$policer" ] &amp;&amp; echo "Warning: \"app\" is not compatible with the current set of \"policer\" associated to this classification rule"
            . /etc/clish/quick_cm.sh setm "${obj}.App=${__eval PAR_ATTR_1_name}"
      </ACTION></COMMAND><COMMAND name="no app" tr-mapped-to="App" tr-val=""><ACTION>
        cmclient -v traffic GETV ${obj}.TrafficClass
        [ "x$traffic" = "x-1" ] &amp;&amp; echo "Warning: Target \"traffic class\" must be set using the \"trafficClass\" command"
        . /etc/clish/quick_cm.sh setm "${obj}.App="
      </ACTION></COMMAND><COMMAND name="ip" /><COMMAND name="ip version" tr-obj=".[X_ADB_IPVersion!-1]"><PARAM name="ver" ptype="QOS_IP_VER" tr-mapped-to="X_ADB_IPVersion" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.X_ADB_IPVersion ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no ip" /><COMMAND name="no ip version" tr-mapped-to="X_ADB_IPVersion" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.X_ADB_IPVersion -1</ACTION></COMMAND><COMMAND name="interfaceType"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="X_ADB_InterfaceType" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.X_ADB_InterfaceType ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="connectionRateLimit"><PARAM name="count" ptype="FROM_CM" tr-mapped-to="X_ADB_ConnectionRateLimit" /><PARAM name="unit" ptype="FROM_CM" tr-mapped-to="X_ADB_ConnectionRateLimitUnit" /><PARAM name="burst" ptype="FROM_CM" tr-mapped-to="X_ADB_ConnectionRateLimitBurst" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}	${obj}.${PAR_ATTR_3_tr-mapped-to}=${__eval PAR_ATTR_3_name}</ACTION></COMMAND><COMMAND name="dateRange"><PARAM name="date_start" ptype="FROM_CM" tr-mapped-to="X_ADB_DateStart" /><PARAM name="date_stop" ptype="FROM_CM" tr-mapped-to="X_ADB_DateStop" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}</ACTION></COMMAND><COMMAND name="no dateRange" tr-mapped-to="X_ADB_DateStart" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_DateStart=	${obj}.X_ADB_DateStop=</ACTION></COMMAND><COMMAND name="timeRange"><PARAM name="time_start" ptype="FROM_CM" tr-mapped-to="X_ADB_TimeStart" /><PARAM name="time_stop" ptype="FROM_CM" tr-mapped-to="X_ADB_TimeStop" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}</ACTION></COMMAND><COMMAND name="no timeRange" tr-mapped-to="X_ADB_TimeStart" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_TimeStart=	${obj}.X_ADB_TimeStop=</ACTION></COMMAND><COMMAND name="monthDay" /><COMMAND name="monthDay set"><PARAM name="day_list" ptype="FROM_CM" tr-mapped-to="X_ADB_MonthDays" /><ACTION builtin="cm_list_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="monthDay add" no-config-gen="true"><PARAM name="day" ptype="COMPLETE" ptype_args="get_mday_list ${obj} X_ADB_MonthDays" tr-mapped-to="X_ADB_MonthDays" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="monthDay del" no-config-gen="true"><PARAM name="day" ptype="COMPLETE" ptype_args="get_mday_list ${obj} X_ADB_MonthDays true" tr-mapped-to="X_ADB_MonthDays" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="monthDay clear" no-config-gen="true" tr-val="" tr-mapped-to="X_ADB_MonthDays"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="monthDay show" no-config-gen="true" tr-mapped-to="X_ADB_MonthDays"><ACTION>cmclient GETV ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><VAR name="VAR_QOS_CLASS_WEEKDAY_LIST" dynamic="true"><ACTION>
        . /etc/clish/ip-qos.sh print_wday_list ${obj} X_ADB_WeekDays
      </ACTION></VAR><COMMAND name="weekDay" /><COMMAND name="weekDay set"><PARAM name="day_list" ptype="LIST_DAYS_OF_WEEK" tr-var-action="VAR_QOS_CLASS_WEEKDAY_LIST" /><ACTION>. /etc/clish/ip-qos.sh set_wday_list ${obj} X_ADB_WeekDays "${day_list}"</ACTION></COMMAND><COMMAND name="weekDay add" no-config-gen="true"><PARAM name="day" ptype="COMPLETE" ptype_args="get_wday_list ${obj} X_ADB_WeekDays" tr-mapped-to="X_ADB_WeekDays" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="weekDay del" no-config-gen="true"><PARAM name="day" ptype="COMPLETE" ptype_args="get_wday_list ${obj} X_ADB_WeekDays true" tr-mapped-to="X_ADB_WeekDays" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="weekDay clear" no-config-gen="true" tr-val="" tr-mapped-to="X_ADB_WeekDays"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="weekDay show" no-config-gen="true" tr-mapped-to="X_ADB_WeekDays"><ACTION>. /etc/clish/ip-qos.sh print_wday_list ${obj} ${CMD_ATTR_tr-mapped-to} true</ACTION></COMMAND><COMMAND name="extraDestPorts" /><COMMAND name="extraDestPorts set"><PARAM name="port_list" ptype="FROM_CM" ptype_args="check_ports_range" tr-mapped-to="X_ADB_ExtraDestPorts" /><ACTION builtin="cm_list_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="extraDestPorts add" no-config-gen="true"><PARAM name="port" ptype="FROM_CM" ptype_args="check_ports_range" tr-mapped-to="X_ADB_ExtraDestPorts" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="extraDestPorts del" no-config-gen="true"><PARAM name="port" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="X_ADB_ExtraDestPorts" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="extraDestPorts show" no-config-gen="true"><ACTION>cmclient GETV ${obj}.X_ADB_ExtraDestPorts</ACTION></COMMAND><COMMAND name="extraDestPorts clear" tr-config-phony="true" tr-obj=".[X_ADB_ExtraDestPorts=]"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_ExtraDestPorts=</ACTION></COMMAND><COMMAND name="extraSrcPorts" /><COMMAND name="extraSrcPorts set"><PARAM name="port_list" ptype="FROM_CM" ptype_args="check_ports_range" tr-mapped-to="X_ADB_ExtraSourcePorts" /><ACTION builtin="cm_list_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="extraSrcPorts add" no-config-gen="true"><PARAM name="port" ptype="FROM_CM" ptype_args="check_ports_range" tr-mapped-to="X_ADB_ExtraSourcePorts" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="extraSrcPorts del" no-config-gen="true"><PARAM name="port" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="X_ADB_ExtraSourcePorts" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="extraSrcPorts show" no-config-gen="true"><ACTION>cmclient GETV ${obj}.X_ADB_ExtraSourcePorts</ACTION></COMMAND><COMMAND name="extraSrcPorts clear" tr-config-phony="true" tr-obj=".[X_ADB_ExtraSourcePorts=]"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_ExtraSourcePorts=</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="App">
            show_deref_list_as_list ${obj}.App Alias
        </DISPENTRY><DISPENTRY tr-mapped-to="Policer">
            show_deref_list_as_list ${obj}.Policer Alias
        </DISPENTRY><DISPENTRY tr-mapped-to="X_ADB_TR098Reference" /><DISPENTRY tr-mapped-to="OutOfBandInfo" /><DISPENTRY tr-mapped-to="DHCPType" /><DISPENTRY tr-mapped-to="SourceVendorClassIDv6" /><DISPENTRY tr-mapped-to="DestVendorClassIDv6" /><DISPENTRY tr-mapped-to="SourceVendorSpecificInfo" /><DISPENTRY tr-mapped-to="SourceVendorSpecificInfoExclude" /><DISPENTRY tr-mapped-to="SourceVendorSpecificInfoEnterprise" /><DISPENTRY tr-mapped-to="SourceVendorSpecificInfoSubOption" /><DISPENTRY tr-mapped-to="DestVendorSpecificInfo" /><DISPENTRY tr-mapped-to="DestVendorSpecificInfoExclude" /><DISPENTRY tr-mapped-to="DestVendorSpecificInfoEnterprise" /><DISPENTRY tr-mapped-to="DestVendorSpecificInfoSubOption" /><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND></VIEW><VIEW name="qos-policer-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><COMMAND name="committedRate"><PARAM name="rate" ptype="FROM_CM" tr-mapped-to="CommittedRate" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="committedBurst"><PARAM name="size" ptype="FROM_CM" tr-mapped-to="CommittedBurstSize" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="excessBurst"><PARAM name="size" ptype="FROM_CM" tr-mapped-to="ExcessBurstSize" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="peakRate"><PARAM name="rate" ptype="FROM_CM" tr-mapped-to="PeakRate" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="peakBurst"><PARAM name="size" ptype="FROM_CM" tr-mapped-to="PeakBurstSize" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="meterType"><PARAM name="size" ptype="FROM_CM" tr-mapped-to="MeterType" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="actionConforming" /><COMMAND name="actionConforming null" tr-mapped-to="ConformingAction" tr-val="Null"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="actionConforming drop" tr-mapped-to="ConformingAction" tr-val="Drop"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><VAR name="VAR_QOS_POLICER_AC_DSCP" dynamic="true"><ACTION>
        cmclient -v action GETV ${obj}.ConformingAction
        case $action in
        Null) ;;
        Drop) ;;
        *:*) ;;
        *) echo -n "$action" ;;
        esac
      </ACTION></VAR><VAR name="VAR_QOS_POLICER_AC_PRIO" dynamic="true"><ACTION>
        cmclient -v action GETV ${obj}.ConformingAction
        case $action in
        :*) echo -n "$action" ;;
        *) ;;
        esac
      </ACTION></VAR><VAR name="VAR_QOS_POLICER_AC_DSCP_PRIO" dynamic="true"><ACTION>
        cmclient -v action GETV ${obj}.ConformingAction
        case $action in
        :*) ;;
        *:*) echo -n "$action" ;;
        *) ;;
        esac
      </ACTION></VAR><COMMAND name="actionConforming dscpMark"><PARAM name="action" ptype="QOS_POLICER_ACTION_TYPE_DSCP" tr-var-action="VAR_QOS_POLICER_AC_DSCP" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.ConformingAction ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="actionConforming prioEthMark"><PARAM name="action" ptype="QOS_POLICER_ACTION_TYPE_PRIO" tr-var-action="VAR_QOS_POLICER_AC_PRIO" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.ConformingAction ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="actionConforming dscpMarkPrioEthMark"><PARAM name="action" ptype="QOS_POLICER_ACTION_TYPE_DSCP_PRIO" tr-var-action="VAR_QOS_POLICER_AC_DSCP_PRIO" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.ConformingAction ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="actionNonConforming" /><COMMAND name="actionNonConforming null" tr-mapped-to="NonConformingAction" tr-val="Null"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="actionNonConforming drop" tr-mapped-to="NonConformingAction" tr-val="Drop"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><VAR name="VAR_QOS_POLICER_ANC_DSCP" dynamic="true"><ACTION>
        cmclient -v action GETV ${obj}.NonConformingAction
        case $action in
        Null) ;;
        Drop) ;;
        *:*) ;;
        *) echo -n "$action" ;;
        esac
      </ACTION></VAR><VAR name="VAR_QOS_POLICER_ANC_PRIO" dynamic="true"><ACTION>
        cmclient -v action GETV ${obj}.NonConformingAction
        case $action in
        :*) echo -n "$action" ;;
        *) ;;
        esac
      </ACTION></VAR><VAR name="VAR_QOS_POLICER_ANC_DSCP_PRIO" dynamic="true"><ACTION>
        cmclient -v action GETV ${obj}.NonConformingAction
        case $action in
        :*) ;;
        *:*) echo -n "$action" ;;
        *) ;;
        esac
      </ACTION></VAR><COMMAND name="actionNonConforming dscpMark"><PARAM name="action" ptype="QOS_POLICER_ACTION_TYPE_DSCP" tr-var-action="VAR_QOS_POLICER_ANC_DSCP" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.NonConformingAction ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="actionNonConforming prioEthMark"><PARAM name="action" ptype="QOS_POLICER_ACTION_TYPE_PRIO" tr-var-action="VAR_QOS_POLICER_ANC_PRIO" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.NonConformingAction ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="actionNonConforming dscpMarkPrioEthMark"><PARAM name="action" ptype="QOS_POLICER_ACTION_TYPE_DSCP_PRIO" tr-var-action="VAR_QOS_POLICER_ANC_DSCP_PRIO" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.NonConformingAction ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="actionPartialConforming" /><COMMAND name="actionPartialConforming null" tr-mapped-to="PartialConformingAction" tr-val="Null"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="actionPartialConforming drop" tr-mapped-to="PartialConformingAction" tr-val="Drop"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><VAR name="VAR_QOS_POLICER_APC_DSCP" dynamic="true"><ACTION>
        cmclient -v action GETV ${obj}.PartialConformingAction
        case $action in
        Null) ;;
        Drop) ;;
        *:*) ;;
        *) echo -n "$action" ;;
        esac
      </ACTION></VAR><VAR name="VAR_QOS_POLICER_APC_PRIO" dynamic="true"><ACTION>
        cmclient -v action GETV ${obj}.PartialConformingAction
        case $action in
        :*) echo -n "$action" ;;
        *) ;;
        esac
      </ACTION></VAR><VAR name="VAR_QOS_POLICER_APC_DSCP_PRIO" dynamic="true"><ACTION>
        cmclient -v action GETV ${obj}.PartialConformingAction
        case $action in
        :*) ;;
        *:*) echo -n "$action" ;;
        *) ;;
        esac
      </ACTION></VAR><COMMAND name="actionPartialConforming dscpMark"><PARAM name="action" ptype="QOS_POLICER_ACTION_TYPE_DSCP" tr-var-action="VAR_QOS_POLICER_APC_DSCP" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.PartialConformingAction ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="actionPartialConforming prioEthMark"><PARAM name="action" ptype="QOS_POLICER_ACTION_TYPE_PRIO" tr-var-action="VAR_QOS_POLICER_APC_PRIO" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.PartialConformingAction ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="actionPartialConforming dscpMarkPrioEthMark"><PARAM name="action" ptype="QOS_POLICER_ACTION_TYPE_DSCP_PRIO" tr-var-action="VAR_QOS_POLICER_APC_DSCP_PRIO" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.PartialConformingAction ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="X_ADB_TR098Reference" /><DISPENTRY tr-mapped-to="ConformingCountedBytes" /><DISPENTRY tr-mapped-to="ConformingCountedPackets" /><DISPENTRY tr-mapped-to="NonConformingCountedBytes" /><DISPENTRY tr-mapped-to="NonConformingCountedPackets" /><DISPENTRY tr-mapped-to="PartiallyConformingCountedBytes" /><DISPENTRY tr-mapped-to="PartiallyConformingCountedPackets" /><DISPENTRY tr-mapped-to="PossibleMeterTypes" /><DISPENTRY tr-mapped-to="Status" /><DISPENTRY tr-mapped-to="TotalCountedBytes" /><DISPENTRY tr-mapped-to="TotalCountedPackets" /><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND></VIEW><VIEW name="qos-queue-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-permissions-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><COMMAND name="trafficClass" /><COMMAND name="trafficClass set"><PARAM name="index" ptype="FROM_CM" tr-mapped-to="TrafficClasses" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="trafficClass add" no-config-gen="true" tr-config-phony="true"><PARAM name="index" ptype="COMPLETE" ptype_args="get_traffic_class_for_queue ${obj}.TrafficClasses" /><PARAM name="new_value" ptype="UINT" optional="true" /><ACTION>
          val=${index}
          if [ "${index}" = "new" ]; then
              if [ -z "${new_value}" ]; then
                  echo "Provide a new value as the second parameter"
                  exit
              fi
              val=${new_value}
          else
              if [ -n "${new_value}" ]; then
                  echo "Warning: the second parameter ignored (valid only for \"new\")"
              fi
          fi
          # adding to list here
          cmclient -v current GETV ${obj}.TrafficClasses
          case ,"$current", in
            *,"$val",*) echo "Warning: traffic class $val is already assigned to queue"
               ;;
            *) [ -z "$current" ] &amp;&amp; current="$val" || current="$current,$val"
               . /etc/clish/quick_cm.sh setm "${obj}.TrafficClasses=$current"
               ;;
          esac
      </ACTION></COMMAND><COMMAND name="trafficClass del" no-config-gen="true" tr-config-phony="true"><PARAM name="index" ptype="COMPLETE" ptype_args="get_traffic_class_for_selected_queue ${obj}.TrafficClasses" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.TrafficClasses ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="trafficClass show" no-config-gen="true" tr-config-phony="true"><ACTION>
          . /etc/clish/clish-commons.sh
          var_runconf_classIndex ${obj}.TrafficClasses get_traffic_class_for_queue false
          echo
      </ACTION></COMMAND><COMMAND name="trafficClass clear" tr-mapped-to="TrafficClasses" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interface"><PARAM name="ifname" ptype="COMPLETE" ptype_args="get_cust_obj_by_prop_with_pref Device.IP.Interface.Alias#Device.PPP.Interface.Alias#Device.ATM.Link.Alias#Device.PTM.Link.Alias#Device.WiFi.SSID.Alias#Device.Ethernet.Interface.Alias#Device.Ethernet.VLANTermination.Alias#Device.Bridging.Bridge.Port.[ManagementPort=true].Alias all\(all\) true" tr-var-action="VAR_QOS_QUEUE_IFACE" /><ACTION>
            case ${ifname} in
            all)
                . /etc/clish/quick_cm.sh setm "${obj}.AllInterfaces=true	${obj}.Interface="
                ;;
            *)
                . /etc/clish/quick_cm.sh setm "${obj}.AllInterfaces=false	${obj}.Interface=${ifname}"
                ;;
            esac
      </ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no interface" tr-obj=".[AllInterfaces=false].[Interface=]" tr-config-phony="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.AllInterfaces=false	${obj}.Interface=</ACTION></COMMAND><COMMAND name="weight"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="Weight" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="precedence"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="Precedence" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="red"><PARAM name="thresh" ptype="FROM_CM" tr-mapped-to="REDThreshold" /><PARAM name="percent" ptype="FROM_CM" tr-mapped-to="REDPercentage" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}</ACTION></COMMAND><COMMAND name="dropAlgorithm"><PARAM name="alg" ptype="FROM_CM" tr-mapped-to="DropAlgorithm" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="schedulingAlgorithm"><PARAM name="alg" ptype="FROM_CM" tr-mapped-to="SchedulerAlgorithm" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="shaping" tr-obj=".[ShapingRate!-1]"><PARAM name="rate" ptype="FROM_CM" tr-mapped-to="ShapingRate" /><PARAM name="burst" ptype="FROM_CM" tr-mapped-to="ShapingBurstSize" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}</ACTION></COMMAND><COMMAND name="no shaping" tr-obj=".[ShapingRate=-1]" tr-config-phony="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.ShapingRate=-1	${obj}.ShapingBurstSize=0</ACTION></COMMAND><COMMAND name="latency"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="X_ADB_TargetLatency" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="parentQueue"><PARAM name="queue" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.QoS.Queue.[Alias!%(${obj}.Alias)].Alias" tr-mapped-to="%(X_ADB_Parent).Alias" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.X_ADB_Parent ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="X_ADB_TR098Reference" /><DISPENTRY tr-mapped-to="X_ADB_Handle" /><DISPENTRY tr-mapped-to="Interface">
            show_deref_list_as_list ${obj}.Interface Alias true
        </DISPENTRY><DISPENTRY tr-mapped-to="X_ADB_Parent">
            show_deref_list_as_list ${obj}.X_ADB_Parent Alias
        </DISPENTRY><DISPENTRY tr-mapped-to="Status" /><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND></VIEW><VIEW name="qos-queue-stat-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><VAR name="VAR_QOS_QUEUE_STAT_IFACE" dynamic="true"><ACTION>
        cmclient -v iface GETV "${obj}.Interface"
        if [ -n "$iface" ]; then
            case $iface in
            Device.Bridging.Bridge*)
                pref=${iface#*"Device.Bridging.Bridge."}
                pref=${pref%%"."*}
                pref="Bridge.$pref."
                ;;
            *)
                pref=${iface#*"Device."}
                pref=${pref%%"."*}
                pref="$pref."
                ;;
            esac
            cmclient -v alias GETV "$iface.Alias"
            echo -n "\"$pref$alias\""
        fi
      </ACTION></VAR><COMMAND name="interface"><PARAM name="ifname" ptype="COMPLETE" ptype_args="get_cust_obj_by_prop_with_pref Device.PPP.Interface.Alias#Device.ATM.Link.Alias#Device.PTM.Link.Alias#Device.WiFi.SSID.Alias#Device.Ethernet.Interface.Alias#Device.Ethernet.VLANTermination.Alias#Device.Bridging.Bridge.Port.[ManagementPort=true].Alias '#' true" tr-var-action="VAR_QOS_QUEUE_STAT_IFACE" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.Interface ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="X_ADB_TR098Reference" /><DISPENTRY tr-mapped-to="Interface">
            show_deref_list_as_list ${obj}.Interface Alias true
        </DISPENTRY><DISPENTRY tr-mapped-to="Queue">
            show_deref_list_as_list ${obj}.Queue Alias
        </DISPENTRY><DISPENTRY tr-mapped-to="Status" /><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND></VIEW><VIEW name="qos-shaper-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-permissions-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><COMMAND name="interface"><PARAM name="ifname" ptype="COMPLETE" ptype_args="get_cust_obj_by_prop_with_pref Device.PPP.Interface.Alias#Device.ATM.Link.Alias#Device.PTM.Link.Alias#Device.WiFi.SSID.Alias#Device.Ethernet.Interface.Alias#Device.Ethernet.VLANTermination.Alias#Device.Bridging.Bridge.Port.[ManagementPort=true].Alias '#' true" tr-var-action="VAR_QOS_QUEUE_STAT_IFACE" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.Interface ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ratePercent" tr-obj=".[ShapingRate-101].[ShapingRate!-1]"><PARAM name="value" ptype="UINT_0_100" tr-mapped-to="ShapingRate" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="rate" tr-obj=".[ShapingRate+100]"><PARAM name="value" ptype="UINT_101_MAX" tr-mapped-to="ShapingRate" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no shaping" tr-mapped-to="ShapingRate" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="burst"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="ShapingBurstSize" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Interface">
            show_deref_list_as_list ${obj}.Interface Alias true
        </DISPENTRY><DISPENTRY tr-mapped-to="Status" /><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND></VIEW><VIEW name="qos-ingress-shaper-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><COMMAND name="interface"><PARAM name="ifname" ptype="COMPLETE" ptype_args="get_cust_obj_by_prop_with_pref Device.PPP.Interface.Alias#Device.ATM.Link.Alias#Device.PTM.Link.Alias#Device.WiFi.SSID.Alias#Device.Ethernet.Interface.Alias#Device.Ethernet.VLANTermination.Alias#Device.Bridging.Bridge.Port.[ManagementPort=true].Alias '#' true" tr-var-action="VAR_QOS_QUEUE_STAT_IFACE" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.Interface ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ratePercent" tr-obj=".[ShapingRate-101].[ShapingRate!-1]"><PARAM name="value" ptype="UINT_0_100" tr-mapped-to="ShapingRate" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="rate" tr-obj=".[ShapingRate+100]"><PARAM name="value" ptype="UINT_101_MAX" tr-mapped-to="ShapingRate" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no shaping" tr-mapped-to="ShapingRate" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="burst"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="ShapingBurstSize" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Interface">
            show_deref_list_as_list ${obj}.Interface Alias true
        </DISPENTRY><DISPENTRY tr-mapped-to="Status" /><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND></VIEW><VIEW name="syslog-cfg-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="maxLogEntries"><PARAM name="number" ptype="FROM_CM" tr-mapped-to="NumberOfEntries" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add logService" tr-obj=".Service"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${obj}${CMD_ATTR_tr-obj} Alias=${alias}</ACTION></COMMAND><COMMAND name="del logService" tr-obj=".Service" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="logService" view="syslog-service-view" viewid="obj=${alias};prompt=${prompt}-logService" tr-obj=".Service"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="add logFile" tr-obj=".FileLogging"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${obj}${CMD_ATTR_tr-obj} Alias=${alias}</ACTION></COMMAND><COMMAND name="logFile" view="syslog-file-view" viewid="obj=${alias};prompt=${prompt}-logFile" tr-obj=".FileLogging"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del logFile" tr-obj=".FileLogging" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="add remoteServer" tr-obj=".Server"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${obj}${CMD_ATTR_tr-obj} Alias=${alias}</ACTION></COMMAND><COMMAND name="del remoteServer" tr-obj=".Server" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /><ACTION>
             cmclient -v alias1 GETV Device.X_ADB_SystemLog.Server.1.Alias
             cmclient -v currAlias GETV ${alias}.Alias
             if [ "$alias1" = "$currAlias" ]; then
                echo "Default remote server - can not removed"
             else
                cmclient DEL ${alias}
             fi
      </ACTION></COMMAND><COMMAND name="remoteServer" view="syslog-server-view" viewid="obj=${alias};prompt=${prompt}-remoteServer" tr-obj=".Server"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /></COMMAND></VIEW><VIEW name="syslog-service-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="identity"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="Identity" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="priority"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="Priority" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="rateLimit"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="RateLimit" /><PARAM name="unit" ptype="FROM_CM" optional="true" default="Minutes" tr-mapped-to="RateLimitUnit" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}</ACTION></COMMAND></VIEW><VIEW name="syslog-file-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="identityFilter" /><COMMAND name="identityFilter set"><PARAM name="filters" ptype="FROM_CM" tr-mapped-to="IdentityFilter" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="identityFilter add" no-config-gen="true"><PARAM name="filter" ptype="FROM_CM" tr-mapped-to="IdentityFilter" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="identityFilter del" no-config-gen="true"><PARAM name="filter" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="IdentityFilter" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="identityFilter clear" tr-mapped-to="IdentityFilter" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="identityFilter show" no-config-gen="true" tr-mapped-to="IdentityFilter"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="serviceLabel" /><COMMAND name="serviceLabel add" no-config-gen="true"><PARAM name="label" tr-mapped-to="ServiceLabel" ptype="FROM_CM" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="serviceLabel set"><PARAM name="label_list" ptype="FROM_CM" tr-mapped-to="ServiceLabel" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="serviceLabel del" no-config-gen="true"><PARAM name="label" tr-mapped-to="ServiceLabel" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.ServiceLabel" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="serviceLabel show" no-config-gen="true" tr-mapped-to="ServiceLabel"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="serviceLabel clear" tr-mapped-to="ServiceLabel" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="severityFilter"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="SeverityFilter" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="logFile"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="Filename" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="storageVolume"><PARAM name="name" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.Services.StorageService.LogicalVolume.Name" tr-mapped-to="%(StorageVolume).Name" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.StorageVolume=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="maxLogFileSize"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="SizeLimit" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="logFileFormat" view="syslog-fileformat-view" viewid="obj=${obj};prompt=${prompt}:${VAR_GET_ALIAS}-format" tr-config-phony="true">
    </COMMAND></VIEW><VIEW name="syslog-fileformat-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="body"><PARAM name="format" ptype="FROM_CM" tr-mapped-to="Format" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="header"><PARAM name="format" ptype="FROM_CM" tr-mapped-to="HeaderFormat" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="footer"><PARAM name="format" ptype="FROM_CM" tr-mapped-to="FooterFormat" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no" /><COMMAND name="no body" tr-mapped-to="Format" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no header" tr-mapped-to="HeaderFormat" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no footer" tr-mapped-to="FooterFormat" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="maxSizeReached"><PARAM name="format" ptype="FROM_CM" tr-mapped-to="SizeLimitFormat" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no maxSizeReached" tr-mapped-to="SizeLimitFormat" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="error"><PARAM name="format" ptype="FROM_CM" tr-mapped-to="ErrorFormat" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no error" tr-mapped-to="ErrorFormat" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="syslog-server-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="bufferSize"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="BufferSize" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="tls"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="UseTLS" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="rfc5424Format"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="UseRFC5424Format" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="severityFilter"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="SeverityFilter" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="remoteServer"><PARAM name="url" ptype="IP_ADDRESS_OR_HOSTNAME" tr-mapped-to="RemoteServer" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="remotePort"><PARAM name="port" ptype="FROM_CM" tr-ifval-not-in="-1" tr-mapped-to="RemotePort" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="noPort" tr-mapped-to="RemotePort" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="identityFilter" /><COMMAND name="identityFilter add" tr-obj=".Server" no-config-gen="true"><PARAM name="iden" tr-mapped-to="IdentityFilter" ptype="COMPLETE_NATIVE" ptype_args="listFromProp Device.X_ADB_SystemLog.Service.Identity " /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="identityFilter del" no-config-gen="true"><PARAM name="iden" tr-mapped-to="IdentityFilter" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.IdentityFilter" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="identityFilter set"><PARAM name="iden_list" ptype="FROM_CM" tr-mapped-to="IdentityFilter" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="identityFilter show" no-config-gen="true" tr-mapped-to="IdentityFilter"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="identityFilter clear" tr-mapped-to="IdentityFilter" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="serviceLabel" /><COMMAND name="serviceLabel add" no-config-gen="true"><PARAM name="label" tr-mapped-to="ServiceLabel" ptype="FROM_CM" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="serviceLabel set"><PARAM name="label_list" ptype="FROM_CM" tr-mapped-to="ServiceLabel" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="serviceLabel del" no-config-gen="true"><PARAM name="label" tr-mapped-to="ServiceLabel" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.ServiceLabel" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="serviceLabel show" no-config-gen="true" tr-mapped-to="ServiceLabel"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="serviceLabel clear" tr-mapped-to="ServiceLabel" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND></VIEW><VIEW name="hosts-main-cfg-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="rescan" no-config-gen="true" tr-mapped-to="X_ADB_ScanHosts" tr-val="true"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="host" view="hosts-host-cfg-view" viewid="obj=${alias};prompt=${prompt}-host" tr-obj=".Host" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Alias" /></COMMAND></VIEW><VIEW name="hosts-host-cfg-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="wakeOnLan" tr-mapped-to="X_ADB_WakeOnLan" tr-val="true" no-config-gen="true"><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="time-cfg-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="server1"><PARAM name="server" ptype="FROM_CM" tr-mapped-to="NTPServer1" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="server2"><PARAM name="server" ptype="FROM_CM" tr-mapped-to="NTPServer2" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="server3"><PARAM name="server" ptype="FROM_CM" tr-mapped-to="NTPServer3" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="server4"><PARAM name="server" ptype="FROM_CM" tr-mapped-to="NTPServer4" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="server5"><PARAM name="server" ptype="FROM_CM" tr-mapped-to="NTPServer5" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no" /><COMMAND name="no server1" tr-mapped-to="NTPServer1" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no server2" tr-mapped-to="NTPServer2" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no server3" tr-mapped-to="NTPServer3" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no server4" tr-mapped-to="NTPServer4" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no server5" tr-mapped-to="NTPServer5" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><VAR name="VAR_TIME_TIMEZONE" dynamic="true"><ACTION>
        cmclient -v tzstring GETV Device.Time.LocalTimeZone
        cmclient -v tz_obj GETO Device.Time.X_ADB_AvailableTimeZone.Location.[TzString=$tzstring]
        if [ "${tz_obj}" != "" ]
        then
          cmclient -v offset GETV "${tz_obj}.Offset"
          cmclient -v area GETV "${tz_obj}.Area"
          cmclient -v city GETV "${tz_obj}.City"
          echo -n "\"$offset $area/$city\""
        else
          echo -n "new $tzstring"
        fi
      </ACTION></VAR><COMMAND name="timezone"><PARAM name="zone" ptype="COMPLETE" ptype_args="get_time_zones" tr-var-action="VAR_TIME_TIMEZONE" /><PARAM name="new_value" ptype="STRING" optional="true" /><ACTION>
         if [ "${zone}" = "new" ]; then
            if [ -z "${new_value}" ]; then
               echo "Provide a new value as the second parameter"
               exit
            fi
            cmclient -v res SETM "${obj}.LocalTimeZone=${new_value}"
         else
            if [ -n "${new_value}" ]; then
               echo "Warning: the second parameter ignored (valid only for \"new\")"
            fi
            cmclient -v res SETM "${obj}.LocalTimeZone=${zone}"
         fi
      </ACTION></COMMAND><COMMAND name="permissive"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_Permissive" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="pollExponent"><PARAM name="min" ptype="FROM_CM" tr-mapped-to="X_ADB_MinPoll" /><PARAM name="max" ptype="FROM_CM" tr-mapped-to="X_ADB_MaxPoll" /><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="printerservice-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="spooling"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="SpoolEnabled" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="spoolingVolume"><PARAM name="name" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.Services.StorageService.LogicalVolume.Name" tr-mapped-to="%(SpoolPartition).Name" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.SpoolPartition=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface" /><COMMAND name="interface set"><PARAM name="interface" ptype="STRING" tr-mapped-to="Interfaces" tr-var-action="VAR_GET_INTERFACES" /><ACTION builtin="cm_list_reference_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.IP.Interface.[X_ADB_Upstream=false].Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface add" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.[X_ADB_Upstream=false].Alias" tr-mapped-to="Interfaces" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface del" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="listFromRefProp ${obj}.Interfaces#Alias" tr-mapped-to="Interfaces" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface clear" tr-mapped-to="Interfaces" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interface show" no-config-gen="true" tr-mapped-to="Interfaces"><ACTION>
          . /etc/clish/clish-commons.sh
          show_deref_list ${obj}.${CMD_ATTR_tr-mapped-to} Alias
      </ACTION></COMMAND><COMMAND name="printer" view="printer-cfg-view" viewid="obj=${name};prompt=${prompt}-printer" tr-obj=".PrinterDevice"><PARAM name="name" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.Services.X_ADB_PrinterService.PrinterDevice.Name" tr-mapped-to="Name" /></COMMAND><COMMAND name="servers" view="printer-servers-cfg-view" viewid="obj=${obj}${CMD_ATTR_tr-obj};prompt=${prompt}-servers" tr-config-phony="true" tr-obj=".Servers">
    </COMMAND></VIEW><VIEW name="printer-cfg-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_NAME})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="name"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="Name" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="description"><PARAM name="desc" ptype="FROM_CM" tr-mapped-to="Description" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="location"><PARAM name="desc" ptype="FROM_CM" tr-mapped-to="Location" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="jobShow" no-config-gen="true" tr-obj=".PrintJob" show_all_except="yes"><ACTION builtin="cmshow@cmplugin">${obj}${CMD_ATTR_tr-obj}</ACTION></COMMAND><COMMAND name="jobCancel" no-config-gen="true"><PARAM name="jobID" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}.PrintJob.JobId" tr-mapped-to="PrintJob.Cancel" tr-val="true" /><ACTION builtin="cmwrap@cmplugin">SETM ${jobID}.Cancel=${PAR_ATTR_1_tr-val}</ACTION></COMMAND></VIEW><VIEW name="printer-servers-cfg-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="show"><ACTION builtin="cmshow@cmplugin">${obj}:1</ACTION></COMMAND><COMMAND name="ipp"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="IPP.Enable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="ippPort"><PARAM name="port" ptype="FROM_CM" tr-mapped-to="IPP.Port" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="smb"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="SMB.Enable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="raw"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="RAW.Enable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="rawPort"><PARAM name="port" ptype="FROM_CM" tr-mapped-to="RAW.PortBase" /><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="dns-config" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="ipVersionRestricted" tr-obj="Device.DNS"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_IPVersionRestricted" /><ACTION builtin="cmwrap@cmplugin">SETM ${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="reqIpVersionOnRedirect" tr-obj="Device.DNS"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_ReqIPVersionOnRedirect" /><ACTION builtin="cmwrap@cmplugin">SETM ${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tcpRestrcited" tr-obj="Device.DNS"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_TCPRestricted" /><ACTION builtin="cmwrap@cmplugin">SETM ${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tcpAllowedInterfaces" /><COMMAND name="tcpAllowedInterfaces set" tr-obj="Device.DNS"><PARAM name="interfaces" ptype="STRING" tr-mapped-to="X_ADB_TCPAllowedIfaces" /><ACTION builtin="cm_list_reference_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.IP.Interface.Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tcpAllowedInterfaces add" no-config-gen="true" tr-obj="Device.DNS"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="X_ADB_TCPAllowedIfaces" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tcpAllowedInterfaces del" no-config-gen="true" tr-obj="Device.DNS"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="listFromRefProp ${CMD_ATTR_tr-obj}.${PAR_ATTR_tr-mapped-to}#Alias" tr-mapped-to="X_ADB_TCPAllowedIfaces" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tcpAllowedInterfaces clear" no-config-gen="true" tr-obj="Device.DNS" tr-mapped-to="X_ADB_TCPAllowedIfaces" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${CMD_ATTR_tr-obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="tcpAllowedInterfaces show" no-config-gen="true" tr-obj="Device.DNS" tr-mapped-to="X_ADB_TCPAllowedIfaces"><ACTION>
        cmclient -v objs GETV "${CMD_ATTR_tr-obj}.${CMD_ATTR_tr-mapped-to}"
        set -f; IFS=","; set -- $objs; unset IFS; set +f
        for o; do
          cmclient -v a GETV $o.Alias
          values="$values$a\n"
        done
        printf "$values"
        </ACTION></COMMAND><COMMAND name="noFallbackRespCodes" /><COMMAND name="noFallbackRespCodes set" tr-obj="Device.DNS"><PARAM name="codes" ptype="FROM_CM" tr-mapped-to="X_ADB_NoFallbackRCODEs" /><ACTION builtin="cmwrap@cmplugin">SETM ${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="noFallbackRespCodes add" no-config-gen="true" tr-obj="Device.DNS"><PARAM name="code" ptype="FROM_CM" tr-mapped-to="X_ADB_NoFallbackRCODEs" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="noFallbackRespCodes del" no-config-gen="true" tr-obj="Device.DNS"><PARAM name="code" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="X_ADB_NoFallbackRCODEs" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="noFallbackRespCodes clear" tr-obj="Device.DNS" tr-mapped-to="X_ADB_NoFallbackRCODEs" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${CMD_ATTR_tr-obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="noFallbackRespCodes show" no-config-gen="true" tr-mapped-to="X_ADB_NoFallbackRCODEs"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="cpeName" /><COMMAND name="cpeName set" tr-obj="Device.Hosts.X_ADB_HostName.[AddressSource=X_ADB_CPEName]"><PARAM name="host" ptype="FROM_CM" tr-mapped-to="HostName" /><PARAM name="domain" ptype="FROM_CM" tr-mapped-to="X_ADB_Domain" optional="true" /><ACTION>
        cmclient -v localHost GETO "Device.Hosts.X_ADB_HostName.[AddressSource=X_ADB_CPEName]"
        if [ -z "$localHost" ]; then
            [ -n "${domain}" ] &amp;&amp; domain_sufix=".[X_ADB_Domain=${domain}]"
            . /etc/clish/quick_cm.sh add_with_alias "${CMD_ATTR_tr-obj}$domain_sufix" "" > /dev/null
            cmclient -v localHost GETO "Device.Hosts.X_ADB_HostName.[AddressSource=X_ADB_CPEName]"
        fi
        setm="$localHost.${PAR_ATTR_1_tr-mapped-to}=${host}"
        [ -n "${domain}" ] &amp;&amp; setm="$setm	$localHost.${PAR_ATTR_2_tr-mapped-to}=${domain}"
        . /etc/clish/quick_cm.sh setm "$setm"
        </ACTION></COMMAND><COMMAND name="cpeName show" no-config-gen="true"><ACTION>
        cmclient -v hostname GETV "Device.Hosts.X_ADB_HostName.[AddressSource=X_ADB_CPEName].HostName"
        cmclient -v domain GETV "Device.Hosts.X_ADB_HostName.[AddressSource=X_ADB_CPEName].X_ADB_Domain"
        host=$hostname
        echo "$hostname$domain"
        </ACTION></COMMAND><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add hostName" tr-obj="Device.Hosts.X_ADB_HostName.[AddressSource=X_ADB_StaticName]"><PARAM name="alias_hostname" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">Device.Hosts.X_ADB_HostName Alias=${alias_hostname}	AddressSource=X_ADB_StaticName</ACTION></COMMAND><COMMAND name="hostName" view="hostname-config-view" viewid="obj=${hostname};prompt=${prompt}" tr-obj="Device.Hosts.X_ADB_HostName.[AddressSource=X_ADB_StaticName]"><PARAM name="hostname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del hostName" tr-obj="Device.Hosts.X_ADB_HostName.[AddressSource=X_ADB_StaticName]" no-config-gen="true"><PARAM name="hostname" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${CMD_ATTR_tr-obj}.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${hostname}</ACTION></COMMAND><COMMAND name="client" view="client-config-view" viewid="obj=${CMD_ATTR_tr-obj};prompt=${prompt}" tr-obj="Device.DNS.Client" tr-config-phony="true" /><COMMAND name="relay" view="relay-config-view" viewid="obj=${CMD_ATTR_tr-obj};prompt=${prompt}" tr-obj="Device.DNS.Relay" tr-config-phony="true" /></VIEW><VIEW name="hostname-config-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="name"><PARAM name="host" ptype="FROM_CM" tr-mapped-to="HostName" /><PARAM name="domain" ptype="FROM_CM" tr-mapped-to="X_ADB_Domain" optional="true" /><ACTION>
      setm="${obj}.${PAR_ATTR_1_tr-mapped-to}=${host}"
      [ -n "${domain}" ] &amp;&amp; setm="$setm	${obj}.${PAR_ATTR_2_tr-mapped-to}=${domain}"
      . /etc/clish/quick_cm.sh setm "$setm"
      </ACTION></COMMAND><COMMAND name="address"><PARAM name="address" ptype="FROM_CM" tr-mapped-to="IPAddress" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="client-config-view" prompt="${CLISH_PROMPT}(${prompt}-client)# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add server" tr-obj="Device.DNS.Client.Server.[Type=Static]"><PARAM name="address" ptype="FROM_CM" tr-mapped-to="DNSServer" /><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_alias_and_key@cmplugin">${CMD_ATTR_tr-obj} ${PAR_ATTR_1_tr-mapped-to}=${address}</ACTION></COMMAND><COMMAND name="server" view="client-server-config-view" viewid="obj=${server};prompt=${prompt}-server" tr-obj="Device.DNS.Client.Server.[Type=Static]"><PARAM name="server" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.Alias ${CMD_ATTR_tr-obj}.DNSServer" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del server" tr-obj="Device.DNS.Client.Server.[Type=Static]" no-config-gen="true"><PARAM name="server" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${CMD_ATTR_tr-obj}.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${server}</ACTION></COMMAND><COMMAND name="add dynamicRule" tr-obj="Device.DNS.Client.X_ADB_DynamicServerRule"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${CMD_ATTR_tr-obj} Alias=${alias}</ACTION></COMMAND><COMMAND name="dynamicRule" view="client-dynamic-rule-config-view" viewid="obj=${rule};prompt=${prompt}-dynRule" tr-obj="Device.DNS.Client.X_ADB_DynamicServerRule"><PARAM name="rule" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del dynamicRule" tr-obj="Device.DNS.Client.X_ADB_DynamicServerRule" no-config-gen="true"><PARAM name="rule" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${CMD_ATTR_tr-obj}.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${rule}</ACTION></COMMAND></VIEW><VIEW name="client-server-config-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="client-server-relay-rule-common-view" help="true" completion="true" /><COMMAND name="interface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(Interface).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Interface=${ifname}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no interface" tr-mapped-to="Interface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND></VIEW><VIEW name="client-server-relay-rule-common-view" depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="server_dynamic_rule_common_view" help="true" completion="true" /><NAMESPACE ref="generic-obj-permissions-view" help="true" completion="true" /><COMMAND name="address"><PARAM name="address" ptype="FROM_CM" tr-mapped-to="DNSServer" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="domainInterface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(X_ADB_DomainInterface).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_DomainInterface=${ifname}</ACTION></COMMAND></VIEW><VIEW name="server_dynamic_rule_common_view" depth="dynamic"><NAMESPACE ref="generic-obj-permissions-view" help="true" completion="true" /><COMMAND name="matchingDomain" /><COMMAND name="matchingDomain set"><PARAM name="addr" ptype="FROM_CM" tr-mapped-to="X_ADB_DomainFiltering" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="matchingDomain add" no-config-gen="true"><PARAM name="domain_val" ptype="FROM_CM" tr-mapped-to="X_ADB_DomainFiltering" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="matchingDomain del" no-config-gen="true"><PARAM name="domain_val" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="X_ADB_DomainFiltering" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="strictDomain"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_DomainFilteringRestricted" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="priority"><PARAM name="prio" ptype="FROM_CM" tr-mapped-to="X_ADB_PrioBase" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="domainPriority"><PARAM name="prio" ptype="FROM_CM" tr-mapped-to="X_ADB_PrioDomain" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="timeout"><PARAM name="timeout_val" ptype="FROM_CM" tr-mapped-to="X_ADB_Timeout" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="client-dynamic-rule-config-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="dynamic-rule-common-view" help="true" completion="true" /><COMMAND name="interface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(Interface).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Interface=${ifname}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no interface" tr-mapped-to="Interface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND></VIEW><VIEW name="dynamic-rule-common-view" depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="server_dynamic_rule_common_view" help="true" completion="true" /><COMMAND name="origin"><PARAM name="type" ptype="FROM_CM" tr-mapped-to="Type" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="forceDrop"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_ForceDrop" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="doNotCreate"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_DontCreate" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="dropPriority"><PARAM name="prio" ptype="FROM_CM" tr-mapped-to="X_ADB_PrioDrop" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="relay-config-view" prompt="${CLISH_PROMPT}(${prompt}-relay)# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="add rule" tr-obj="Device.DNS.Relay.Forwarding.[Type=Static]"><PARAM name="address" ptype="FROM_CM" tr-mapped-to="DNSServer" /><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${CMD_ATTR_tr-obj}.[${PAR_ATTR_1_tr-mapped-to}=${address}] Alias=${alias}</ACTION></COMMAND><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="rule" view="relay-rule-config-view" viewid="obj=${rule};prompt=${prompt}-dynRule" tr-obj="Device.DNS.Relay.Forwarding.[Type=Static]"><PARAM name="rule" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del rule" tr-obj="Device.DNS.Relay.Forwarding.[Type=Static]" no-config-gen="true"><PARAM name="rule" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${CMD_ATTR_tr-obj}.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${rule}</ACTION></COMMAND><COMMAND name="add dynamicRule" tr-obj="Device.DNS.Relay.X_ADB_DynamicForwardingRule"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${CMD_ATTR_tr-obj} Alias=${alias}</ACTION></COMMAND><COMMAND name="dynamicRule" view="relay-dynamic-rule-config-view" viewid="obj=${rule};prompt=${prompt}-dynRule" tr-obj="Device.DNS.Relay.X_ADB_DynamicForwardingRule"><PARAM name="rule" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del dynamicRule" tr-obj="Device.DNS.Relay.X_ADB_DynamicForwardingRule" no-config-gen="true"><PARAM name="rule" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${CMD_ATTR_tr-obj}.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${rule}</ACTION></COMMAND></VIEW><VIEW name="relay-rule-config-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="client-server-relay-rule-common-view" help="true" completion="true" /><COMMAND name="interfaceOutbound"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(Interface).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Interface=${ifname}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no interfaceOutbound" tr-mapped-to="Interface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interfaceInbound"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(X_ADB_InboundInterface).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_InboundInterface=${ifname}</ACTION></COMMAND><COMMAND name="no interfaceInbound" tr-mapped-to="X_ADB_InboundInterface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND></VIEW><VIEW name="relay-dynamic-rule-config-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="dynamic-rule-common-view" help="true" completion="true" /><COMMAND name="interfaceOutbound"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(Interface).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Interface=${ifname}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no interfaceOutbound" tr-mapped-to="Interface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interfaceInbound"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(X_ADB_InboundInterface).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_InboundInterface=${ifname}</ACTION></COMMAND><COMMAND name="no interfaceInbound" tr-mapped-to="X_ADB_InboundInterface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND></VIEW><VIEW name="diagnostics-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="pingTest" view="diag-pingtest-view" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-diagnostics-pingTest" aux_availability_condition="${CMD_ATTR_tr-obj}" tr-config-phony="true" tr-obj="Device.IP.Diagnostics.IPPing" /><COMMAND name="tracerouteTest" view="diag-traceroutetest-view" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-diagnostics-tracerouteTest" aux_availability_condition="${CMD_ATTR_tr-obj}" tr-config-phony="true" tr-obj="Device.IP.Diagnostics.TraceRoute" /><COMMAND name="downloadTest" view="diag-downloadtest-view" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-diagnostics-downloadTest" tr-config-phony="true" aux_availability_condition="${CMD_ATTR_tr-obj}" tr-obj="Device.IP.Diagnostics.DownloadDiagnostics" /><COMMAND name="uploadTest" view="diag-uploadtest-view" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-diagnostics-uploadTest" aux_availability_condition="${CMD_ATTR_tr-obj}" tr-config-phony="true" tr-obj="Device.IP.Diagnostics.UploadDiagnostics" /><COMMAND name="udpEchoService" view="diag-udpechoservice-view" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-diagnostics-udpEchoService" tr-config-phony="true" aux_availability_condition="${CMD_ATTR_tr-obj}" tr-obj="Device.IP.Diagnostics.UDPEchoConfig" /><COMMAND name="udpEchoTest" view="diag-udpechotest-view" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-diagnostics-udpEchoTest" aux_availability_condition="${CMD_ATTR_tr-obj}" tr-config-phony="true" tr-obj="Device.IP.Diagnostics.UDPEchoDiagnostics" /><COMMAND name="dnsLookupTest" view="diag-dnslookuptest-view" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-diagnostics-dnsLookupTest" tr-config-phony="true" aux_availability_condition="${CMD_ATTR_tr-obj}" tr-obj="Device.DNS.Diagnostics.NSLookupDiagnostics" /><COMMAND name="coreDump" view="diag-coredump-view" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-diagnostics-coreDump" visible="cmclient -v isavail GETO Device.X_ADB_CoreDump; [ ! x$isavail = x ]" tr-config-phony="true" aux_availability_condition="${CMD_ATTR_tr-obj}" tr-obj="Device.X_ADB_CoreDump" /><COMMAND name="lanSurvey" no-config-gen="true" view="diag-lansurvey-view" viewid="obj=${CMD_ATTR_tr-obj};prompt=cfg-diagnostics-lanSurvey" aux_availability_condition="${CMD_ATTR_tr-obj}" tr-config-phony="true" tr-obj="Device.X_ADB_LocalAreaNetworkSurvey" /><COMMAND name="interfaceMirroring" view="diag-interfacemirroring-view" viewid="obj=Device.X_ADB_Mirroring.Mirror;prompt=cfg-diagnostics-InterfaceMirroring" tr-config-phony="true" /><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><ACTION>
        echo -e "\nPing:"
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "Device.IP.Diagnostics.IPPing" "Interface::show_deref_list_as_list Device.IP.Diagnostics.IPPing.Interface Alias::" "${CMD_ATTR_show_all_except}"
        echo -e "\nTraceRoute:"
        show_object "Device.IP.Diagnostics.TraceRoute" "Interface::show_deref_list_as_list Device.IP.Diagnostics.TraceRoute.Interface Alias::" "${CMD_ATTR_show_all_except}"
        echo -e "\nDownload:"
        show_object "Device.IP.Diagnostics.DownloadDiagnostics" "Interface::show_deref_list_as_list Device.IP.Diagnostics.DownloadDiagnostics.Interface Alias::" "${CMD_ATTR_show_all_except}"
        echo -e "\nUpload:"
        show_object "Device.IP.Diagnostics.UploadDiagnostics" "Interface::show_deref_list_as_list Device.IP.Diagnostics.UploadDiagnostics.Interface Alias::" "${CMD_ATTR_show_all_except}"
        echo -e "\nUDP Echo Config:"
        show_object "Device.IP.Diagnostics.UDPEchoConfig" "Interface::show_deref_list_as_list Device.IP.Diagnostics.UDPEchoConfig.Interface Alias::" "${CMD_ATTR_show_all_except}"
        echo -e "\nUDP Echo Diagnostics:"
        show_object "Device.IP.Diagnostics.UDPEchoDiagnostics" "Interface::show_deref_list_as_list Device.IP.Diagnostics.UDPEchoDiagnostics.Interface Alias::" "${CMD_ATTR_show_all_except}"
        echo -e "\nNSLookup Diagnostics:"
        show_object "Device.DNS.Diagnostics.NSLookupDiagnostics" "Interface::show_deref_list_as_list Device.DNS.Diagnostics.NSLookupDiagnostics.Interface Alias::" "${CMD_ATTR_show_all_except}"
        echo -e "\nCore Dump:"
        show_object "Device.X_ADB_CoreDump" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        echo -e "\nLocal Area Network Survey:"
        show_object "Device.X_ADB_LocalAreaNetworkSurvey" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        echo -e "\nInterface Mirroring:"
        show_all_child_objects "Device.X_ADB_Mirroring.Mirror" "MirrorInterface::show_deref_list_as_list Device.X_ADB_Mirroring.Mirror.%d.MirrorInterface Alias::,MonitorInterface::show_deref_list_as_list Device.X_ADB_Mirroring.Mirror.%d.MonitorInterface Alias true::" "${CMD_ATTR_show_all_except}" true
        </ACTION></COMMAND></VIEW><VIEW name="diag-pingtest-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Interface">
            show_deref_list_as_list ${obj}.Interface Alias
        </DISPENTRY><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND><COMMAND name="testStart" no-config-gen="true" tr-mapped-to="DiagnosticsState" tr-val="Requested"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(Interface).Alias" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.Interface ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no interface" tr-mapped-to="Interface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="host"><PARAM name="host" ptype="IP_ADDRESS_OR_HOSTNAME" tr-mapped-to="Host" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no host" tr-mapped-to="Host" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="protocol"><PARAM name="protocol" ptype="FROM_CM" tr-mapped-to="ProtocolVersion" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="count"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="NumberOfRepetitions" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="timeout"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="Timeout" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="size"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="DataBlockSize" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="dscp"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="DSCP" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="diag-traceroutetest-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="testStart" no-config-gen="true" tr-mapped-to="DiagnosticsState" tr-val="Requested"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(Interface).Alias" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.Interface ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no interface" tr-mapped-to="Interface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="host"><PARAM name="host" ptype="IP_ADDRESS_OR_HOSTNAME" tr-mapped-to="Host" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no host" tr-mapped-to="Host" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="protocol"><PARAM name="protocol" ptype="FROM_CM" tr-mapped-to="ProtocolVersion" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="count"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="NumberOfTries" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="timeout"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="Timeout" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="size"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="DataBlockSize" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="dscp"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="DSCP" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="maxhop"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="MaxHopCount" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Interface">
            show_deref_list_as_list ${obj}.Interface Alias
        </DISPENTRY><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        show_all_child_objects "${obj}.RouteHops" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND></VIEW><VIEW name="diag-downloadtest-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="testStart" no-config-gen="true" tr-mapped-to="DiagnosticsState" tr-val="Requested"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interface"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(Interface).Alias" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.Interface ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no interface" tr-mapped-to="Interface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="serverUrl"><PARAM name="url" ptype="URL_PLAIN" tr-mapped-to="DownloadURL" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no serverUrl" tr-mapped-to="DownloadURL" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="dscp"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="DSCP" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ethPrio"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="EthernetPriority" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="timeTest"><PARAM name="duration" ptype="FROM_CM" tr-mapped-to="TimeBasedTestDuration" /><PARAM name="increments" ptype="FROM_CM" tr-mapped-to="TimeBasedTestIncrements" /><PARAM name="offset" ptype="FROM_CM" tr-mapped-to="TimeBasedTestIncrementsOffset" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}	${obj}.${PAR_ATTR_3_tr-mapped-to}=${__eval PAR_ATTR_3_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Interface">
            show_deref_list_as_list ${obj}.Interface Alias
        </DISPENTRY><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        show_all_child_objects "${obj}.IncrementalResults" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND></VIEW><VIEW name="diag-uploadtest-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="testStart" no-config-gen="true" tr-mapped-to="DiagnosticsState" tr-val="Requested"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interface"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(Interface).Alias" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.Interface ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no interface" tr-mapped-to="Interface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="serverUrl"><PARAM name="url" ptype="URL_PLAIN" tr-mapped-to="UploadURL" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no serverUrl" tr-mapped-to="UploadURL" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="dscp"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="DSCP" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ethPrio"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="EthernetPriority" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="fileSize"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="TestFileLength" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="timeTest"><PARAM name="duration" ptype="FROM_CM" tr-mapped-to="TimeBasedTestDuration" /><PARAM name="increments" ptype="FROM_CM" tr-mapped-to="TimeBasedTestIncrements" /><PARAM name="offset" ptype="FROM_CM" tr-mapped-to="TimeBasedTestIncrementsOffset" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}	${obj}.${PAR_ATTR_3_tr-mapped-to}=${__eval PAR_ATTR_3_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Interface">
            show_deref_list_as_list ${obj}.Interface Alias
        </DISPENTRY><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        show_all_child_objects "${obj}.IncrementalResults" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND></VIEW><VIEW name="diag-udpechoservice-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Interface">
            show_deref_list_as_list ${obj}.Interface Alias
        </DISPENTRY><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="interface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(Interface).Alias" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.Interface ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no interface" tr-mapped-to="Interface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="sourceAddr"><PARAM name="addr" ptype="IP_ADDRESS_OR_PREFIX" tr-mapped-to="SourceIPAddress" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no sourceAddr" tr-mapped-to="SourceIPAddress" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="udpPort"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="UDPPort" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="echoPlus" /><COMMAND name="echoPlus enable" tr-mapped-to="EchoPlusEnabled" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="echoPlus disable" tr-mapped-to="EchoPlusEnabled" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND></VIEW><VIEW name="diag-udpechotest-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="echoPlus"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="EchoPlusEnabled" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="testStart" no-config-gen="true" tr-mapped-to="DiagnosticsState" tr-val="Requested"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(Interface).Alias" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.Interface ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no interface" tr-mapped-to="Interface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="udpPort"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="X_ADB_UDPPort" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="host"><PARAM name="host" ptype="IP_ADDRESS_OR_HOSTNAME" tr-mapped-to="Host" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no host" tr-mapped-to="Host" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="count"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="NumberOfRepetitions" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="timeout"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="Timeout" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="size"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="DataBlockSize" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="dscp"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="DSCP" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interTxTime"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="InterTransmissionTime" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Interface">
            show_deref_list_as_list ${obj}.Interface Alias
        </DISPENTRY><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        show_all_child_objects "${obj}.IndividualPacketResult" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND></VIEW><VIEW name="diag-dnslookuptest-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="testStart" no-config-gen="true" tr-mapped-to="DiagnosticsState" tr-val="Requested"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(Interface).Alias" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.Interface ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no interface" tr-mapped-to="Interface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="host"><PARAM name="host" ptype="IP_ADDRESS_OR_HOSTNAME" tr-mapped-to="HostName" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no host" tr-mapped-to="HostName" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="dnsServer"><PARAM name="server" ptype="IP_ADDRESS" tr-mapped-to="DNSServer" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no dnsServer" tr-mapped-to="DNSServer" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="timeout"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="Timeout" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="count"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="NumberOfRepetitions" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Interface">
            show_deref_list_as_list ${obj}.Interface Alias
        </DISPENTRY><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        show_all_child_objects "${obj}.Result" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND></VIEW><VIEW name="diag-coredump-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="maxSize"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="MaxStore" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="storePath"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="StorePath" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="server"><PARAM name="addr" ptype="FROM_CM" tr-mapped-to="ServerIPAddress" /><PARAM name="port" ptype="FROM_CM" optional="true" default="6969" tr-mapped-to="ServerPort" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no server" tr-mapped-to="ServerIPAddress" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="diag-lansurvey-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="scan" no-config-gen="true" tr-mapped-to="Scan" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><ACTION>
        local i num numes
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        show_object "${obj}.LocalAreaNetwork." "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        cmclient -v num GETV ${obj}.DeviceNumberofentries
        for i in `seq 1 $num`; do
                echo -e "Device $i:"
                show_object "${obj}.Device.$i" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
                echo -e "DeviceInfo:"
                show_object "${obj}.Device.$i.InterfaceInfo" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
                echo -e "NetworkInfo:"
                show_object "${obj}.Device.$i.NetworkInfo" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
                echo -e "DeviceInfo:"
                show_object "${obj}.Device.$i.DeviceInfo" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
                echo -e "Exported Services:"
                show_object "${obj}.Device.$i.ExportedServices" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
                cmclient -v numes GETV ${obj}.Device.$i.ExportedServices.SharesNumberofentries
                if [ "$numes" -gt "0" ]
                then
                        echo -e "Exported Services Shares:"
                        show_all_child_objects "${obj}.Device.$i.ExportedServices.Shares" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
                fi
                cmclient -v numes GETV ${obj}.Device.$i.ExportedServices.UPnPDevicesNumberofentries
                if [ "$numes" -gt "0" ]
                then
                        echo -e "UPnP Devices"
                        show_object "${obj}.Device.$i.ExportedServices.UPnPDevices" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
                        echo -e "UPnP Services"
                        show_object "${obj}.Device.$i.ExportedServices.UPnPDevices.UPnPServices" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
                fi
                cmclient -v numes GETV ${obj}.Device.$i.ExportedServices.DNSSDServicesNumberofentries
                if [ "$numes" -gt "0" ]
                then
                        echo -e "DNSSDServices"
                        show_object "${obj}.Device.$i.ExportedServices.DNSSDServices" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
                        show_object "${obj}.Device.$i.ExportedServices.DNSSDServices.TXT" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
                fi
        done
        </ACTION></COMMAND></VIEW><VIEW name="diag-interfacemirroring-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="MirrorInterface">
            show_deref_list_as_list ${obj}.%d.MirrorInterface Alias
        </DISPENTRY><DISPENTRY tr-mapped-to="MonitorInterface">
            show_deref_list_as_list ${obj}.%d.MonitorInterface Alias true
        </DISPENTRY><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_all_child_objects "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}" true
        </ACTION></COMMAND><COMMAND name="add" /><COMMAND name="add interface" tr-obj="Device.X_ADB_Mirroring.Mirror"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">Device.X_ADB_Mirroring.Mirror Alias=${alias}</ACTION></COMMAND><COMMAND name="del" /><COMMAND name="del interface" no-config-gen="true" tr-obj="Device.X_ADB_Mirroring.Mirror"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="interface" view="diag-interfacemonitored-view" viewid="obj=${__eval PAR_ATTR_1_name};prompt=${prompt}-interface" tr-config-phony="true" tr-obj="Device.X_ADB_Mirroring.Mirror"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Alias" /></COMMAND></VIEW><VIEW name="diag-interfacemonitored-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><COMMAND name="mirrorInterface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.Ethernet.Interface.Alias" tr-mapped-to="%(MirrorInterface).Alias" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.MirrorInterface ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><VAR name="VAR_MONITOR_INTERFACE" dynamic="true"><ACTION>
        cmclient -v monIf GETV ${obj}.MonitorInterface
        if [ -n "$monIf" ]; then
        cmclient -v o GETV $monIf.Alias
        monIf=${monIf#Device.}
        monIf=${monIf%%.*}
        echo -n "\"$monIf.$o\""
        fi
        </ACTION></VAR><COMMAND name="interfaceToMirror"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropWithPref Device.ATM.Link.Alias Device.PTM.Link.Alias" tr-mapped-to="MonitorInterface" tr-var-action="VAR_MONITOR_INTERFACE" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="direction"><PARAM name="direction" ptype="FROM_CM" tr-mapped-to="Direction" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="MirrorInterface">
            show_deref_list_as_list ${obj}.MirrorInterface Alias
        </DISPENTRY><DISPENTRY tr-mapped-to="MonitorInterface">
            show_deref_list_as_list ${obj}.MonitorInterface Alias true
        </DISPENTRY><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND></VIEW><VIEW name="alg-sel-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_RUNCONF_ALG_SHORT_PROTOCOLIDENTIFIER})# " depth="dynamic"><NAMESPACE ref="generic-obj-permissions-view" help="true" completion="true" /><COMMAND name="enable" tr-config-phony="true" tr-obj=".[Enable=true]"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.Enable true</ACTION></COMMAND><COMMAND name="disable" tr-config-phony="true" tr-obj=".[Enable=false]"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.Enable false</ACTION></COMMAND><COMMAND name="classificationIndex"><PARAM name="index" ptype="COMPLETE" ptype_args="get_forwarding_policies_qos" tr-var-action="VAR_RUNCONF_CLASSINDEX_QOS_D" /><PARAM name="new_value" ptype="UINT" optional="true" /><ACTION>
          val=${index}
          if [ "${index}" = "new" ]; then
              if [ -z "${new_value}" ]; then
                  echo "Provide a new value as the second parameter"
                  exit
              fi
              val=${new_value}
          else
              if [ -n "${new_value}" ]; then
                  echo "Warning: the second parameter ignored (valid only for \"new\")"
              fi
          fi
          . /etc/clish/quick_cm.sh setm "${obj}.DefaultForwardingPolicy=$val"
      </ACTION></COMMAND><COMMAND name="trafficClass"><PARAM name="index" ptype="COMPLETE" ptype_args="get_traffic_class" tr-var-action="VAR_RUNCONF_TRAFFICCLASS_QOS_D" /><PARAM name="new_value" ptype="UINT" optional="true" /><ACTION>
          val=${index}
          if [ "${index}" = "new" ]; then
              if [ -z "${new_value}" ]; then
                  echo "Provide a new value as the second parameter"
                  exit
              fi
              val=${new_value}
          else
              if [ -n "${new_value}" ]; then
                  echo "Warning: the second parameter ignored (valid only for \"new\")"
              fi
          fi
          . /etc/clish/quick_cm.sh setm "${obj}.DefaultTrafficClass=$val"
      </ACTION></COMMAND><COMMAND name="policer"><PARAM name="policer" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.QoS.Policer.Alias" tr-mapped-to="%(DefaultPolicer).Alias" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.DefaultPolicer ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no policer" tr-mapped-to="DefaultPolicer" tr-val=""><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="dscpMark" /><COMMAND name="dscpMark sameAsInput" tr-mapped-to="DefaultDSCPMark" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="dscpMark automatic" tr-mapped-to="DefaultDSCPMark" tr-val="-2"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="dscpMark value" tr-obj=".[DefaultDSCPMark!-1].[DefaultDSCPMark!-2]"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="DefaultDSCPMark" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ethPrioMark" /><COMMAND name="ethPrioMark sameAsInput" tr-mapped-to="DefaultEthernetPriorityMark" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="ethPrioMark automatic" tr-mapped-to="DefaultEthernetPriorityMark" tr-val="-2"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="ethPrioMark value" tr-obj=".[DefaultEthernetPriorityMark!-1].[DefaultEthernetPriorityMark!-2]"><PARAM name="value" ptype="FROM_CM" tr-mapped-to="DefaultEthernetPriorityMark" /><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="DefaultPolicer">
            show_deref_list_as_list ${obj}.DefaultPolicer Alias
        </DISPENTRY><DISPENTRY tr-mapped-to="X_ADB_TR098Reference" /><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND></VIEW><VIEW name="if-bridgingwrapper-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="bridge" view="if-bridge-view" viewid="obj=${alias};prompt=${prompt}-bridge;ethlink_management=integrated" tr-obj="Device.Bridging.Bridge" config-gen-prio="1"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="add" /><COMMAND name="add bridge" tr-obj="Device.Bridging.Bridge" tr-config-phony="true" config-gen-prio="0"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION>
          . /etc/clish/clish-commons.sh
	      local bridge_id
          local port_id

          if [ -n "${alias}" ]; then
              # Adds only if the alias does not exist already - otherwise returns
              # the id of the existing bridge
              cmclient -v bridge_id ADD "Device.Bridging.Bridge.[Alias=${alias}]" >/dev/null 2>&amp;1
              cm_err_maybe_die "$bridge_id" "ERROR: cannot create new bridge!"
          else
              cmclient -v bridge_id ADD "Device.Bridging.Bridge"
          fi

          # just a shortcut ...
          local bridge_obj="Device.Bridging.Bridge.$bridge_id"

          # Create the management port within the bridge (only if does not exist already)
          # The following takes a few minutes ... probably because of recursive LowerLayers.
          # So I use a workaround 
          # cmclient -v port_id ADD "$bridge_obj.Port.[ManagementPort=true]"
          local port_obj
          cmclient -v port_obj GETO "$bridge_obj.Port.[ManagementPort=true]"
          if [ -z "$port_obj" ]; then
              cmclient -v port_id ADD "$bridge_obj.Port" >/dev/null 2>&amp;1
              port_obj="$bridge_obj.Port.$port_id"
              . /etc/clish/quick_cm.sh setm "$port_obj.ManagementPort=true"
          fi

          if ! cm_err_maybe_break "$port_obj"; then
              # remove what has been created so far
              cmclient DEL "$bridge_obj"
              die "ERROR: cannot create new bridge!"
          fi

          # Enable both the bridge and the management port
          setm="$port_obj.Enable=true"
          setm="$setm	$bridge_obj.Enable=true"

          . /etc/clish/quick_cm.sh setm "$setm"

          # read the alias of the created port
          cmclient -v alias_read GETV "$port_obj.Alias"

          [ -n "$alias_read" ] &amp;&amp; echo "INFO: Bridge with management port \"$alias_read\" was created successfuly"
      </ACTION></COMMAND><COMMAND name="del" /><COMMAND name="del bridge" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.Bridging.Bridge.Alias" tr-mapped-to="Alias" /><ACTION>. /etc/clish/clish-commons.sh &amp;&amp; remove_entry_from_all_owners "${alias}"</ACTION></COMMAND></VIEW><VIEW name="if-bridge-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><COMMAND name="mngPortAlias"><PARAM name="alias" ptype="FROM_CM" tr-mapped-to="Port.[ManagementPort=true].Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="mngPortVlanIsolation" /><COMMAND name="mngPortVlanIsolation enable" tr-mapped-to="Port.[ManagementPort=true].IngressFiltering" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="mngPortVlanIsolation disable" tr-mapped-to="Port.[ManagementPort=true].IngressFiltering" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="show" no-config-gen="true" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Alias, Enable, X_ADB_BridgeType, Standard, X_ADB_AllowLANRouting, X_ADB_MulticastIsolation" /><ACTION>
        # the following prints the object contents as specified above
        # Note: preferably it should be implemented as a VAR routine, alas, it tries to "execute"
        # the returned output ...
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><COMMAND name="enable" tr-mapped-to="Enable" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}	${obj}.Port.[ManagementPort=true].Enable=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="disable" tr-mapped-to="Enable" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}	${obj}.Port.[ManagementPort=true].Enable=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="std" config-gen-prio="0"><PARAM name="std" tr-mapped-to="Standard" ptype="BRIDGE_STD" /><ACTION>
        . /etc/clish/quick_cm.sh set ${obj} Standard ${std}
        case ${std} in
          *802.1Q*)
             echo "WARNING: Review/update the 802.1Q specific settings"
             ;;
        esac
      </ACTION></COMMAND><COMMAND name="lanRouting"><PARAM name="enable" tr-mapped-to="X_ADB_AllowLANRouting" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="mcastIsolation"><PARAM name="enable" tr-mapped-to="X_ADB_MulticastIsolation" ptype="ENABLEORDISABLE_BOOLEAN" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="setPermissions"><PARAM name="permissions" tr-mapped-to="X_ADB_Permissions" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><NAMESPACE ref="ip-config-view" help="true" completion="true" /><VAR name="VAR_BRIDGEPORT_INTERFACE" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        show_deref_list_runconf "${obj}.LowerLayers" "true"
        </ACTION></VAR><COMMAND name="add" /><COMMAND name="add port" tr-obj=".Port.[ManagementPort=false]" tr-config-phony="true" config-gen-prio="0"><PARAM name="phyAlias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropWithPref Device.ATM.Link.[LinkType=EoA].Alias Device.PTM.Link.Alias Device.Ethernet.Interface.Alias Device.WiFi.SSID.Alias Device.Ethernet.VLANTermination.Alias Device.X_ADB_VPN.GRETap.Alias Device.X_ADB_VXLAN.Tunnel.*.Interface.Alias" tr-mapped-to="%(LowerLayers).Alias" tr-var-action="VAR_BRIDGEPORT_INTERFACE" /><PARAM name="portAlias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION>
          . /etc/clish/clish-commons.sh
          # Check is it vxlan interface
          local interface_in_use=0
          case ${phyAlias} in
              Device.X_ADB_VXLAN*)
                  cmclient -v vxlanPort GETO "${obj}.Port.[LowerLayers>Device.X_ADB_VXLAN]"
                  if [ -z "$vxlanPort" ]; then
                      cmclient -v vxlanPort ADD "${obj}.Port.[LowerLayers=${phyAlias}]" > /dev/null 2>&amp;1
                      . /etc/clish/quick_cm.sh setm "${obj}.Port.$vxlanPort.Enable=true"
                      . /etc/clish/quick_cm.sh setm "${obj}.Port.$vxlanPort.Alias=vxlan"
                      echo "INFO: vxlan port successfully created"
                  else
                      echo "INFO: vxlan port already exist"
                  fi
                  echo "INFO: Please manage vxlan interfaces via 'port vxlan' command!"
                  return
                  ;;
              *)
                  ;;
          esac
          # Process the existing connections
          cmclient -v port_owners GETO "Device.**.[LowerLayers,${phyAlias}]"

          # Usually keep the Upstream flag (although its meaning could be confusing if used both in/outside a bridge).
          # But if:
          #  -  an ethernet had been configured as WAN before
          #  -  and then subsequently removed (so no owner any more),
          # its Upstream parameter is still "true", what makes little sense
          case ${phyAlias} in
              Device.Ethernet.Interface*)
                  [ -z "$port_owners" ] &amp;&amp; . /etc/clish/quick_cm.sh setm "${phyAlias}.Upstream=false"
                  ;;
          esac

          for port_owner in $port_owners; do
              cmclient -v owner_alias GETV $port_owner.Alias
              case $port_owner in
                  Device.Bridging.Bridge*)
                      # Just issue a warning
                      # "eval echo" is a sort of escape sequence for "{" in klish
                      bridge_object=$(eval echo $\{port_owner%%\.Port*\})
                      cmclient -v bridge_alias GETV $bridge_object.Alias
                      echo "INFO: The interface is already used in the bridge ($bridge_alias) as port ($owner_alias)"
                      echo "INFO: Please remove it from bridge ($bridge_alias) and then add it to the current bridge!"
                      interface_in_use=$((interface_in_use+1))
                      ;;
                  *)
                      # FIXME: seems there are configurations, which require that a phy is assigned
                      # both to standalone interfaces and a bridge - so still only a display here

                      # echo "INFO: Removing the interface recursively from its non-bridge owner ($owner_alias)"
                      # remove_entry_from_specific_owner ${phyAlias} $port_owner
                      echo "INFO: The interface is already used in a non-bridge owner ($owner_alias)"
                      echo "INFO: Please remove it from ($owner_alias) and then add it to the current bridge!"
                      interface_in_use=$((interface_in_use+1))
                      ;;
              esac
          done

          # If interface typed by user is in use, then exit
          [ $interface_in_use -gt 0 ] &amp;&amp; exit 1

          # Create a new port and assign the physical interface to Port.LowerLayers
          # This operation must be done in two separate steps due to achieve proper action handler call hierarchy
          cmclient -v port_id ADD "${obj}.Port"
          cmclient SET "${obj}.Port.$port_id.LowerLayers ${phyAlias}" > /dev/null 2>&amp;1

          # Just a shortcut ...
          local new_port_object="${obj}.Port.$port_id"

          # Assign the optional alias
          [ -n "${portAlias}" ] &amp;&amp; . /etc/clish/quick_cm.sh setm "$new_port_object.Alias=${portAlias}"

          # In whatever way the alias was set, read it
          cmclient -v real_port_alias GETV "$new_port_object.Alias"
          echo "Successfully created port : $real_port_alias"

          . /etc/clish/quick_cm.sh setm "$new_port_object.ManagementPort=false"

          # Note that ManagementPort LowerLayers is augmented automatically, so no need to do it here
      </ACTION></COMMAND><COMMAND name="port" view="if-bridge-port-view" viewid="parent=${obj};obj=${alias};prompt=${prompt}:${VAR_GET_ALIAS}-port" tr-obj=".Port.[ManagementPort=false]" config-gen-prio="1"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del" /><COMMAND name="del port" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}.Port.[ManagementPort=false].Alias" tr-mapped-to="Alias" /><ACTION>
         cmclient -v vxlanPort GETO "${alias}.[LowerLayers>Device.X_ADB_VXLAN]"
         if [ -n "$vxlanPort" ]; then
            #find Device.X_ADB_SDN.Service with VXLAN=${alias}
            cmclient -v lowerLayersList GETV "${alias}.LowerLayers"
            IFS=","
            lowerLayers=$lowerLayersList
            for lowerLayer in $lowerLayers; do
               cmclient -v service GETO "Device.X_ADB_SDN.Service.[VXLAN=$lowerLayer]"
               if [ -n "$service" ]; then
                  cmclient -v dummy SET $service.VXLAN ""
               fi
            done
            unset IFS
         fi
         cmclient -v dummy DEL ${alias}
      </ACTION></COMMAND></VIEW><VIEW name="if-bridge-port-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><COMMAND name="name"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="Name" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="show" no-config-gen="true" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Alias, Enable, PVID, IngressFiltering" /><DISPENTRY tr-mapped-to="VlanID">
          cmclient -v standard GETV ${parent}.Standard
          if [ "$standard" = "802.1Q-2005" ]; then
            cmclient -v vlanid GETV "%(Device.Bridging.Bridge.VLANPort.[Port=${obj}].VLAN).VLANID"
            cmclient -v enabled GETV "Device.Bridging.Bridge.VLANPort.[Port=${obj}].Enable"
            [ -z "$vlanid" ] &amp;&amp; vlanid="None"
            local enabled_string
            if [ "$enabled" = "true" ]; then
              enabled_string="Enabled"
            else
              enabled_string="Disabled"
            fi
            echo "$vlanid\, $enabled_string"
          else
            echo "N/A"
          fi
        </DISPENTRY><DISPENTRY tr-mapped-to="Untagged">
          cmclient -v standard GETV ${parent}.Standard
          if [ "$standard" = "802.1Q-2005" ]; then
            cmclient GETV "Device.Bridging.Bridge.VLANPort.[Port=${obj}].Untagged"
          else
            echo "N/A"
          fi
        </DISPENTRY><ACTION>
        # the following prints the object contents as specified above
        # Note: preferably it should be implemented as a VAR routine, alas, it tries to "execute"
        # the returned output ...
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
      </ACTION></COMMAND><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-stats-view" help="true" completion="true" /><COMMAND name="defaultVlanID" aux_availability_condition="${parent}.[Standard=802.1Q-2005]"><PARAM name="vlanId" tr-mapped-to="PVID" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><VAR name="VAR_RUNCONF_VLANID" dynamic="true"><ACTION>
        # Get the associated VLAN->VLANID
        cmclient -v vlan_num GETV "%(${obj}.VLAN).VLANID"
		echo -n "new $vlan_num"
      </ACTION></VAR><COMMAND name="vlanID" tr-obj="Device.Bridging.Bridge.VLANPort" tr-connection="Port" tr-config-phony="true" config-gen-prio="0" aux_availability_condition="${parent}.[Standard=802.1Q-2005]"><PARAM name="vlanId" ptype="COMPLETE" ptype_args="get_vlanIDs ${parent}" tr-var-action="VAR_RUNCONF_VLANID" /><ACTION>
        val=${vlanId}
        cmclient -v vlan_obj GETO "${parent}.VLAN.[VLANID=$val]"
        cmclient -v obj_id ADD "${parent}.VLANPort.[Port=${obj}]"
        # Just a shortcut ...
        vlan_port="${parent}.VLANPort.$obj_id"
        # Binds the VLANPort with the VLAN
        # Setting Untagged either to true or false is necessary - otherwise enable can't be set to true
        . /etc/clish/quick_cm.sh setm "$vlan_port.VLAN=$vlan_obj	$vlan_port.Untagged=true	$vlan_port.Enable=true"
      </ACTION></COMMAND><COMMAND name="vlanID new" tr-obj="Device.Bridging.Bridge.VLAN" tr-connection="Port" tr-config-phony="true" aux_availability_condition="${parent}.[Standard=802.1Q-2005]"><PARAM name="new_value" ptype="FROM_CM" tr-mapped-to="VLANID" /><ACTION>
        val=${new_value}
        parent="Device.Bridging.Bridge.VLANPort"
        # Check if the VLAN object already exists
        cmclient -v vlan_obj GETO "${parent}.VLAN.[VLANID=$val]"
        if [ -n "$vlan_obj" ]; then
            echo "VLAN already exists: ignoring \"new\" and proceeding..."
        else
            cmclient -v vlan_obj_id ADD "${parent}.VLAN.[VLANID=$val]"
            vlan_obj="${parent}.VLAN.$vlan_obj_id"
            cmclient SET $vlan_obj.Enable true > /dev/null
        fi

        cmclient -v obj_id ADD "${parent}.VLANPort.[Port=${obj}]"
        # Just a shortcut ...
        vlan_port="${parent}.VLANPort.$obj_id"
        # Binds the VLANPort with the VLAN
        # Setting Untagged either to true or false is necessary - otherwise enable can't be set to true
        . /etc/clish/quick_cm.sh setm "$vlan_port.VLAN=$vlan_obj	$vlan_port.Untagged=true	$vlan_port.Enable=true"	    
      </ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no vlanID" no-config-gen="true"><ACTION>
        cmclient -v vlan_obj GETV "${parent}.VLANPort.[Port=${obj}].VLAN"
        cmclient DEL "${parent}.VLANPort.[Port=${obj}]" > /dev/null 2>&amp;1
        # Check if the number of VLANPorts has fallen down to 0
        cmclient -v other_ports GETO "${parent}.VLANPort.[VLAN=$vlan_obj]"
        if [ -z "$other_ports" ]; then
          cmclient DEL $vlan_obj > /dev/null 2>&amp;1
        fi
      </ACTION></COMMAND><COMMAND name="untagged" tr-obj="Device.Bridging.Bridge.VLANPort" tr-connection="Port"><PARAM name="enable" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="Untagged" /><ACTION>
        # Check if the Port has the corresponding VLANPort (i.e. vlanID command was issued)
        cmclient -v vlanport_obj GETO "Device.Bridging.Bridge.VLANPort.[Port=${obj}]"
        # Note that the short "test" instruction here could be the last one (result!!)
        if [ -n "$vlanport_obj" ]; then
          . /etc/clish/quick_cm.sh setm "Device.Bridging.Bridge.VLANPort.[Port=${obj}].Untagged=${enable}"
        fi
      </ACTION></COMMAND><COMMAND name="vlanIsolation" /><COMMAND name="vlanIsolation enable" tr-mapped-to="IngressFiltering" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="vlanIsolation disable" tr-mapped-to="IngressFiltering" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="add" /><COMMAND name="del" /><VAR name="VAR_RUNCONF_FILTERVLANID" dynamic="true"><ACTION>
        # I need to check if it is a Q-type bridge - this is stored
        # in Device.Bridging.Bridge.
        # The bridge path can be stored in Device.Bridging.Filter.Bridge
        # but does not need to (only for D). So better go through
        # the Interface parameter ...
        cmclient -v portObj GETV  ${obj}.Interface
        bridgeObj=${portObj%.Port.*}
        cmclient -v bridgeStd GETV "$bridgeObj.Standard"
        case $bridgeStd in
            802.1Q*)
                cmclient -v vlanID GETV "$bridgeObj.VLAN.VLANID"
                ;;
            *)
                vlanID=0
                ;;
        esac
        echo -n "$vlanID"
      </ACTION></VAR><COMMAND name="add filter" tr-obj="Device.Bridging.Filter" tr-connection="Interface" tr-config-phony="true" config-gen-prio="1"><PARAM name="vlanID" ptype="COMPLETE" ptype_args="vlans_available ${parent}" tr-var-action="VAR_RUNCONF_FILTERVLANID" /><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION>
         cmclient -v filter_id ADD Device.Bridging.Filter > /dev/null 2>&amp;1
         filter_obj=Device.Bridging.Filter.$filter_id

         # Read if it is 802.1Q or 802.1D
         cmclient -v bridge_std GETV ${parent}.Standard
         # the Bridge parameter should contain either a Device.Bridging.Bridge.* reference
         # or Device.Bridging.Bridge..VLAN.*
         case $bridge_std in
             802.1Q*)
                 cmclient SET $filter_obj.Bridge ${vlanID} > /dev/null 2>&amp;1
                 ;;
             *)
                 cmclient SET $filter_obj.Bridge ${parent} > /dev/null 2>&amp;1
                 ;;
         esac

         # If there was alias provided, set it
         [ -n "${alias}" ] &amp;&amp;  cmclient SET $filter_obj.Alias ${alias} > /dev/null 2>&amp;1

         cmclient SET $filter_obj.Interface ${obj} > /dev/null 2>&amp;1
      </ACTION></COMMAND><COMMAND name="filter" view="if-bridge-filter-view" viewid="grandpa=${parent};parent=${obj};obj=${alias};prompt=${prompt}:${VAR_GET_ALIAS}-filter" tr-obj="Device.Bridging.Filter" tr-connection="Interface" config-gen-prio="1"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.Bridging.Filter.[Interface=${obj}].Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del filter" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.Bridging.Filter.[Interface=${obj}].Alias" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND></VIEW><VIEW name="if-bridge-filter-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="precedence"><PARAM name="order" tr-mapped-to="Order" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="dhcpType"><PARAM name="dhcp-type" tr-mapped-to="DHCPType" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="vlan" aux_availability_condition="${grandpa}.[Standard=802.1Q-2005]"><PARAM name="vlanID" tr-mapped-to="VLANIDFilter" ptype="FROM_CM" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ethertype" /><COMMAND name="ethertype add" no-config-gen="true"><PARAM name="entry" tr-mapped-to="EthertypeFilterList" ptype="UINT" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ethertype del" no-config-gen="true"><PARAM name="entry" tr-mapped-to="EthertypeFilterList" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.EthertypeFilterList" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ethertype set"><PARAM name="list" ptype="FROM_CM" tr-mapped-to="EthertypeFilterList" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ethertype show" no-config-gen="true" tr-mapped-to="EthertypeFilterList"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="ethertype clear" tr-mapped-to="EthertypeFilterList" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no ethertype" /><COMMAND name="ethertype exclude" tr-mapped-to="EthertypeFilterExclude" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no ethertype exclude" tr-mapped-to="EthertypeFilterExclude" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="srcMac" /><COMMAND name="srcMac add" no-config-gen="true"><PARAM name="entry" tr-mapped-to="SourceMACAddressFilterList" ptype="MAC_ADDRESS_WITH_OPT_MASK" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="srcMac del" no-config-gen="true"><PARAM name="entry" tr-mapped-to="SourceMACAddressFilterList" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.SourceMACAddressFilterList" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="srcMac set"><PARAM name="list" ptype="LIST_MAC_ADDRESS_WITH_OPT_MASK" tr-mapped-to="SourceMACAddressFilterList" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="srcMac show" no-config-gen="true" tr-mapped-to="SourceMACAddressFilterList"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="srcMac clear" tr-mapped-to="SourceMACAddressFilterList" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no srcMac" /><COMMAND name="srcMac exclude" tr-mapped-to="SourceMACAddressFilterExclude" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no srcMac exclude" tr-mapped-to="SourceMACAddressFilterExclude" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="destMac" /><COMMAND name="destMac add" no-config-gen="true"><PARAM name="entry" tr-mapped-to="DestMACAddressFilterList" ptype="MAC_ADDRESS_WITH_OPT_MASK" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="destMac del" no-config-gen="true"><PARAM name="entry" tr-mapped-to="DestMACAddressFilterList" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.DestMACAddressFilterList" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="destMac set"><PARAM name="list" ptype="LIST_MAC_ADDRESS_WITH_OPT_MASK" tr-mapped-to="DestMACAddressFilterList" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="destMac show" no-config-gen="true" tr-mapped-to="DestMACAddressFilterList"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="destMac clear" tr-mapped-to="DestMACAddressFilterList" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no destMac" /><COMMAND name="destMac exclude" tr-mapped-to="DestMACAddressFilterExclude" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no destMac exclude" tr-mapped-to="DestMACAddressFilterExclude" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="srcMacVendorCid" /><COMMAND name="srcMacVendorCid set"><PARAM name="Cid" ptype="FROM_CM" tr-mapped-to="SourceMACFromVendorClassIDFilter" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="srcMacVendorCid exclude" tr-mapped-to="SourceMACFromVendorClassIDFilterExclude" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no srcMacVendorCid" /><COMMAND name="no srcMacVendorCid exclude" tr-mapped-to="SourceMACFromVendorClassIDFilterExclude" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="srcMacVendorCidv6" /><COMMAND name="srcMacVendorCidv6 set"><PARAM name="Cid" ptype="FROM_CM" tr-mapped-to="SourceMACFromVendorClassIDFilterv6" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="srcMacVendorCidMode"><PARAM name="Cid" ptype="FROM_CM" tr-mapped-to="SourceMACFromVendorClassIDMode" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="destMacVendorCid" /><COMMAND name="destMacVendorCid set"><PARAM name="Cid" ptype="FROM_CM" tr-mapped-to="DestMACFromVendorClassIDFilter" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="destMacVendorCid exclude" tr-mapped-to="DestMACFromVendorClassIDFilterExclude" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no destMacVendorCid" /><COMMAND name="no destMacVendorCid exclude" tr-mapped-to="DestMACFromVendorClassIDFilterExclude" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="destMacVendorCidv6" /><COMMAND name="destMacVendorCidv6 set"><PARAM name="Cid" ptype="FROM_CM" tr-mapped-to="DestMACFromVendorClassIDFilterv6" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="destMacVendorCidMode"><PARAM name="Cid" ptype="FROM_CM" tr-mapped-to="DestMACFromVendorClassIDMode" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="srcMacClientId" /><COMMAND name="srcMacClientId set"><PARAM name="Cid" ptype="HEX" tr-mapped-to="SourceMACFromClientIDFilter" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="srcMacClientId clear" tr-val="" tr-mapped-to="SourceMACFromClientIDFilter"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="srcMacClientId exclude" tr-mapped-to="SourceMACFromClientIDFilterExclude" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no srcMacClientId" /><COMMAND name="no srcMacClientId exclude" tr-mapped-to="SourceMACFromClientIDFilterExclude" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="destMacClientId" /><COMMAND name="destMacClientId set"><PARAM name="Cid" ptype="HEX" tr-mapped-to="DestMACFromClientIDFilter" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="destMacClientId clear" tr-val="" tr-mapped-to="DestMACFromClientIDFilter"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="destMacClientId exclude" tr-mapped-to="DestMACFromClientIDFilterExclude" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no destMacClientId" /><COMMAND name="no destMacClientId exclude" tr-mapped-to="DestMACFromClientIDFilterExclude" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="srcMacUserCid" /><COMMAND name="srcMacUserCid set"><PARAM name="Cid" ptype="HEX" tr-mapped-to="SourceMACFromUserClassIDFilter" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="srcMacUserCid clear" tr-val="" tr-mapped-to="SourceMACFromUserClassIDFilter"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="srcMacUserCid exclude" tr-mapped-to="SourceMACFromUserClassIDFilterExclude" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no srcMacUserCid" /><COMMAND name="no srcMacUserCid exclude" tr-mapped-to="SourceMACFromUserClassIDFilterExclude" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="destMacUserCid" /><COMMAND name="destMacUserCid set"><PARAM name="Cid" ptype="HEX" tr-mapped-to="DestMACFromUserClassIDFilter" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="destMacUserCid clear" tr-val="" tr-mapped-to="DestMACFromUserClassIDFilter"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="destMacUserCid exclude" tr-mapped-to="DestMACFromUserClassIDFilterExclude" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="no destMacUserCid" /><COMMAND name="no destMacUserCid exclude" tr-mapped-to="DestMACFromUserClassIDFilterExclude" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="timeout"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="X_ADB_Timeout" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="rtspproxy-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="port" /><COMMAND name="port set"><PARAM name="standards" ptype="FROM_CM" tr-mapped-to="Ports" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="port add" no-config-gen="true"><PARAM name="port" ptype="FROM_CM" tr-mapped-to="Ports" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="port del" no-config-gen="true"><PARAM name="port" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Ports" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="port clear" tr-mapped-to="Ports" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="port show" no-config-gen="true" tr-mapped-to="Ports"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><VAR name="VAR_GET_DOWNSTREAM_INTERFACES" dynamic="true"><ACTION>
        cmclient -v ifaces GETV ${obj}.DownstreamInterfaces
        set -f; IFS=","; set -- $ifaces; unset IFS; set +f
        for l; do
            cmclient -v o GETV $l.Alias
            val="${val:+$val,}$o"
        done
        [ -n "$val" ] &amp;&amp; echo -n "\"$val\""
        </ACTION></VAR><COMMAND name="downstreamInterface" /><COMMAND name="downstreamInterface set"><PARAM name="interfaces" ptype="STRING" tr-mapped-to="DownstreamInterfaces" tr-var-action="VAR_GET_DOWNSTREAM_INTERFACES" /><ACTION builtin="cm_list_reference_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.IP.Interface.Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="downstreamInterface add" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="DownstreamInterfaces" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="downstreamInterface del" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="listFromRefProp ${obj}.${PAR_ATTR_1_tr-mapped-to}#Alias" tr-mapped-to="DownstreamInterfaces" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="downstreamInterface clear" tr-mapped-to="DownstreamInterfaces" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="downstreamInterface show" no-config-gen="true" tr-mapped-to="DownstreamInterfaces"><ACTION>
          . /etc/clish/clish-commons.sh
          show_deref_list ${obj}.${CMD_ATTR_tr-mapped-to} Alias
      </ACTION></COMMAND><COMMAND name="debug"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="Debug" /><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="dhcp-main-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="v4Server" tr-obj="Device.DHCPv4.Server"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="Enable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="v6Server" tr-obj="Device.DHCPv6.Server"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="Enable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="relay" tr-obj="Device.DHCPv4.Relay"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="Enable" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="show"><ACTION>
      . /etc/clish/clish-commons.sh 
      echo "DHCPv4 Server"
      show_object "Device.DHCPv4.Server" "" "yes"
      echo "DHCPv4 Relay"
      show_object Device.DHCPv4.Relay "" "yes"
      echo "DHCPv6 Server"
      show_object Device.DHCPv6.Server "" "yes"
      </ACTION></COMMAND></VIEW><VIEW name="dyndns-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add client" tr-obj="Device.Services.X_ADB_DynamicDNS.Client"><PARAM name="client_alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${CMD_ATTR_tr-obj} Alias=${client_alias}</ACTION></COMMAND><COMMAND name="del client" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.Services.X_ADB_DynamicDNS.Client.Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="client" view="client-dyndns-view" viewid="obj=${client_alias};prompt=${prompt}-client" tr-obj="Device.Services.X_ADB_DynamicDNS.Client"><PARAM name="client_alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.Services.X_ADB_DynamicDNS.Client.Alias" tr-mapped-to="Alias" /></COMMAND><COMMAND name="add provider" tr-obj="Device.Services.X_ADB_DynamicDNS.Provider"><PARAM name="provider_name" ptype="FROM_CM" tr-mapped-to="Name" /><ACTION builtin="cmwrap_add_with_alias_and_key@cmplugin">${CMD_ATTR_tr-obj} Name=${provider_name}</ACTION></COMMAND><COMMAND name="del provider" no-config-gen="true"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel Device.Services.X_ADB_DynamicDNS.Provider.Name" /><ACTION builtin="cmwrap@cmplugin">DEL ${alias}</ACTION></COMMAND><COMMAND name="provider" view="provider-dyndns-view" viewid="obj=${provider_name};prompt=${prompt}-provider" tr-obj="Device.Services.X_ADB_DynamicDNS.Provider"><PARAM name="provider_name" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.Services.X_ADB_DynamicDNS.Provider.Name" tr-mapped-to="Name" /></COMMAND><COMMAND name="show" /><COMMAND name="show providers" no-config-gen="true"><ACTION>. /etc/clish/dyndns.sh show_all_providers</ACTION></COMMAND><COMMAND name="show clients" no-config-gen="true"><ACTION>. /etc/clish/dyndns.sh show_all_clients</ACTION></COMMAND></VIEW><VIEW name="client-dyndns-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><COMMAND name="show"><ACTION>. /etc/clish/dyndns.sh show_client "${obj}"</ACTION></COMMAND><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><COMMAND name="hostname" /><COMMAND name="hostname set"><PARAM name="hostnames" ptype="FROM_CM" tr-mapped-to="Hostname" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="hostname add" no-config-gen="true"><PARAM name="hostname" ptype="FROM_CM" tr-mapped-to="Hostname" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="hostname del" no-config-gen="true"><PARAM name="hostname" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Hostname" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="hostname show" no-config-gen="true" tr-mapped-to="Hostname"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="hostname clear" tr-mapped-to="Hostname" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interface"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(Interface).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Interface=${interface}</ACTION></COMMAND><COMMAND name="provider"><PARAM name="provider" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.Services.X_ADB_DynamicDNS.Provider.Name" tr-mapped-to="%(Provider).Name" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Provider=${provider}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no username" tr-val="" tr-mapped-to="Username"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="username"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="Username" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no password" tr-val="" tr-mapped-to="Password"><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="password"><PARAM name="password" ptype="FROM_CM" tr-mapped-to="Password" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="offline"><PARAM name="flag" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="Offline" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ipv6Support"><PARAM name="flag" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="IPv6Support" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="provider-dyndns-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_NAME})# " depth="dynamic"><COMMAND name="show"><ACTION>. /etc/clish/dyndns.sh show_provider "${obj}"</ACTION></COMMAND><COMMAND name="protocol"><PARAM name="protocol" ptype="FROM_CM" tr-mapped-to="Protocol" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="baseURI"><PARAM name="uri" ptype="FROM_CM" tr-mapped-to="BaseURI" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="storage-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="no" /><COMMAND name="netHost"><PARAM name="host" ptype="FROM_CM" tr-mapped-to="NetInfo.HostName" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no netHost" tr-val="" tr-mapped-to="NetInfo.HostName"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="netDomain"><PARAM name="domain" ptype="FROM_CM" tr-mapped-to="NetInfo.DomainName" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="no netDomain" tr-val="" tr-mapped-to="NetInfo.DomainName"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="device" viewid="storageService=${obj};obj=${device};prompt=${prompt}-dev" view="storage-device-view" no-config-gen="true" tr-obj=".PhysicalMedium"><PARAM name="device" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Name" /></COMMAND><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add userGrp" tr-obj=".UserGroup"><PARAM name="group" ptype="FROM_CM" tr-mapped-to="GroupName" /><ACTION builtin="cmwrap@cmplugin">ADD ${obj}${CMD_ATTR_tr-obj}.[${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}]</ACTION></COMMAND><COMMAND name="userGrp" view="storage-group-view" viewid="storageService=${obj};obj=${group};prompt=${prompt}-userGrp" tr-obj=".UserGroup"><PARAM name="group" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="GroupName" /></COMMAND><COMMAND name="del userGrp" tr-obj=".UserGroup" no-config-gen="true"><PARAM name="group" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="GroupName" /><ACTION builtin="cmwrap@cmplugin">DEL ${group}</ACTION></COMMAND><COMMAND name="add user" tr-obj=".UserAccount"><PARAM name="user" ptype="FROM_CM" tr-mapped-to="Username" /><ACTION builtin="cmwrap@cmplugin">ADD ${obj}${CMD_ATTR_tr-obj}.[${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}]</ACTION></COMMAND><COMMAND name="user" view="storage-user-view" viewid="storageService=${obj};obj=${user};prompt=${prompt}-user" tr-obj=".UserAccount"><PARAM name="user" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Username" /></COMMAND><COMMAND name="del user" tr-obj=".UserAccount" no-config-gen="true"><PARAM name="user" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Username" /><ACTION builtin="cmwrap@cmplugin">DEL ${user}</ACTION></COMMAND><COMMAND name="httpLocal" view="storage-httplocal-view" viewid="storageService=${obj};obj=${obj}.HTTPServer;prompt=${prompt}-httpLocal" aux_availability_condition="${obj}.HTTPServer" tr-obj=".HTTPServer" tr-config-phony="true" /><COMMAND name="httpRemote" view="storage-httpremote-view" viewid="storageService=${obj};obj=${obj}.X_ADB_HTTPServerRemote;prompt=${prompt}-httpRemote" aux_availability_condition="${obj}.X_ADB_HTTPServerRemote" tr-obj=".X_ADB_HTTPServerRemote" tr-config-phony="true" /><COMMAND name="httpsLocal" view="storage-httpslocal-view" viewid="storageService=${obj};obj=${obj}.HTTPSServer;prompt=${prompt}-httpsLocal" aux_availability_condition="${obj}.HTTPSServer" tr-obj=".HTTPSServer" tr-config-phony="true" /><COMMAND name="httpsRemote" view="storage-httpsremote-view" viewid="storageService=${obj};obj=${obj}.X_ADB_HTTPSServerRemote;prompt=${prompt}-httpsRemote" aux_availability_condition="${obj}.X_ADB_HTTPSServerRemote" tr-obj=".X_ADB_HTTPSServerRemote" tr-config-phony="true" /><COMMAND name="nas" view="storage-nas-view" viewid="storageService=${obj};obj=${obj}.NetworkServer;prompt=${prompt}-nas" tr-obj=".NetworkServer" tr-config-phony="true" /><COMMAND name="dlna" view="storage-dlna-view" viewid="storageService=${obj};obj=Device.DLNA.X_ADB_Device;prompt=${prompt}-dlna" aux_availability_condition="Device.DLNA" tr-obj="Device.DLNA.X_ADB_Device" tr-config-phony="true" /><COMMAND name="ftpLocal" view="storage-ftplocal-view" viewid="storageService=${obj};obj=${obj}${CMD_ATTR_tr-obj};prompt=${prompt}-ftpLocal" tr-obj=".FTPServer" tr-config-phony="true" /><COMMAND name="ftpRemote" view="storage-ftpremote-view" viewid="storageService=${obj};obj=${obj}${CMD_ATTR_tr-obj};prompt=${prompt}-ftpRemote" tr-obj=".X_ADB_FTPServerRemote" tr-config-phony="true" /></VIEW><VIEW name="storage-device-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_NAME})# " depth="dynamic"><COMMAND name="name"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="Name" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="volume" viewid="storageService=${storageService};obj=${name};prompt=${prompt}:${VAR_GET_NAME}-vol" view="storage-volume-view" tr-obj="Device.Services.StorageService.LogicalVolume" tr-connection="PhysicalReference"><PARAM name="name" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${CMD_ATTR_tr-obj}.[PhysicalReference=${obj}].${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Name" /></COMMAND></VIEW><VIEW name="storage-volume-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_NAME})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="mount" tr-mapped-to="Enable" tr-val="true" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="unmount" tr-mapped-to="Enable" tr-val="false" no-config-gen="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="format" no-config-gen="false"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="X_ADB_Format" /><ACTION>
                cmclient -v label GETV ${obj}.X_ADB_PartitionLabel
                cmclient -v mount GETV ${obj}.Name
                echo -n "Type exactly: YES to format $label($mount): "
                read confirm
                if [ "$confirm" = "YES" ]; then
                    echo "Formatting started"
                    . /etc/clish/quick_cm.sh setm "${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}"
                else
                    echo "Formatting cancelled"
                fi
            </ACTION></COMMAND><COMMAND name="label"><PARAM name="label" ptype="FROM_CM" tr-mapped-to="X_ADB_PartitionLabel" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add folder" tr-obj=".Folder"><PARAM name="name" ptype="FOLDER_NAME" tr-mapped-to="Name" /><ACTION>
                cmclient -v tmpObj GETO "${obj}${CMD_ATTR_tr-obj}.[${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}]"
                if [ -n "$tmpObj" ]; then
                    echo "\"${__eval PAR_ATTR_1_name}\" already exists"
                else
                    cmclient -v tmpIdx ADD "${obj}${CMD_ATTR_tr-obj}"
                    cmclient -v tmpVal SET "${obj}${CMD_ATTR_tr-obj}.$tmpIdx.${PAR_ATTR_1_tr-mapped-to}" "${__eval PAR_ATTR_1_name}"
                fi
            </ACTION></COMMAND><COMMAND name="folder" viewid="storageService=${storageService};parent=${obj}.Folder;obj=${name};prompt=${prompt}:${VAR_GET_NAME}-fold" view="storage-folder-view" tr-obj=".Folder"><PARAM name="name" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Name" /></COMMAND><COMMAND name="del folder" no-config-gen="true" tr-obj=".Folder"><PARAM name="name" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}.Folder.[Name!.].${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Name" /><ACTION builtin="cmwrap@cmplugin">DEL ${name}</ACTION></COMMAND><COMMAND name="dlna" viewid="storageService=${storageService};parent=${obj};obj=${obj}${CMD_ATTR_tr-obj};prompt=${prompt}:${VAR_GET_NAME}-dlna" view="storage-volume-dlna-view" aux_availability_condition="Device.DLNA" tr-config-phony="true" tr-obj=".X_ADB_DLNA" /></VIEW><VIEW name="storage-folder-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_NAME})# " depth="dynamic"><COMMAND name="name"><PARAM name="name" ptype="FOLDER_NAME" tr-mapped-to="Name" /><ACTION>
                cmclient -v tmpObj GETO "${parent}.[${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}]"
                if [ -n "$tmpObj" ]; then
                    echo "\"${__eval PAR_ATTR_1_name}\" already exists"
                else
                    cmclient -v tmpVal SET "${obj}.${PAR_ATTR_1_tr-mapped-to}" "${__eval PAR_ATTR_1_name}"
                fi
            </ACTION></COMMAND><COMMAND name="share" tr-mapped-to="Enable" tr-val="true"><PARAM name="name" ptype="FROM_CM" tr-mapped-to="X_ADB_ShareName" optional="true" /><PARAM name="perm" test="-n &quot;${name}&quot;" ptype="FROM_CM" tr-mapped-to="X_ADB_Permission" optional="true" /><ACTION>
            SETM="${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}"
            shareName=${__eval PAR_ATTR_1_name}
            if [ -z "$shareName" ]; then
                cmclient -v shareName GETV ${obj}.X_ADB_ShareName
                [ -z "$shareName" ] &amp;&amp; cmclient -v shareName GETV ${obj}.Name || shareName=""
            fi
            [ -n "$shareName" ] &amp;&amp; SETM="$SETM	${obj}.${PAR_ATTR_1_tr-mapped-to}=$shareName"
            [ -n "${__eval PAR_ATTR_2_name}" ] &amp;&amp; SETM="$SETM	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}"
            . /etc/clish/quick_cm.sh setm "$SETM"
            </ACTION></COMMAND><COMMAND name="unshare" tr-mapped-to="Enable" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="guest"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_AllowGuestAccess" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="user" tr-obj=".UserAccess"><PARAM name="user" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${storageService}.UserAccount.Username" tr-mapped-to="%(UserReference).Username" /><PARAM name="perm" ptype="FROM_CM" tr-mapped-to="Permissions" optional="true" /><ACTION>
            cmclient -v res ADD "${obj}${CMD_ATTR_tr-obj}.[UserReference=${user}]"
            OBJ=${obj}${CMD_ATTR_tr-obj}.$res
            SETM="$OBJ.Enable=true"
            [ -n "${__eval PAR_ATTR_2_name}" ] &amp;&amp; SETM="$SETM	$OBJ.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}"
            . /etc/clish/quick_cm.sh setm "$SETM"
            </ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no user" tr-obj=".UserAccess" no-config-gen="true"><PARAM name="user" ptype="COMPLETE" ptype_args="get_tr_obj_list_by_ref_prop ${obj}${CMD_ATTR_tr-obj}.UserReference#Username" tr-mapped-to="UserReference" /><ACTION builtin="cmwrap@cmplugin">DEL ${user}</ACTION></COMMAND><COMMAND name="group" tr-obj=".GroupAccess"><PARAM name="group" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${storageService}.UserGroup.GroupName" tr-mapped-to="%(GroupReference).GroupName" /><PARAM name="perm" ptype="FROM_CM" tr-mapped-to="Permissions" optional="true" /><ACTION>
            cmclient -v res ADD "${obj}${CMD_ATTR_tr-obj}.[GroupReference=${group}]"
            OBJ=${obj}${CMD_ATTR_tr-obj}.$res
            SETM="$OBJ.Enable=true"
            [ -n "${__eval PAR_ATTR_2_name}" ] &amp;&amp; SETM="$SETM	$OBJ.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}"
            . /etc/clish/quick_cm.sh setm "$SETM"
            </ACTION></COMMAND><COMMAND name="no group" tr-obj=".GroupAccess" no-config-gen="true"><PARAM name="group" ptype="COMPLETE" ptype_args="get_tr_obj_list_by_ref_prop ${obj}${CMD_ATTR_tr-obj}.GroupReference#GroupName" tr-mapped-to="GroupReference" /><ACTION builtin="cmwrap@cmplugin">DEL ${group}</ACTION></COMMAND><COMMAND name="show" escape_chars="&quot;"><DISPENTRY tr-mapped-to="Name,Enable,X_ADB_ShareName,X_ADB_Permission,X_ADB_SambaRefresh" /><ACTION>
            . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
            cmclient -v users GETV "${obj}.UserAccess.UserReference"
            for u_ref in $users; do
                cmclient -v u GETV $u_ref.Username
                user_txt="$u $user_txt"
            done
            show_split_text "Users" "$user_txt"
            cmclient -v groups GETV "${obj}.GroupAccess.GroupReference"
            for g in $groups; do
                cmclient -v gr GETV $g.GroupName
                group_txt="$gr $group_txt"
            done
            show_split_text "Groups" "$group_txt"
            print_horizontal_line
          </ACTION></COMMAND></VIEW><VIEW name="storage-volume-dlna-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="refresh" tr-mapped-to="Refresh" tr-val="true" no-config-gen="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><VAR name="VAR_GET_DLNA_SHARED" dynamic="true"><ACTION>
            cmclient -v s GETV ${obj}.Path
            cmclient -v val GETV ${obj}.ShareMusic
            [ "$val" = "true" ] &amp;&amp; s="$s music"

            cmclient -v val GETV ${obj}.SharePhoto
            [ "$val" = "true" ] &amp;&amp; s="$s photo"

            cmclient -v val GETV ${obj}.ShareVideo
            [ "$val" = "true" ] &amp;&amp; s="$s video"

            echo -n "$s"
            </ACTION></VAR><COMMAND name="shareFolder" tr-obj=".Folder" tr-mapped-to="Enable" tr-val="true"><PARAM name="folder" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${parent}${CMD_ATTR_tr-obj}.Name" tr-mapped-to="Path" tr-var-action="VAR_GET_DLNA_SHARED" /><PARAM name="music" ptype="SUBCOMMAND" mode="subcommand" optional="true" /><PARAM name="video" ptype="SUBCOMMAND" mode="subcommand" optional="true" /><PARAM name="photo" ptype="SUBCOMMAND" mode="subcommand" optional="true" /><PARAM name="allMedia" ptype="SUBCOMMAND" mode="subcommand" optional="true" /><ACTION>
            cmclient -v folder GETV ${__eval PAR_ATTR_1_name}.Name
            cmclient -v res ADD ${obj}${CMD_ATTR_tr-obj}.[${PAR_ATTR_1_tr-mapped-to}=$folder]
            folderObj="${obj}${CMD_ATTR_tr-obj}.$res"
            SETM="$folderObj.Enable=true"
            [ -n "${music}" -o -n "${allMedia}" ] &amp;&amp; val=true || val=false
            SETM="$SETM	$folderObj.ShareMusic=$val"
            [ -n "${photo}" -o -n "${allMedia}" ] &amp;&amp; val=true || val=false
            SETM="$SETM	$folderObj.SharePhoto=$val"
            [ -n "${video}" -o -n "${allMedia}" ] &amp;&amp; val=true || val=false
            SETM="$SETM	$folderObj.ShareVideo=$val"
            . /etc/clish/quick_cm.sh setm "$SETM"
            </ACTION></COMMAND><COMMAND name="unshareFolder" tr-obj=".Folder" no-config-gen="true"><PARAM name="folder" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.Path" tr-mapped-to="Path" /><ACTION builtin="cmwrap@cmplugin">DEL ${folder}</ACTION></COMMAND><COMMAND name="refreshFolder" no-config-gen="true" tr-obj=".Folder"><PARAM name="folder" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.Path" tr-mapped-to="Path" /><ACTION builtin="cmwrap@cmplugin">SETM ${folder}.Refresh=true</ACTION></COMMAND></VIEW><VIEW name="storage-group-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_GROUPNAME})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><VAR name="VAR_GET_GROUPNAME" dynamic="true"><ACTION builtin="cmwrap@cmplugin">GETV ${obj}.GroupName</ACTION></VAR></VIEW><VIEW name="storage-user-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_USERNAME})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><VAR name="VAR_GET_USERNAME" dynamic="true"><ACTION builtin="cmwrap@cmplugin">GETV ${obj}.Username</ACTION></VAR><COMMAND name="password" no-config-gen="true"><PARAM name="pass" ptype="FROM_CM" tr-mapped-to="Password" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><VAR name="VAR_GROPUPS" dynamic="true"><ACTION>
        cmclient -v groups GETV ${obj}.UserGroupParticipation
        set -f; IFS=","; set -- $groups; unset IFS; set +f
        for g; do
            cmclient -v o GETV $g.GroupName
            val="${val:+$val,}$o"
        done
        echo -n "$val"
        </ACTION></VAR><COMMAND name="group" /><COMMAND name="group set"><PARAM name="groups" ptype="STRING" tr-var-action="VAR_GROPUPS" tr-mapped-to="UserGroupParticipation" /><ACTION builtin="cm_list_reference_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.Services.StorageService.1.UserGroup.GroupName=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="group add" no-config-gen="true"><PARAM name="name" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${storageService}.UserGroup.GroupName" tr-mapped-to="UserGroupParticipation" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="group del" no-config-gen="true"><PARAM name="name" ptype="COMPLETE_NATIVE" ptype_args="listFromRefProp ${obj}.UserGroupParticipation#GroupName" tr-mapped-to="UserGroupParticipation" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="group show" no-config-gen="true" tr-mapped-to="UserGroupParticipation"><ACTION>
          . /etc/clish/clish-commons.sh
          show_deref_list ${obj}.${CMD_ATTR_tr-mapped-to} GroupName
      </ACTION></COMMAND><COMMAND name="group clear" tr-mapped-to="UserGroupParticipation" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="httpAccess" aux_availability_condition="Device.Services.StorageService.1.HTTPSServer"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="AllowHTTPAccess" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ftpAccess"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="AllowFTPAccess" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="remoteFtpAccess"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_AllowRemoteFTPAccess" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="ftpStartingFolder"><PARAM name="folder" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${storageService}.LogicalVolume.Folder.Name" tr-mapped-to="%(X_ADB_FTPStartingFolder).Name" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_FTPStartingFolder=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="remoteFtpStartingFolder"><PARAM name="folder" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${storageService}.LogicalVolume.Folder.Name" tr-mapped-to="%(X_ADB_RemoteFTPStartingFolder).Name" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_RemoteFTPStartingFolder=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="storage-httplocal-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="storage-http-view" help="true" completion="true" /></VIEW><VIEW name="storage-http-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="port"><PARAM name="port" ptype="FROM_CM" tr-mapped-to="PortNumber" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="root"><PARAM name="root" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${storageService}.LogicalVolume.Folder.Name" tr-mapped-to="%(X_ADB_DocumentRoot).Name" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_DocumentRoot=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface" /><COMMAND name="interface set"><PARAM name="interfaces" ptype="STRING" tr-mapped-to="X_ADB_Interface" tr-var-action="VAR_GET_X_ADB_INTERFACE" /><ACTION builtin="cm_list_reference_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.IP.Interface.Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface add" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="X_ADB_Interface" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface del" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="listFromRefProp ${obj}.X_ADB_Interface#Alias" tr-mapped-to="X_ADB_Interface" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface clear" no-config-gen="true" tr-mapped-to="X_ADB_Interface" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interface show" no-config-gen="true" tr-mapped-to="X_ADB_Interface"><ACTION>
          . /etc/clish/clish-commons.sh
          show_deref_list ${obj}.${CMD_ATTR_tr-mapped-to} Alias
      </ACTION></COMMAND><COMMAND name="reset" no-config-gen="true" tr-mapped-to="X_ADB_Reset"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=true</ACTION></COMMAND></VIEW><VIEW name="storage-httpremote-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="storage-http-view" help="true" completion="true" /></VIEW><VIEW name="storage-httpslocal-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="storage-https-view" help="true" completion="true" /><NAMESPACE ref="storage-https-view" help="true" completion="true" /></VIEW><VIEW name="storage-https-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="port"><PARAM name="port" ptype="FROM_CM" tr-mapped-to="PortNumber" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="idleTime"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="IdleTime" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tlsCheck" /><COMMAND name="tlsCheck set"><PARAM name="check" ptype="FROM_CM" tr-mapped-to="X_ADB_TLSClientCheck" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tlsCheck add" no-config-gen="true"><PARAM name="check" ptype="FROM_CM" tr-mapped-to="X_ADB_TLSClientCheck" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tlsCheck del" no-config-gen="true"><PARAM name="check" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.X_ADB_TLSClientCheck" tr-mapped-to="X_ADB_TLSClientCheck" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="tlsCheck clear" no-config-gen="true" tr-mapped-to="X_ADB_TLSClientCheck" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="tlsCheck show" no-config-gen="true" tr-mapped-to="X_ADB_TLSClientCheck"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND><COMMAND name="reset" no-config-gen="true" tr-mapped-to="X_ADB_Reset"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=true</ACTION></COMMAND></VIEW><VIEW name="storage-httpsremote-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="storage-https-view" help="true" completion="true" /><NAMESPACE ref="storage-https-view" help="true" completion="true" /></VIEW><VIEW name="storage-nas-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="smbEnable" tr-mapped-to="SMBEnable" tr-val="true"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="smbDisable" tr-mapped-to="SMBEnable" tr-val="false"><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="auth"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="NetworkProtocolAuthReq" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="autoShare" /><COMMAND name="autoShare enable" tr-mapped-to="X_ADB_AutoshareEnable" tr-val="true"><PARAM name="name" ptype="FROM_CM" allow-empty="true" tr-mapped-to="X_ADB_AutoshareName" /><PARAM name="perm" ptype="FROM_CM" tr-mapped-to="X_ADB_AutosharePermission" optional="true" /><ACTION>
        SETM="${obj}.${CMD_ATTR_tr-mapped-to}=true	${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}"
        if [ -n "${__eval PAR_ATTR_2_name}" ]; then
          SETM="$SETM	${obj}.${PAR_ATTR_2_tr-mapped-to}=${__eval PAR_ATTR_2_name}"
        fi
        . /etc/clish/quick_cm.sh setm "$SETM"
      </ACTION></COMMAND><COMMAND name="autoShare disable" tr-mapped-to="X_ADB_AutoshareEnable" tr-val="false"><ACTION>
        SETM=${obj}.${CMD_ATTR_tr-mapped-to}=false
        . /etc/clish/quick_cm.sh setm "$SETM"
      </ACTION></COMMAND><VAR name="VAR_USER_OR_GROUP" dynamic="true"><ACTION>
        cmclient -v autoshare GETV ${obj}.X_ADB_AutoshareUser
        case "$autoshare" in
        *".UserAccount."*)
        cmclient -v str GETV $autoshare.Username
        ;;
        *".UserGroup."*)
        cmclient -v str GETV $autoshare.GroupName
        ;;
        esac
        echo -n "$str"
        </ACTION></VAR><COMMAND name="autoShareUser"><PARAM name="user_or_group" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${storageService}.UserAccount.Username ${storageService}.UserGroup.GroupName" tr-mapped-to="X_ADB_AutoshareUser" tr-var-action="VAR_USER_OR_GROUP" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><VAR name="VAR_SMB_INTERFACES" dynamic="true"><ACTION>
        cmclient -v ifaces GETV ${obj}.X_ADB_SMBInterfaces
        set -f; IFS=","; set -- $ifaces; unset IFS; set +f
        for l; do
            cmclient -v o GETV $l.Alias
            val="${val:+$val,}$o"
        done
        [ -n "$val" ] &amp;&amp; echo -n "\"$val\""
        </ACTION></VAR><COMMAND name="interface" /><COMMAND name="interface set"><PARAM name="interfaces" ptype="STRING" tr-mapped-to="X_ADB_SMBInterfaces" tr-var-action="VAR_SMB_INTERFACES" /><ACTION builtin="cm_list_reference_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.IP.Interface.Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface add" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="X_ADB_SMBInterfaces" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface del" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="listFromRefProp ${obj}.X_ADB_SMBInterfaces#Alias" tr-mapped-to="X_ADB_SMBInterfaces" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface clear" no-config-gen="true" tr-mapped-to="X_ADB_SMBInterfaces" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interface show" no-config-gen="true" tr-mapped-to="X_ADB_SMBInterfaces"><ACTION>
          . /etc/clish/clish-commons.sh
          show_deref_list ${obj}.${CMD_ATTR_tr-mapped-to} Alias
      </ACTION></COMMAND></VIEW><VIEW name="storage-dlna-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="interface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(Interface).Alias" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Interface=${ifname}</ACTION></COMMAND></VIEW><VIEW name="storage-ftplocal-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="storage-ftpcommon-view" help="true" completion="true" /></VIEW><VIEW name="storage-ftpcommon-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="maxUsers"><PARAM name="num" ptype="FROM_CM" tr-mapped-to="MaxNumUsers" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="idleTime"><PARAM name="time" ptype="FROM_CM" tr-mapped-to="IdleTime" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="port"><PARAM name="port" ptype="FROM_CM" tr-mapped-to="PortNumber" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="startingFolder"><PARAM name="folder" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${storageService}.LogicalVolume.Folder.Name" tr-mapped-to="%(X_ADB_StartingFolder).Name" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.X_ADB_StartingFolder=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface" /><COMMAND name="interface set"><PARAM name="interfaces" ptype="STRING" tr-mapped-to="X_ADB_Interfaces" tr-var-action="VAR_GET_X_ADB_INTERFACES" /><ACTION builtin="cm_list_reference_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.IP.Interface.Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface add" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="X_ADB_Interfaces" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface del" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="listFromRefProp ${obj}.X_ADB_Interfaces#Alias" tr-mapped-to="X_ADB_Interfaces" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="interface clear" no-config-gen="true" tr-mapped-to="X_ADB_Interfaces" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="interface show" no-config-gen="true" tr-mapped-to="X_ADB_Interfaces"><ACTION>
          . /etc/clish/clish-commons.sh
          show_deref_list ${obj}.${CMD_ATTR_tr-mapped-to} Alias
      </ACTION></COMMAND><COMMAND name="anonUser"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="AnonymousUser.Enable" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="anonStartingFolder"><PARAM name="folder" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${storageService}.LogicalVolume.Folder.Name" tr-mapped-to="%(AnonymousUser.StartingFolder).Name" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.AnonymousUser.StartingFolder=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="anonReadOnly"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="AnonymousUser.ReadOnlyAccess" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="anonOnly"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="AnonymousUser.X_ADB_OnlyAnonymousUser" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND></VIEW><VIEW name="storage-ftpremote-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="storage-ftpcommon-view" help="true" completion="true" /></VIEW><VIEW name="routing-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><COMMAND name="add ipv6Route" tr-obj=".IPv6Forwarding"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${obj}${CMD_ATTR_tr-obj} Alias=${alias}</ACTION></COMMAND><COMMAND name="ipv6Route" view="ipv6Route-view" viewid="obj=${alias};prompt=${prompt}-ipv6" tr-obj=".IPv6Forwarding"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del ipv6Route" no-config-gen="true" tr-obj=".IPv6Forwarding"><PARAM name="appid" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${appid}</ACTION></COMMAND><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><COMMAND name="add" /><COMMAND name="del" /><COMMAND name="add ipv4Route" tr-obj=".IPv4Forwarding"><PARAM name="alias" ptype="FROM_CM" optional="true" tr-mapped-to="Alias" /><ACTION builtin="cmwrap_add_with_key@cmplugin">${obj}${CMD_ATTR_tr-obj} Alias=${alias}</ACTION></COMMAND><COMMAND name="ipv4Route" view="ipv4Route-view" viewid="obj=${alias};prompt=${prompt}-ipv4" tr-obj=".IPv4Forwarding"><PARAM name="alias" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Alias" /></COMMAND><COMMAND name="del ipv4Route" no-config-gen="true" tr-obj=".IPv4Forwarding"><PARAM name="appid" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropDel ${obj}${CMD_ATTR_tr-obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="Alias" /><ACTION builtin="cmwrap@cmplugin">DEL ${appid}</ACTION></COMMAND></VIEW><VIEW name="ipv6Route-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="destPrefix"><PARAM name="prefix" ptype="IPV6_ADDRESS_WITH_PREFIX" tr-mapped-to="DestIPPrefix" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no" /><COMMAND name="no destPrefix" tr-mapped-to="DestIPPrefix" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="classificationIndex"><PARAM name="index" ptype="COMPLETE" ptype_args="get_forwarding_policies" tr-var-action="VAR_RUNCONF_CLASSINDEX_ROUTING" /><PARAM name="new_value" ptype="UINT" optional="true" /><ACTION>
          val=${index}
          if [ "${index}" = "new" ]; then
              if [ -z "${new_value}" ]; then
                  echo "Provide a new value as the second parameter"
                  exit
              fi
              val=${new_value}
          else
              if [ -n "${new_value}" ]; then
                  echo "Warning: the second parameter ignored (valid only for \"new\")"
              fi
          fi
          . /etc/clish/quick_cm.sh setm "${obj}.ForwardingPolicy=$val"
      </ACTION></COMMAND><COMMAND name="no classificationIndex" tr-mapped-to="ForwardingPolicy" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="nextHop"><PARAM name="address" ptype="IPV6_ADDRESS" tr-mapped-to="NextHop" /><WARN condition="${obj}.[Interface!]">Interface is also set. Please remember to check if nextHop and interface are consistent with each other.</WARN><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no nextHop" tr-mapped-to="NextHop" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="interface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(Interface).Alias" /><WARN condition="${obj}.[NextHop!]">NextHop is also set. Please remember to check if nextHop and interface are consistent with each other.</WARN><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Interface=${ifname}</ACTION></COMMAND><COMMAND name="no interface" tr-mapped-to="Interface" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="forwardingMetric"><PARAM name="metric" ptype="FROM_CM" tr-mapped-to="ForwardingMetric" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no forwardingMetric" tr-mapped-to="ForwardingMetric" tr-val="-1"><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="ipv4Route-view" prompt="${CLISH_PROMPT}(${prompt}:${VAR_GET_ALIAS})# " depth="dynamic"><NAMESPACE ref="generic-obj-show-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-alias-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><NAMESPACE ref="generic-obj-permissions-view" help="true" completion="true" /><COMMAND name="destAddr"><PARAM name="addr" ptype="FROM_CM" tr-mapped-to="DestIPAddress" /><PARAM name="mask" ptype="FROM_CM" optional="true" tr-mapped-to="DestSubnetMask" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.DestIPAddress=${addr}	${obj}.DestSubnetMask=${mask}</ACTION></COMMAND><COMMAND name="no" /><COMMAND name="no destAddr" tr-mapped-to="DestIPAddress" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.DestIPAddress=	${obj}.DestSubnetMask=</ACTION></COMMAND><COMMAND name="classificationIndex"><PARAM name="index" ptype="COMPLETE" ptype_args="get_forwarding_policies" tr-var-action="VAR_RUNCONF_CLASSINDEX_ROUTING" /><PARAM name="new_value" ptype="UINT" optional="true" /><ACTION>
          val=${index}
          if [ "${index}" = "new" ]; then
              if [ -z "${new_value}" ]; then
                  echo "Provide a new value as the second parameter"
                  exit
              fi
              val=${new_value}
          else
              if [ -n "${new_value}" ]; then
                  echo "Warning: the second parameter ignored (valid only for \"new\")"
              fi
          fi
          . /etc/clish/quick_cm.sh setm "${obj}.ForwardingPolicy=$val"
      </ACTION></COMMAND><COMMAND name="no classificationIndex" tr-mapped-to="ForwardingPolicy" tr-val="-1"><ACTION builtin="cmwrap@cmplugin">SET ${obj}.${CMD_ATTR_tr-mapped-to} ${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="gateway"><PARAM name="addr" ptype="FROM_CM" tr-mapped-to="GatewayIPAddress" /><WARN condition="${obj}.[Interface!]">Interface is also set. Please remember to check if gateway and interface are consistent with each other.</WARN><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no gateway" tr-mapped-to="GatewayIPAddress" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="interface"><PARAM name="ifname" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="%(Interface).Alias" /><WARN condition="${obj}.[GatewayIPAddress!]">Gateway is also set. Please remember to check if gateway and interface are consistent with each other.</WARN><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.Interface=${ifname}</ACTION></COMMAND><COMMAND name="no interface" tr-mapped-to="Interface" tr-val=""><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="autoGateway"><PARAM name="val" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="X_ADB_AutoGateway" /><WARN condition="${obj}.[Interface!].[X_ADB_AutoGateway=true]">This action will override any previous explicit IPv4 address set for this interface through the "interface" command</WARN><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="forwardingMetric"><PARAM name="metric" ptype="FROM_CM" tr-mapped-to="ForwardingMetric" /><ACTION builtin="cmset@cmplugin" /></COMMAND><COMMAND name="no forwardingMetric" tr-mapped-to="ForwardingMetric" tr-val="-1"><ACTION builtin="cmset@cmplugin" /></COMMAND></VIEW><VIEW name="igmpproxy-view" prompt="${CLISH_PROMPT}(${prompt})# " depth="dynamic"><NAMESPACE ref="generic-obj-enable-view" help="true" completion="true" /><COMMAND name="show" show_all_except="yes" escape_chars="&quot;"><DISPENTRY tr-mapped-to="DownstreamInterfaces">
            show_deref_list_as_list ${obj}.DownstreamInterfaces Alias
        </DISPENTRY><DISPENTRY tr-mapped-to="UpstreamInterfaces">
            show_deref_list_as_list ${obj}.UpstreamInterfaces Alias
        </DISPENTRY><DISPENTRY tr-mapped-to="LANVersion">
            cmclient GETV -v ver ${obj}.LANVersion
            if [ "$ver" = "0" ]; then
                echo -n "auto"
            else
                echo -n "$ver"
            fi
        </DISPENTRY><DISPENTRY tr-mapped-to="WANVersion">
            cmclient GETV -v ver ${obj}.WANVersion
            if [ "$ver" = "0" ]; then
                echo -n "auto"
            else
                echo -n "$ver"
            fi
        </DISPENTRY><ACTION>
        . /etc/clish/clish-commons.sh &amp;&amp; show_object "${obj}" "${DISP_ENTRIES}" "${CMD_ATTR_show_all_except}"
        </ACTION></COMMAND><VAR name="VAR_WAN_INTERFACES" dynamic="true"><ACTION>
        cmclient -v ifaces GETV ${obj}.UpstreamInterfaces
        set -f; IFS=","; set -- $ifaces; unset IFS; set +f
        for l; do
            cmclient -v o GETV $l.Alias
            val="${val:+$val,}$o"
        done
        [ -n "$val" ] &amp;&amp; echo -n "\"$val\""
        </ACTION></VAR><COMMAND name="upstreamInterface" /><COMMAND name="upstreamInterface set"><PARAM name="interfaces" ptype="STRING" tr-mapped-to="UpstreamInterfaces" tr-var-action="VAR_WAN_INTERFACES" /><ACTION builtin="cm_list_reference_wrap@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.IP.Interface.Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="upstreamInterface add" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByProp Device.IP.Interface.Alias" tr-mapped-to="UpstreamInterfaces" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="upstreamInterface del" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="listFromRefProp ${obj}.${PAR_ATTR_1_tr-mapped-to}#Alias" tr-mapped-to="UpstreamInterfaces" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="upstreamInterface clear" tr-mapped-to="UpstreamInterfaces" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="upstreamInterface show" no-config-gen="true" tr-mapped-to="UpstreamInterfaces"><ACTION>
          . /etc/clish/clish-commons.sh
          show_deref_list ${obj}.${CMD_ATTR_tr-mapped-to} Alias
      </ACTION></COMMAND><COMMAND name="upstreamInterfaceAutoCfg"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="UpstreamInterfaceAutoConfig" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><VAR name="VAR_LAN_INTERFACES" dynamic="true"><ACTION>
        . /etc/clish/clish-commons.sh
        show_deref_list_runconf ${obj}.DownstreamInterfaces
        </ACTION></VAR><COMMAND name="downstreamInterface" /><COMMAND name="downstreamInterface set"><PARAM name="interfaces" ptype="STRING" tr-mapped-to="DownstreamInterfaces" tr-var-action="VAR_LAN_INTERFACES" /><ACTION builtin="cm_list_reference_wrap_with_pref@cmplugin">SET ${obj}.${PAR_ATTR_1_tr-mapped-to}#Device.Ethernet.Interface.[Upstream=false].Alias#Device.WiFi.SSID.Alias=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="downstreamInterface add" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="getObjByPropWithPref Device.Ethernet.Interface.[Upstream=false].Alias Device.WiFi.SSID.Alias" tr-mapped-to="DownstreamInterfaces" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="downstreamInterface del" no-config-gen="true"><PARAM name="interface" ptype="COMPLETE_NATIVE" ptype_args="listFromRefPropWithPref ${obj}.${PAR_ATTR_1_tr-mapped-to}#Alias" tr-mapped-to="DownstreamInterfaces" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="downstreamInterface clear" tr-mapped-to="DownstreamInterfaces" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="downstreamInterface show" no-config-gen="true" tr-mapped-to="DownstreamInterfaces"><ACTION>
          . /etc/clish/clish-commons.sh
          show_deref_list ${obj}.${CMD_ATTR_tr-mapped-to} Alias true
      </ACTION></COMMAND><COMMAND name="downstreamIgmpVersion"><PARAM name="ver" ptype="IGMP_PROTO_VER" tr-mapped-to="LANVersion" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="upstreamIgmpVersion"><PARAM name="ver" ptype="IGMP_PROTO_VER" tr-mapped-to="WANVersion" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="snooping"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="Snooping" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="fastLeave"><PARAM name="value" ptype="ENABLEORDISABLE_BOOLEAN" tr-mapped-to="FastLeave" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="queryNum"><PARAM name="count" ptype="FROM_CM" tr-mapped-to="LastMemberQueryCnt" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="queryInt"><PARAM name="int" ptype="FROM_CM" tr-mapped-to="LastMemberQueryInt" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="skipGroups" /><COMMAND name="skipGroups set"><PARAM name="addr" ptype="LIST_IPV4_MULTICAST_ADDRESS" tr-mapped-to="SkipGroups" /><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${PAR_ATTR_1_tr-mapped-to}=${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="skipGroups add" no-config-gen="true"><PARAM name="addr" ptype="IPV4_MULTICAST_ADDRESS" tr-mapped-to="SkipGroups" /><ACTION builtin="cm_list_wrap@cmplugin">ADD ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="skipGroups del" no-config-gen="true"><PARAM name="addr" ptype="COMPLETE_NATIVE" ptype_args="listFromProp ${obj}.${PAR_ATTR_1_tr-mapped-to}" tr-mapped-to="SkipGroups" /><ACTION builtin="cm_list_wrap@cmplugin">DEL ${obj}.${PAR_ATTR_1_tr-mapped-to} ${__eval PAR_ATTR_1_name}</ACTION></COMMAND><COMMAND name="skipGroups clear" tr-mapped-to="SkipGroups" tr-val=""><ACTION builtin="cmwrap@cmplugin">SETM ${obj}.${CMD_ATTR_tr-mapped-to}=${CMD_ATTR_tr-val}</ACTION></COMMAND><COMMAND name="skipGroups show" no-config-gen="true" tr-mapped-to="SkipGroups"><ACTION builtin="cm_list_wrap@cmplugin">SHOW ${obj}.${CMD_ATTR_tr-mapped-to}</ACTION></COMMAND></VIEW><VIEW name="factory-view" prompt="${CLISH_PROMPT}(factory)# "><COMMAND name="exit" view="main-view">
    </COMMAND><COMMAND name="adslinfo"><ACTION>
        [ -x  /bin/xdslctl ] &amp;&amp; xdslctl info || echo "ADSL info not available"
        </ACTION></COMMAND><COMMAND name="getdeviceinfo"><ACTION>
        cmclient -v vname GETV Device.DeviceInfo.Manufacturer
        cmclient -v voui GETV Device.DeviceInfo.ManufacturerOUI
        echo "vendor name:" $vname
        echo "vendor OUI :" $voui
        </ACTION></COMMAND><COMMAND name="getusbdevices"><ACTION>
        cat /proc/bus/usb/devices 2>/dev/null || lsusb
        </ACTION></COMMAND><COMMAND name="boot-completed"><ACTION>
        cmclient GETV Device.DeviceInfo.X_ADB_BootDone
        </ACTION></COMMAND><COMMAND name="factory-check"><ACTION>
        cmclient GETV Device.X_ADB_FactoryData.FactoryMode
        </ACTION></COMMAND><COMMAND name="factorywlup" help="enable WiFi"><PARAM name="interface" help="interface to set" ptype="STRING" /><ACTION>
        interface=${interface}
        cmclient -v ssid GETO "Device.WiFi.SSID.[Name=$interface]"
        if [ -z "$ssid" ]; then
            echo Wrong interface $interface
        else
            cmclient -v radio GETV "$ssid.LowerLayers"
            cmclient -v ap GETO "Device.WiFi.AccessPoint.[SSIDReference=$ssid]"
            cmclient -v opBand GETV "$radio.OperatingFrequencyBand"
            cmclient -v mode GETV "$ap.Security.ModeEnabled"
            case "$mode" in
            WPA*)
                cmclient -v wkey GETV "$ap.Security.KeyPassphrase"
            ;;
            WEP*)
                cmclient -v wkey GETV "$ap.Security.WEPKey"
            ;;
            esac
            setem="$radio.AutoChannelEnable=false"
            if [ "$opBand" = "2.4GHz" ]; then
                setem="$setem	$radio.Channel=6"
            else
                setem="$setem	$radio.Channel=36"
            fi
            if [ "$mode" != "None" -a "$wkey" = "" ]; then
                setem="$setem	$ap.Security.ModeEnabled=None"
            fi
            setem="$setem	$ap.Enable=true"
            setem="$setem	$ssid.Enable=true"
            cmclient SETEM "$setem"
            cmclient SET "$radio.Enable" true
        fi
        </ACTION></COMMAND><COMMAND name="factorywldown" help="disable WiFi"><PARAM name="interface" help="interface to set" ptype="STRING" /><ACTION>
        interface=${interface}
        cmclient -v ssid GETO "Device.WiFi.SSID.[Name=$interface]"
        if [ -z "$ssid" ]; then
            echo Wrong interface $interface
        else
            cmclient -v radio GETV "$ssid.LowerLayers"
            cmclient -v ap GETO "Device.WiFi.AccessPoint.[SSIDReference=$ssid]"
            cmclient SET $ssid.Enable false
            cmclient SET $radio.Enable false
            cmclient SET $ap.Enable false
        fi
        </ACTION></COMMAND><COMMAND name="getSettings"><ACTION>
        cmclient -v mac GETV Device.X_ADB_FactoryData.BaseMACAddress
        cmclient -v serial GETV Device.DeviceInfo.SerialNumber
        cmclient -v pclass GETV Device.DeviceInfo.ProductClass
        cmclient -v hwver GETV Device.DeviceInfo.HardwareVersion
        cmclient -v model GETV Device.DeviceInfo.ModelName

        echo "MAC:" `echo "$mac"|sed -e "s/.*;/\ /"`
        echo "SerialNumber: " `echo "$serial"|sed -e "s/.*;/\ /"`
        echo "HwVersion: " $hwver
        echo "ProductionClass: " $pclass
        echo "Model Name :" $model

        cmclient -v wifi_obj1 GETO Device.WiFi.SSID.[Name=wl0]
        if [ -n "$wifi_obj1" ]; then
            cmclient -v ssid1 GETV "$wifi_obj1".SSID
            cmclient -v wepKey1 GETV Device.WiFi.AccessPoint.[SSIDReference="$wifi_obj1"].Security.WEPKey
            cmclient -v wpaKey1 GETV Device.WiFi.AccessPoint.[SSIDReference="$wifi_obj1"].Security.KeyPassphrase
            ascii1=`. /etc/clish/hex2ascii.sh $wepKey1`
            wepKeystr1=`echo "$wepKey1"|sed -e "s/.*;/\ /"`

            echo "SSID: " `echo "$ssid1"|sed -e "s/.*;/\ /"`
            echo "WEP Key: " $wepKeystr1
            echo "ascii WEP key: $ascii1"
            echo "WPA Key: " `echo "$wpaKey1"|sed -e "s/.*;/\ /"`
        fi

        cmclient -v wifi_obj2 GETO Device.WiFi.SSID.[Name=wl1]
        if [ -n "$wifi_obj2" ]; then
            cmclient -v ssid2 GETV "$wifi_obj2".SSID
            cmclient -v wepKey2 GETV Device.WiFi.AccessPoint.[SSIDReference="$wifi_obj2"].Security.WEPKey
            cmclient -v wpaKey2 GETV Device.WiFi.AccessPoint.[SSIDReference="$wifi_obj2"].Security.KeyPassphrase
            ascii2=`. /etc/clish/hex2ascii.sh $wepKey2`
            wepKeystr2=`echo "$wepKey2"|sed -e "s/.*;/\ /"`

            echo "SSID 2: " `echo "$ssid2"|sed -e "s/.*;/\ /"`
            echo "WEP Key 2: " $wepKeystr2
            echo "ascii WEP key 2: $ascii2"
            echo "WPA Key 2: " `echo "$wpaKey2"|sed -e "s/.*;/\ /"`
        fi

        cmclient -v rpcal2g GETV Device.X_ADB_FactoryData.Rpcal2g
        cmclient -v rpcal5gb0 GETV Device.X_ADB_FactoryData.Rpcal5gb0
        cmclient -v rpcal5gb1 GETV Device.X_ADB_FactoryData.Rpcal5gb1
        cmclient -v rpcal5gb2 GETV Device.X_ADB_FactoryData.Rpcal5gb2
        cmclient -v rpcal5gb3 GETV Device.X_ADB_FactoryData.Rpcal5gb3
        cmclient -v rpcal5gb01core3 GETV Device.X_ADB_FactoryData.Rpcal5gb01core3
        cmclient -v rpcal5gb23core3 GETV Device.X_ADB_FactoryData.Rpcal5gb23core3
        echo "Beamforming rpcal2g" $rpcal2g
        echo "Beamforming rpcal5gb0" $rpcal5gb0
        echo "Beamforming rpcal5gb1" $rpcal5gb1
        echo "Beamforming rpcal5gb2" $rpcal5gb2
        echo "Beamforming rpcal5gb3" $rpcal5gb3
        echo "Beamforming rpcal5gb01core3" $rpcal5gb01core3
        echo "Beamforming rpcal5gb23core3" $rpcal5gb23core3
        </ACTION></COMMAND><COMMAND name="factory-mode" help="hidden"><ACTION>
        cmclient DUMPDM FactoryData /tmp/cfg/FactoryData.xml > /dev/null
        nvramUpdate Feature 0x2 > /dev/null
        cmclient REBOOT > /dev/null
        </ACTION></COMMAND></VIEW><PTYPE name="STRING" pattern=".+" /><PTYPE name="COMPLETE_NATIVE" method="select" pattern="" builtin="clish_ptype_complete_native@cmplugin" /><PTYPE name="FROM_CM" method="select" pattern="" builtin="clish_ptype_from_cm@cmplugin" /><PTYPE name="COMPLETE" method="select" pattern="/etc/clish/completion.sh" builtin="clish_ptype_complete@cmplugin" /><PTYPE name="TYPE_U32" method="unsignedInteger" pattern="0..4294967295" /><PTYPE name="IP_ADDRESS_OR_HOSTNAME" method="select" pattern="ip_addr_match#ipv4_addr@#ipv6_addr@#hostname" builtin="clish_ptype_from_plugin@cmplugin" help="ip address or hostname" /><PTYPE name="URL_PLAIN" pattern="(http|ftp)://([_[:alnum:]]+:{0,1}[_[:alnum:]]*@)?([^[:space:]]+)(:[0-9]+)?(/|/([[_[:alnum:]]#!:.?+=&amp;%@!-/]))?" /><PTYPE name="UINT_OR_ASTERISK" pattern="[0-9]+|\*" /><PTYPE name="IP_ADDRESS_OR_SKIPPARAM" method="select" pattern="ip_addr_match#ipv4_addr@#ipv6_addr@#skipparam" builtin="clish_ptype_from_plugin@cmplugin" help="ip address, or '*' to skip parameter" /><PTYPE name="UINT" pattern="[0-9]+" /><PTYPE name="PCAPFILTER" pattern="[^`\\$]*" help="pcap-filter: enclose the filter in double quote characters. Use * to skip packet filtering" /><PTYPE name="FOLDER_NAME" pattern="(([^./\*&quot;'?&lt;&gt;])|([^./\*&quot;'?&lt;&gt;][^/\*&quot;'?&lt;&gt;])|([^/\*&quot;'?&lt;&gt;][^./\*&quot;'?&lt;&gt;])|([^/\*&quot;'?&lt;&gt;]{3,}))" /><PTYPE name="PRIORITY" pattern="[0-7*]" /><PTYPE name="ENABLEORDISABLE_BOOLEAN" method="select" pattern="enable(true) disable(false)" /><PTYPE name="BOOLEAN" method="select" pattern="true(true) false(false)" /><PTYPE name="BACKUP_CONF_TYPE" method="select" pattern="full(full) user(user)" /><PTYPE name="IPV4_ADDRESS" method="select" pattern="ipv4_addr@" builtin="clish_ptype_from_plugin@cmplugin" help="ipv4 address" /><PTYPE name="LIST_IPV4_ADDRESS_WITH_PREFIX" method="select" pattern="ipv4_addr_list_par@_/_0_32" builtin="clish_ptype_from_plugin@cmplugin" help="coma-separated list of ipv4 addresses in CIDR notation" /><PTYPE name="IPV4_ADDRESS_WITH_PREFIX" method="select" pattern="ipv4_addr_par@_/_0_32" builtin="clish_ptype_from_plugin@cmplugin" help="ipv4 address in CIDR notation" /><PTYPE name="IPV4_MASK" method="select" pattern="ipv4_subnet_mask" builtin="clish_ptype_from_plugin@cmplugin" help="ipv4 mask ex. 255.255.255.0" /><PTYPE name="IPV6_ADDRESS_WITH_PREFIX" method="select" pattern="ipv6_addr_par@_/_0_128" builtin="clish_ptype_from_plugin@cmplugin" help="ipv6 prefix in CIDR notation" /><PTYPE name="FIREWALL_RULE_TARGET_ACTION" method="select" pattern="Drop(Drop) Accept(Accept) Reject(Reject) Return(Return)" /><PTYPE name="COMPLETE_READ" method="select" pattern="/etc/clish/completion.sh" builtin="clish_ptype_complete_read@cmplugin" /><PTYPE name="EXCLUDE" method="select" pattern="exclude(true) (false)" /><PTYPE name="QOS_IP_VER" method="select" pattern="ipv4(4) ipv6(6) any(-1)" /><PTYPE name="QOS_DSCP_RANGE" method="select" pattern="CS0(0) CS1(8) AF11(10) AF12(12) AF13(14) CS2(16) AF21(18) AF22(20) AF23(22) CS3(24) AF31(26) AF32(28) AF33(30) CS4(32) AF41(34) AF42(36) AF43(38) CS5(40) EF(46) CS6(48) CS7(56)" /><PTYPE name="PROTOCOL_TYPE_WITHOUT_X_ADB" pattern="(((TCP|UDP|TCPUDP):(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-9][0-9]{0,3}|[1-5][0-9]{4})-(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-9][0-9]{0,3}|[1-5][0-9]{4})[,]?)|((TCP|UDP|TCPUDP):(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-9][0-9]{0,3}|[1-5][0-9]{4})[,]?))|((TCP|UDP|TCPUDP):(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-9][0-9]{0,3}|[1-5][0-9]{4})[,]?)|((TCP|UDP|TCPUDP):(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-9][0-9]{0,3}|[1-5][0-9]{4})-(6553[0-5]|655[0-2][0-9]|65[0-4][0-9]{2}|6[0-4][0-9]{3}|[1-9][0-9]{0,3}|[1-5][0-9]{4})[,]?)" /><PTYPE name="LIST_IPV4_ADDRESS" method="select" pattern="ipv4_addr_list@" builtin="clish_ptype_from_plugin@cmplugin" help="coma-separated list of ipv4 addresses" /><PTYPE name="IPV6_ULA_PREFIX" pattern="fd[0-9a-f]{2}:[0-9a-f]{4}:[0-9a-f]{4}" help="ipv6 ULA prefix (/48) of form fdXX:XXXX:XXXX" /><PTYPE name="TYPE_U16" method="integer" pattern="0..65535" /><PTYPE name="VOIP_FACILITY_ACTION_TYPE" method="select" pattern="Unset() UseLine(X_ADB_USE_LINE) EmergencyNumber(X_ADB_EMERGENCY_NUMBER) CallForwardingOnNoReplyActivate(CFNR_ACTIVATE) CallForwardingOnNoReplyDeactivate(CFNR_DEACTIVATE) CallForwardingOnNoReplyErase(CFNR_ERASE) CallForwardingOnNoReplyRegister(CFNR_REGISTER) CallForwardingOnBusyActivate(CFB_ACTIVATE) CallForwardingOnBusyDeactivate(CFB_DEACTIVATE) CallForwardingOnBusyDestinationErase(CFB_ERASE) CallForwardingOnBusyDestinationRegister(CFB_REGISTER) CallForwardingUnconditionalActivate(CFU_ACTIVATE) CallForwardingUnconditionalDeactivate(CFU_DEACTIVATE) CallForwardingUnconditionalErase(CFU_ERASE) CallForwardingUnconditionalRegister(CFU_REGISTER) DoNotDisturbActivate(X_ADB_DND_ACTIVATE) DoNotDisturbDeactivate(X_ADB_DND_DEACTIVATE) CallingLineIdentificationRestrictionActivate(CLIR_ACTIVATE) CallingLineIdentificationRestrictionDeactivate(CLIR_DEACTIVATE) CallWaitingActivate(CW_ACTIVATE) CallWaitingDeactivate(CW_DEACTIVATE) ConferenceCallActivate(X_ADB_CONFCALL_ACTIVATE) ConferenceCallDeactivate(X_ADB_CONFCALL_DEACTIVATE) RequireMaxDigitsLengthNumber(X_ADB_DIAL_MAX)" /><PTYPE name="FAX_PASSTHROUGH_CODEC" method="select" pattern="G.711ALaw(G.711ALaw) G.711MuLaw(G.711MuLaw)" /><PTYPE name="SIP_EVENT_SUBSCRIBE_EVENT" method="select" pattern="message-summary(message-summary) reg(reg) as-feature-event(as-feature-event) ua-profile(ua-profile)" /><PTYPE name="FAX_T38_BIT_RATE" method="select" pattern="2400(2400) 4800(4800) 7200(7200) 9600(9600) 12000(12000) 14400(14400) 33600(33600)" /><PTYPE name="FAX_T38_PACKET_RATE" method="select" pattern="10(10) 20(20) 30(30) 40(40)" /><PTYPE name="HEX" pattern="([0-9A-Fa-f]{2})+" /><PTYPE name="MTU" pattern="(6553[0-5]|655[0-2][0-9]|65[0-4][0-9][0-9]|6[0-4][0-9][0-9][0-9]|[1-5][0-9]{4}|[1-9][0-9]{2,3}|6[4-9]|[7-9][0-9]|auto)" /><PTYPE name="IPV6_ADDRESS" method="select" pattern="ipv6_addr@" builtin="clish_ptype_from_plugin@cmplugin" help="ipv6 address" /><PTYPE name="UINT_1_128" method="integer" pattern="1..128" /><PTYPE name="ISO8601_DATE" pattern="[0-9]{4}-[0-1][0-9]-[0-3][0-9]T[0-2][0-9]:[0-5][0-9]:[0-5][0-9]Z|inf" /><PTYPE name="TYPE_U8" method="integer" pattern="0..255" /><PTYPE name="TYPE_S8" method="integer" pattern="-128..127" /><PTYPE name="TYPE_S16" method="integer" pattern="-32768..32767" /><PTYPE name="TYPE_S32" method="integer" pattern="-2147483648..2147483647" /><PTYPE name="LIST_IPV6_ADDRESS" method="select" pattern="ipv6_addr_list@" builtin="clish_ptype_from_plugin@cmplugin" help="coma-separated list of ipv6 addresses" /><PTYPE name="NUMERIC_BOOLEAN" method="select" pattern="1(true) 0(false)" /><PTYPE name="IPV6_MASK" method="select" pattern="ipv6_subnet_mask" builtin="clish_ptype_from_plugin@cmplugin" help="ipv6 mask ex. ffff::" /><PTYPE name="LIST_IPV6_ADDRESS_WITH_PREFIX" method="select" pattern="ipv6_addr_list_par@_/_0_128" builtin="clish_ptype_from_plugin@cmplugin" help="coma-separated list of ipv6 addresses in CIDR notation" /><PTYPE name="ENABLEORDISABLE_ONOFF" method="select" pattern="enable(on) disable(off)" /><PTYPE name="NEG_ENABLEORDISABLE_BOOLEAN" method="select" pattern="enable(false) disable(true)" /><PTYPE name="ENABLEORDISABLE" method="select" pattern="enable(1) disable(0)" /><PTYPE name="IP_ADDRESS_OR_PREFIX" method="select" pattern="ip_addr_match#ipv4_addr_oppa@_/_0_32#ipv6_addr_oppa@_/_0_128" builtin="clish_ptype_from_plugin@cmplugin" help="ip address or ip prefix in CIDR notation" /><PTYPE name="LIST_IP_ADDRESS_OR_PREFIX" method="select" pattern="ip_addr_list_match#ipv4_addr_oppa@_/_0_32#ipv6_addr_oppa@_/_0_128" builtin="clish_ptype_from_plugin@cmplugin" help="coma-separated list of ip address or ip prefix in CIDR notation" /><PTYPE name="LIST_MAC_ADDRESS_WITH_OPT_MASK" method="select" pattern="mac_addr_list_with_opma" builtin="clish_ptype_from_plugin@cmplugin" help="coma-separated list of mac addresses with optional mask" /><PTYPE name="MAC_ADDRESS_WITH_OPT_MASK" method="select" pattern="mac_addr_with_opma" builtin="clish_ptype_from_plugin@cmplugin" help="mac address with optional mask" /><PTYPE name="LIST_DAYS_OF_WEEK" pattern="(Monday|Tuesday|Wednesday|Thrusday|Friday|Saturday|Sunday)(,(Monday|Tuesday|Wednesday|Thrusday|Friday|Saturday|Sunday))+" /><PTYPE name="QOS_POLICER_ACTION_TYPE_DSCP" pattern="([0-9]|[1-5][0-9]|6[0-3])" /><PTYPE name="QOS_POLICER_ACTION_TYPE_PRIO" pattern=":[0-7]" /><PTYPE name="QOS_POLICER_ACTION_TYPE_DSCP_PRIO" pattern="([0-9]|[1-5][0-9]|6[0-3]):[0-7]" /><PTYPE name="UINT_0_100" method="integer" pattern="0..100" /><PTYPE name="UINT_101_MAX" method="integer" pattern="101..2147483647" /><PTYPE name="IP_ADDRESS" method="select" pattern="ip_addr_match#ipv4_addr@#ipv6_addr@" builtin="clish_ptype_from_plugin@cmplugin" help="ip address" /><PTYPE name="BRIDGE_STD" method="select" pattern="802.1D(802.1D-2004) 802.1Q(802.1Q-2005)" /><PTYPE name="SUBCOMMAND" pattern="[^\]+" help="String" /><PTYPE name="IGMP_PROTO_VER" method="select" pattern="1(1) 2(2) 3(3) auto(0)" /><PTYPE name="LIST_IPV4_MULTICAST_ADDRESS" method="select" pattern="ipv4_addr_list@m" builtin="clish_ptype_from_plugin@cmplugin" help="coma-separated list of ipv4 multicast addresses" /><PTYPE name="IPV4_MULTICAST_ADDRESS" method="select" pattern="ipv4_addr@m" builtin="clish_ptype_from_plugin@cmplugin" help="ipv4 multicast address" /></CLISH_MODULE>
